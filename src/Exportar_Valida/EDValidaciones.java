/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Exportar_Valida;

/**
 *
 * @author JOSE.CABRERA
 *//*ll */
import static Exportar_Valida.V1Validaciones.SaveFileTo;
import QuerysNuevosVal.QNuevos;
import Screen_laborales.PValidacion;
import static Screen_laborales.PValidacion.NENTIDAD;
import static Screen_laborales.PValidacion.periodoAnt;
import static Screen_laborales.PValidacion.clave_entidad;
import static Screen_laborales.PValidacion.clave_organo;
import static Screen_laborales.PValidacion.periodo;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.FileDialog;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.border.Border;
import mx.org.querys.NotNull_Estruc_Definitiva.EDColect_Econom;
import mx.org.querys.NotNull_Estruc_Definitiva.EDControl_expediente;
import mx.org.querys.NotNull_Estruc_Definitiva.EDEjecucion;
import mx.org.querys.NotNull_Estruc_Definitiva.EDHuelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDIndividual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDOrdinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDParaprocesal;
import mx.org.querys.NotNull_Estruc_Definitiva.EDPart_Act_Individual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDPart_Act_huelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDPart_Act_ordinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDPart_Dem_huelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDPart_Dem_individual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDPart_Dem_ordinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQAudiencias;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQColec_Econom;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQDesgloses;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQEjecucion;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQHuelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQIndividual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosColectivo;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosColectivoEconomico;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosEjecucion;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosHuelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosIndividual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosOrdinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQNuevosParaprocesal;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQOrdinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQParaprocesal;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_act_huelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_act_individual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_act_nat_eco;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_act_ordinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_dem_huelga;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_dem_individual;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_dem_nat_eco;
import mx.org.querys.NotNull_Estruc_Definitiva.EDQPart_dem_ordinario;
import mx.org.querys.NotNull_Estruc_Definitiva.EDV3Colectivo;
import mx.org.querys.NotNull_Estruc_Definitiva.EDV3Part_Act_colectivo;
import mx.org.querys.NotNull_Estruc_Definitiva.EDV3Part_Dem_colectivo;
import mx.org.querys.NotNull_Estruc_Definitiva.EDV3QColectivo;
import mx.org.querys.NotNull_Estruc_Definitiva.EDV3QPart_act_colectivo;
import mx.org.querys.NotNull_Estruc_Definitiva.EDV3QPart_dem_colectivo;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.hssf.util.Region;

/**
 *
 * @author ANTONIO.CORIA
 */
public class EDValidaciones {

    ArrayList<String[]> ArrayResult;
    String[] parts;
    String parts0 = "", parts1 = "", parts2 = "", partsfechas = "";
    Progreso pro = new Progreso();
   JFrame f = new JFrame("Progreso Exporta .xls");
  
    
    //DateFormat dateformat= new SimpleDateFormat("dd/MM/yyyy");
    public void Valida_LaboralesNE() throws SQLException, IOException, ParseException {

      
    f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    Container content = f.getContentPane();
    JProgressBar progressBar = new JProgressBar();
    progressBar.removeAll();
    progressBar.setValue(0);
    progressBar.setStringPainted(true);
    Border border = BorderFactory.createTitledBorder("Cargando...");
    progressBar.setBorder(border);
    content.add(progressBar, BorderLayout.CENTER);
    f.setSize(300, 100);
    f.setResizable(false);
    f.setLocationRelativeTo(null);
    f.setVisible(true);
    
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        DateTimeFormatter dtf1 = DateTimeFormatter.ofPattern("dd-MM-yyyy");

        String encabezado = "Fecha Generacion Doc.: " + dtf.format(LocalDateTime.now());

        HSSFWorkbook libro = new HSSFWorkbook();

        HSSFCellStyle estiloCelda0 = libro.createCellStyle();
        HSSFCellStyle estiloCelda2 = libro.createCellStyle();

        HSSFFont fuente0 = libro.createFont();
        fuente0.setFontHeightInPoints((short) 12);
        fuente0.setColor(HSSFColor.WHITE.index);
        fuente0.setFontName(fuente0.FONT_ARIAL);
        fuente0.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        estiloCelda0.setFont(fuente0);
        estiloCelda0.setWrapText(true);
        estiloCelda0.setAlignment(HSSFCellStyle.ALIGN_CENTER);
        estiloCelda0.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
        estiloCelda0.setFillForegroundColor(HSSFColor.DARK_BLUE.index);
        estiloCelda0.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);

        HSSFCellStyle estiloCelda1 = libro.createCellStyle();
        HSSFFont fuente2 = libro.createFont();
        fuente2.setFontHeightInPoints((short) 10);
        fuente2.setColor(HSSFColor.WHITE.index);
        fuente2.setFontName(fuente2.FONT_ARIAL);
        fuente2.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        estiloCelda1.setFont(fuente2);
        estiloCelda1.setWrapText(true);
        estiloCelda1.setAlignment(HSSFCellStyle.ALIGN_CENTER);
        estiloCelda1.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
        estiloCelda1.setFillForegroundColor(HSSFColor.BLUE_GREY.index);
        estiloCelda1.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
        estiloCelda1.setBorderBottom(HSSFCellStyle.BORDER_THIN);
        estiloCelda1.setBottomBorderColor((short) 8);
        estiloCelda1.setBorderLeft(HSSFCellStyle.BORDER_MEDIUM);
        estiloCelda1.setLeftBorderColor((short) 8);
        estiloCelda1.setBorderRight(HSSFCellStyle.BORDER_MEDIUM);
        estiloCelda1.setRightBorderColor((short) 8);
        estiloCelda1.setBorderTop(HSSFCellStyle.BORDER_THIN);
        estiloCelda1.setTopBorderColor((short) 8);
        estiloCelda1.setWrapText(true);

        HSSFCellStyle PAmarillo = libro.createCellStyle();
        PAmarillo.setFillForegroundColor(HSSFColor.YELLOW.index);
        PAmarillo.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
        PAmarillo.setBorderBottom(HSSFCellStyle.BORDER_THIN);
        PAmarillo.setBottomBorderColor((short) 8);
        PAmarillo.setBorderLeft(HSSFCellStyle.BORDER_MEDIUM);
        PAmarillo.setLeftBorderColor((short) 8);
        PAmarillo.setBorderRight(HSSFCellStyle.BORDER_MEDIUM);
        PAmarillo.setRightBorderColor((short) 8);
        PAmarillo.setBorderTop(HSSFCellStyle.BORDER_THIN);
        PAmarillo.setTopBorderColor((short) 8);
        PAmarillo.setAlignment(HSSFCellStyle.ALIGN_CENTER);

        HSSFCellStyle estiloCeldabordes0 = libro.createCellStyle();
        estiloCeldabordes0.setBorderBottom(HSSFCellStyle.BORDER_THIN);
        estiloCeldabordes0.setBottomBorderColor((short) 8);
        estiloCeldabordes0.setBorderLeft(HSSFCellStyle.BORDER_MEDIUM);
        estiloCeldabordes0.setLeftBorderColor((short) 8);
        estiloCeldabordes0.setBorderRight(HSSFCellStyle.BORDER_MEDIUM);
        estiloCeldabordes0.setRightBorderColor((short) 8);
        estiloCeldabordes0.setBorderTop(HSSFCellStyle.BORDER_THIN);
        estiloCeldabordes0.setTopBorderColor((short) 8);
        estiloCeldabordes0.setAlignment(HSSFCellStyle.ALIGN_LEFT);
        HSSFFont fuente1 = libro.createFont();
        fuente1.setFontHeightInPoints((short) 11);
        fuente1.setFontName(fuente1.FONT_ARIAL);
        //fuente1.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        estiloCeldabordes0.setFont(fuente1);
        estiloCeldabordes0.setAlignment(HSSFCellStyle.ALIGN_CENTER);

        estiloCelda2.setFont(fuente1);
        estiloCelda2.setWrapText(true);
        estiloCelda2.setAlignment(HSSFCellStyle.ALIGN_LEFT);
        estiloCelda2.setVerticalAlignment(HSSFCellStyle.ALIGN_LEFT);
        estiloCelda2.setBorderBottom(HSSFCellStyle.BORDER_THIN);
        estiloCelda2.setBottomBorderColor((short) 8);
        estiloCelda2.setBorderLeft(HSSFCellStyle.BORDER_MEDIUM);
        estiloCelda2.setLeftBorderColor((short) 8);
        estiloCelda2.setBorderRight(HSSFCellStyle.BORDER_MEDIUM);
        estiloCelda2.setRightBorderColor((short) 8);
        estiloCelda2.setBorderTop(HSSFCellStyle.BORDER_THIN);
        estiloCelda2.setTopBorderColor((short) 8);
        estiloCelda2.setWrapText(true);

        HSSFSheet hojaresumenval = libro.createSheet("Resumen_Validacion");
        hojaresumenval.setColumnWidth((short) 0, (short) 9000);
        hojaresumenval.setColumnWidth((short) 1, (short) 3000);
        hojaresumenval.setColumnWidth((short) 3, (short) 10000);

        HSSFSheet hoja0 = libro.createSheet("Desgloses");
        hoja0.setColumnWidth((short) 0, (short) 1500);
        hoja0.setColumnWidth((short) 1, (short) 4000);
        hoja0.setColumnWidth((short) 2, (short) 4000);
        hoja0.setColumnWidth((short) 3, (short) 4000);
        hoja0.setColumnWidth((short) 4, (short) 4000);
        hoja0.setColumnWidth((short) 5, (short) 4000);
        hoja0.setColumnWidth((short) 6, (short) 4000);
        hoja0.setColumnWidth((short) 7, (short) 4000);
        hoja0.setColumnWidth((short) 8, (short) 4000);
        hoja0.setColumnWidth((short) 9, (short) 4000);
        hoja0.setColumnWidth((short) 10, (short) 4000);
        hoja0.setColumnWidth((short) 11, (short) 4000);
        hoja0.setColumnWidth((short) 12, (short) 4000);
        hoja0.setColumnWidth((short) 13, (short) 4000);
        hoja0.setColumnWidth((short) 14, (short) 4250);
        hoja0.setColumnWidth((short) 15, (short) 4250);
        hoja0.setColumnWidth((short) 16, (short) 4000);
        hoja0.setColumnWidth((short) 17, (short) 4000);
        hoja0.setColumnWidth((short) 18, (short) 4000);
        hoja0.setColumnWidth((short) 19, (short) 4000);
        hoja0.setColumnWidth((short) 20, (short) 4000);
        hoja0.setColumnWidth((short) 21, (short) 4000);

        HSSFSheet hojaControl_expe = libro.createSheet("ControlExpediente");
        hojaControl_expe.setColumnWidth((short) 0, (short) 15000);
        hojaControl_expe.setColumnWidth((short) 1, (short) 6000);
        hojaControl_expe.setColumnWidth((short) 2, (short) 6000);
        hojaControl_expe.setColumnWidth((short) 3, (short) 30000);
        hojaControl_expe.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hojaAudiencias = libro.createSheet("Audiencias");
        hojaAudiencias.setColumnWidth((short) 0, (short) 6000);
        hojaAudiencias.setColumnWidth((short) 1, (short) 6000);
        hojaAudiencias.setColumnWidth((short) 2, (short) 6000);
        hojaAudiencias.setColumnWidth((short) 3, (short) 13000);
        hojaAudiencias.setColumnWidth((short) 4, (short) 13000);

        HSSFSheet hoja1 = libro.createSheet("Ordinario");
        hoja1.setColumnWidth((short) 0, (short) 6000);
        hoja1.setColumnWidth((short) 1, (short) 6000);
        hoja1.setColumnWidth((short) 2, (short) 6000);
        hoja1.setColumnWidth((short) 3, (short) 6000);
        hoja1.setColumnWidth((short) 4, (short) 6000);
        hoja1.setColumnWidth((short) 5, (short) 6000);

        HSSFSheet hoja2 = libro.createSheet("Part_Act_Ordinario");
        hoja2.setColumnWidth((short) 0, (short) 6000);
        hoja2.setColumnWidth((short) 1, (short) 6000);
        hoja2.setColumnWidth((short) 2, (short) 6000);
        hoja2.setColumnWidth((short) 3, (short) 6000);
        hoja2.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja3 = libro.createSheet("Part_Dem_Ordinario");
        hoja3.setColumnWidth((short) 0, (short) 6000);
        hoja3.setColumnWidth((short) 1, (short) 6000);
        hoja3.setColumnWidth((short) 2, (short) 6000);
        hoja3.setColumnWidth((short) 3, (short) 6000);
        hoja3.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja4 = libro.createSheet("Individual");
        hoja4.setColumnWidth((short) 0, (short) 6000);
        hoja4.setColumnWidth((short) 1, (short) 6000);
        hoja4.setColumnWidth((short) 2, (short) 6000);
        hoja4.setColumnWidth((short) 3, (short) 6000);
        hoja4.setColumnWidth((short) 4, (short) 6000);
        hoja4.setColumnWidth((short) 5, (short) 6000);

        HSSFSheet hoja5 = libro.createSheet("Part_Act_Individual");
        hoja5.setColumnWidth((short) 0, (short) 6000);
        hoja5.setColumnWidth((short) 1, (short) 6000);
        hoja5.setColumnWidth((short) 2, (short) 6000);
        hoja5.setColumnWidth((short) 3, (short) 6000);
        hoja5.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja6 = libro.createSheet("Part_Dem_Individual");
        hoja6.setColumnWidth((short) 0, (short) 6000);
        hoja6.setColumnWidth((short) 1, (short) 6000);
        hoja6.setColumnWidth((short) 2, (short) 6000);
        hoja6.setColumnWidth((short) 3, (short) 6000);
        hoja6.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja7 = libro.createSheet("Colectivo");
        hoja7.setColumnWidth((short) 0, (short) 6000);
        hoja7.setColumnWidth((short) 1, (short) 6000);
        hoja7.setColumnWidth((short) 2, (short) 6000);
        hoja7.setColumnWidth((short) 3, (short) 6000);
        hoja7.setColumnWidth((short) 4, (short) 6000);
        hoja7.setColumnWidth((short) 5, (short) 6000);

        HSSFSheet hoja8 = libro.createSheet("Part_Act_Colectivo");
        hoja8.setColumnWidth((short) 0, (short) 6000);
        hoja8.setColumnWidth((short) 1, (short) 6000);
        hoja8.setColumnWidth((short) 2, (short) 6000);
        hoja8.setColumnWidth((short) 3, (short) 6000);
        hoja8.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja9 = libro.createSheet("Part_Dem_Colectivo");
        hoja9.setColumnWidth((short) 0, (short) 6000);
        hoja9.setColumnWidth((short) 1, (short) 6000);
        hoja9.setColumnWidth((short) 2, (short) 6000);
        hoja9.setColumnWidth((short) 3, (short) 6000);
        hoja9.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja10 = libro.createSheet("Huelga");
        hoja10.setColumnWidth((short) 0, (short) 6000);
        hoja10.setColumnWidth((short) 1, (short) 6000);
        hoja10.setColumnWidth((short) 2, (short) 6000);
        hoja10.setColumnWidth((short) 3, (short) 6000);
        hoja10.setColumnWidth((short) 4, (short) 6000);
        hoja10.setColumnWidth((short) 5, (short) 6000);
        hoja10.setColumnWidth((short) 6, (short) 6000);
        hoja10.setColumnWidth((short) 7, (short) 6000);
        hoja10.setColumnWidth((short) 8, (short) 6000);
        hoja10.setColumnWidth((short) 9, (short) 6000);
        hoja10.setColumnWidth((short) 10, (short) 6000);

        HSSFSheet hoja11 = libro.createSheet("Part_Act_Huelga");
        hoja11.setColumnWidth((short) 0, (short) 6000);
        hoja11.setColumnWidth((short) 1, (short) 6000);
        hoja11.setColumnWidth((short) 2, (short) 6000);
        hoja11.setColumnWidth((short) 3, (short) 6000);
        hoja11.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja12 = libro.createSheet("Part_Dem_Huelga");
        hoja12.setColumnWidth((short) 0, (short) 6000);
        hoja12.setColumnWidth((short) 1, (short) 6000);
        hoja12.setColumnWidth((short) 2, (short) 6000);
        hoja12.setColumnWidth((short) 3, (short) 6000);
        hoja12.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja13 = libro.createSheet("Colect_Econom");
        hoja13.setColumnWidth((short) 0, (short) 6000);
        hoja13.setColumnWidth((short) 1, (short) 6000);
        hoja13.setColumnWidth((short) 2, (short) 6000);
        hoja13.setColumnWidth((short) 3, (short) 6000);
        hoja13.setColumnWidth((short) 4, (short) 6000);
        hoja13.setColumnWidth((short) 5, (short) 6000);

        HSSFSheet hoja14 = libro.createSheet("Part_Act_Col_Econom");
        hoja14.setColumnWidth((short) 0, (short) 6000);
        hoja14.setColumnWidth((short) 1, (short) 6000);
        hoja14.setColumnWidth((short) 2, (short) 6000);
        hoja14.setColumnWidth((short) 3, (short) 6000);
        hoja14.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja15 = libro.createSheet("Part_Dem_Col_Econom");
        hoja15.setColumnWidth((short) 0, (short) 6000);
        hoja15.setColumnWidth((short) 1, (short) 6000);
        hoja15.setColumnWidth((short) 2, (short) 6000);
        hoja15.setColumnWidth((short) 3, (short) 6000);
        hoja15.setColumnWidth((short) 4, (short) 30000);

        HSSFSheet hoja16 = libro.createSheet("Paraprocesal");
        hoja16.setColumnWidth((short) 0, (short) 6000);
        hoja16.setColumnWidth((short) 1, (short) 6000);
        hoja16.setColumnWidth((short) 2, (short) 6000);
        hoja16.setColumnWidth((short) 3, (short) 6000);
        hoja16.setColumnWidth((short) 4, (short) 30000);
        hoja16.setColumnWidth((short) 5, (short) 30000);

        HSSFSheet hoja17 = libro.createSheet("Ejecucion");
        hoja17.setColumnWidth((short) 0, (short) 6000);
        hoja17.setColumnWidth((short) 1, (short) 6000);
        hoja17.setColumnWidth((short) 2, (short) 6000);
        hoja17.setColumnWidth((short) 3, (short) 6000);
        hoja17.setColumnWidth((short) 4, (short) 30000);

        ResumenNE(libro, hojaresumenval, estiloCelda0, estiloCeldabordes0, encabezado, estiloCelda1);
        Desglose(libro, hoja0, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo, progressBar);
        Despliega_Control_Expediente(libro, hojaControl_expe, estiloCelda0, estiloCelda1, estiloCeldabordes0,progressBar);
        Despliega_Audiencias(libro, hojaAudiencias, estiloCelda0, estiloCelda1, estiloCeldabordes0,progressBar);
        Despliega_OrdinarioNE(libro, hoja1, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        Despliega_Part_Act_Ordinario(libro, hoja2, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_Part_Dem_Ordinario(libro, hoja3, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_IndividualNE(libro, hoja4, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        Despliega_Part_Act_Individual(libro, hoja5, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_Part_Dem_Individual(libro, hoja6, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_ColectivoNE(libro, hoja7, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        Despliega_Part_Act_Colectivo(libro, hoja8, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_Part_Dem_Colectivo(libro, hoja9, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_HuelgaNE(libro, hoja10, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        Despliega_Part_Act_Huelga(libro, hoja11, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_Part_dem_Huelga(libro, hoja12, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_Colect_EconomNE(libro, hoja13, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        Despliega_Part_Act_Nat_econo(libro, hoja14, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_Part_Dem_Nat_econo(libro, hoja15, estiloCelda0, estiloCelda1, estiloCeldabordes0, estiloCelda2,progressBar);
        Despliega_ParaprocesalNE(libro, hoja16, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        Despliega_Ejecucion(libro, hoja17, hojaresumenval, estiloCelda0, estiloCelda1, estiloCeldabordes0, PAmarillo,progressBar);
        SaveFileTo(libro,progressBar,f);
    }

    public void ResumenNE(HSSFWorkbook libro, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCeldabordes0, String encabezado, HSSFCellStyle estiloCelda1) {

        PValidacion validacion = new PValidacion();

        HSSFRow row0 = hojaresumenval.createRow((short) 0);
        HSSFCell celda0 = row0.createCell((short) 0);
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = "Resumen Validacion";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hojaresumenval.addMergedRegion(new Region(0, (short) 0, 0, (short) 1));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 350);

        HSSFRow fila3 = hojaresumenval.createRow(0);//FILA
        HSSFCell celda3 = fila3.createCell((short) 3);//COLUMNA    
        HSSFRichTextString texto3 = new HSSFRichTextString(encabezado);
        celda3.setCellValue(texto3);
        fila3.setHeight((short) 350);

        if (!validacion.clave_entidad.equals("")) {
            HSSFRow filaEntidad = hojaresumenval.createRow(1);//FILA
            HSSFCell celdaEntidad = filaEntidad.createCell((short) 3);//COLUMNA    
            HSSFRichTextString textoEntidad = new HSSFRichTextString("Entidad: " + validacion.clave_entidad + "  " + validacion.NMunicipio);
            celdaEntidad.setCellValue(textoEntidad);
            filaEntidad.setHeight((short) 300);
        }
        if (!validacion.clave_organo.equals("")) {
            HSSFRow filaEntidad = hojaresumenval.createRow(1);//FILA
            HSSFCell celdaEntidad = filaEntidad.createCell((short) 3);//COLUMNA    
            HSSFRichTextString textoEntidad = new HSSFRichTextString("Clave organo: " + validacion.clave_organo);
            celdaEntidad.setCellValue(textoEntidad);
            filaEntidad.setHeight((short) 300);
        }
        HSSFRow filaEntidad = hojaresumenval.createRow(2);//FILA
        HSSFCell celdaEntidad = filaEntidad.createCell((short) 3);//COLUMNA    
        HSSFRichTextString textoEntidad = new HSSFRichTextString("Periodo: " + validacion.periodo);
        celdaEntidad.setCellValue(textoEntidad);
        filaEntidad.setHeight((short) 300);

        /*HSSFRow filaEntidad1 = hojaresumenval.createRow(0);//FILA
         HSSFCell celdaEntidad1 = filaEntidad1.createCell((short) 4);//COLUMNA    
         HSSFRichTextString textoEntidad1 = new HSSFRichTextString("Actualización de App:05/04/2022");
         celdaEntidad1.setCellValue(textoEntidad1);
         filaEntidad1.setHeight((short)300);*/
        HSSFRow fila30 = hojaresumenval.createRow(1);//FILA
        HSSFCell celda30 = fila30.createCell((short) 0);//COLUMNA
        celda30.setCellStyle(estiloCelda1);
        celda30.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt30 = "Procedimiento";
        HSSFRichTextString texto30 = new HSSFRichTextString(txt30);
        celda30.setCellValue(texto30);
        fila30.setHeight((short) 350);

        HSSFRow fila31 = hojaresumenval.createRow(1);//FILA
        HSSFCell celda31 = fila31.createCell((short) 1);//COLUMNA
        celda31.setCellStyle(estiloCelda1);
        celda31.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt31 = "Inconsis";
        HSSFRichTextString texto31 = new HSSFRichTextString(txt31);
        celda31.setCellValue(texto31);
        fila31.setHeight((short) 350);

        HSSFRow fila1 = hojaresumenval.createRow(2);//FILA
        HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
        celda1.setCellStyle(estiloCeldabordes0);
        celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt0 = "Ordinario";
        HSSFRichTextString texto1 = new HSSFRichTextString(txt0);
        celda1.setCellValue(texto1);
        fila1.setHeight((short) 300);

        HSSFRow fila2 = hojaresumenval.createRow(2);//FILA
        HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
        celda2.setCellStyle(estiloCeldabordes0);

        HSSFRow fila4 = hojaresumenval.createRow(3);//FILA
        HSSFCell celda4 = fila4.createCell((short) 0);//COLUMNA
        celda4.setCellStyle(estiloCeldabordes0);
        celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt4 = "Individual";
        HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
        celda4.setCellValue(texto4);
        fila4.setHeight((short) 300);

        HSSFRow fila5 = hojaresumenval.createRow(3);//FILA
        HSSFCell celda5 = fila5.createCell((short) 1);//COLUMNA
        celda5.setCellStyle(estiloCeldabordes0);

        HSSFRow fila6 = hojaresumenval.createRow(4);//FILA
        HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
        celda6.setCellStyle(estiloCeldabordes0);
        celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt6 = "Colectivo";
        HSSFRichTextString texto6 = new HSSFRichTextString(txt6);
        celda6.setCellValue(texto6);
        fila6.setHeight((short) 300);

        HSSFRow fila7 = hojaresumenval.createRow(4);//FILA
        HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
        celda7.setCellStyle(estiloCeldabordes0);

        HSSFRow filaA10 = hojaresumenval.createRow(5);//FILA
        HSSFCell celdaA10 = filaA10.createCell((short) 0);//COLUMNA
        celdaA10.setCellStyle(estiloCeldabordes0);
        celdaA10.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txtA10 = "Huelga";
        HSSFRichTextString textoA10 = new HSSFRichTextString(txtA10);
        celdaA10.setCellValue(textoA10);
        filaA10.setHeight((short) 300);

        HSSFRow filaA11 = hojaresumenval.createRow(5);//FILA
        HSSFCell celdaA11 = filaA11.createCell((short) 1);//COLUMNA
        celdaA11.setCellStyle(estiloCeldabordes0);

        HSSFRow fila9 = hojaresumenval.createRow(6);//FILA
        HSSFCell celda9 = fila9.createCell((short) 0);//COLUMNA
        celda9.setCellStyle(estiloCeldabordes0);
        celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt9 = "Paraprocesal";
        HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
        celda9.setCellValue(texto9);
        fila9.setHeight((short) 300);

        HSSFRow fila20 = hojaresumenval.createRow(6);//FILA
        HSSFCell celda20 = fila20.createCell((short) 1);//COLUMNA
        celda20.setCellStyle(estiloCeldabordes0);

        HSSFRow fila13 = hojaresumenval.createRow(7);//FILA
        HSSFCell celda13 = fila13.createCell((short) 0);//COLUMNA
        celda13.setCellStyle(estiloCeldabordes0);
        celda13.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt13 = "Ejecucion";
        HSSFRichTextString texto13 = new HSSFRichTextString(txt13);
        celda13.setCellValue(texto13);
        fila13.setHeight((short) 300);

        HSSFRow fila14 = hojaresumenval.createRow(7);//FILA
        HSSFCell celda14 = fila14.createCell((short) 1);//COLUMNA
        celda14.setCellStyle(estiloCeldabordes0);

        HSSFRow fila15 = hojaresumenval.createRow(8);//FILA
        HSSFCell celda15 = fila15.createCell((short) 0);//COLUMNA
        celda15.setCellStyle(estiloCeldabordes0);
        celda15.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt15 = "Colect_Econom";
        HSSFRichTextString texto15 = new HSSFRichTextString(txt15);
        celda15.setCellValue(texto15);
        fila15.setHeight((short) 300);

        HSSFRow fila16 = hojaresumenval.createRow(8);//FILA
        HSSFCell celda16 = fila16.createCell((short) 1);//COLUMNA
        celda16.setCellStyle(estiloCeldabordes0);

    }

    public void Desglose(HSSFWorkbook libro, HSSFSheet hoja0, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {
        int fila=3;
        EDQDesgloses Desgloses = new EDQDesgloses();
        progressBar.setValue(0);
        HSSFRow row0 = hoja0.createRow((short) 1);
        HSSFCell celda0 = row0.createCell((short) 1);
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " DESGLOSE POR PROCEDIMIENTO Periodo="+periodo;
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);
        hoja0.addMergedRegion(new Region(1, (short) 1, 1, (short) 19));

        HSSFRow fila1 = hoja0.createRow(2);//FILA
        HSSFCell celda1 = fila1.createCell((short) 1);//COLUMNA
        celda1.setCellStyle(estiloCelda1);
        celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt1 = "CLAVE ORGANO";
        HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
        celda1.setCellValue(texto1);
        fila1.setHeight((short) 500);

        ArrayResult = Desgloses.Desglose_OrdinarioNE();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila21 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda21 = fila21.createCell((short) 1);//COLUMNA
            celda21.setCellStyle(estiloCeldabordes0);
            celda21.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt21 = Arrays.toString(ArrayResult.get(i));
            txt21 = txt21.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt21.split(",");
            parts0 = parts[0].trim();
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto21 = new HSSFRichTextString(parts0);
            celda21.setCellValue(texto21);
            fila21.setHeight((short) 300);
        }

        HSSFRow fila2 = hoja0.createRow(2);//FILA
        HSSFCell celda2 = fila2.createCell((short) 2);//COLUMNA
        celda2.setCellStyle(estiloCelda1);
        celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt2 = "ORDINARIO";
        HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
        celda2.setCellValue(texto2);
        fila2.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 2);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        HSSFRow fila3 = hoja0.createRow(2);//FILA
        HSSFCell celda3 = fila3.createCell((short) 3);//COLUMNA
        celda3.setCellStyle(estiloCelda1);
        celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt3 = "DESGLOSE ORDINARIO";
        HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
        celda3.setCellValue(texto3);
        fila3.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 3);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_IndividualNE();
        HSSFRow fila4 = hoja0.createRow(2);//FILA
        HSSFCell celda4 = fila4.createCell((short) 4);//COLUMNA
        celda4.setCellStyle(estiloCelda1);
        celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt4 = "INDIVIDUAL";
        HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
        celda4.setCellValue(texto4);
        fila4.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 4);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila24 = hoja0.createRow(2);//FILA
        HSSFCell celda24 = fila24.createCell((short) 5);//COLUMNA
        celda24.setCellStyle(estiloCelda1);
        celda24.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt24 = "DESGLOSE INDIVIDUAL";
        HSSFRichTextString texto24 = new HSSFRichTextString(txt24);
        celda24.setCellValue(texto24);
        fila24.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 5);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_ColectivoNE();
        HSSFRow fila5 = hoja0.createRow(2);//FILA
        HSSFCell celda5 = fila5.createCell((short) 6);//COLUMNA
        celda5.setCellStyle(estiloCelda1);
        celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt5 = "COLECTIVO";
        HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
        celda5.setCellValue(texto5);
        fila5.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 6);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila6 = hoja0.createRow(2);//FILA
        HSSFCell celda6 = fila6.createCell((short) 7);//COLUMNA
        celda6.setCellStyle(estiloCelda1);
        celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt6 = "DESGLOSE COLECTIVO";
        HSSFRichTextString texto6 = new HSSFRichTextString(txt6);
        celda6.setCellValue(texto6);
        fila6.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 7);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_HuelgaNE();
        HSSFRow fila7 = hoja0.createRow(2);//FILA
        HSSFCell celda7 = fila7.createCell((short) 8);//COLUMNA
        celda7.setCellStyle(estiloCelda1);
        celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt7 = "HUELGA";
        HSSFRichTextString texto7 = new HSSFRichTextString(txt7);
        celda7.setCellValue(texto7);
        fila7.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 8);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila8 = hoja0.createRow(2);//FILA
        HSSFCell celda8 = fila8.createCell((short) 9);//COLUMNA
        celda8.setCellStyle(estiloCelda1);
        celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt8 = "DESGLOSE HUELGA";
        HSSFRichTextString texto8 = new HSSFRichTextString(txt8);
        celda8.setCellValue(texto8);
        fila8.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 9);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_Colec_EconomNE();
        HSSFRow fila11 = hoja0.createRow(2);//FILA
        HSSFCell celda11 = fila11.createCell((short) 10);//COLUMNA
        celda11.setCellStyle(estiloCelda1);
        celda11.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt11 = "COLEC ECONOM";
        HSSFRichTextString texto11 = new HSSFRichTextString(txt11);
        celda11.setCellValue(texto11);
        fila11.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 10);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila12 = hoja0.createRow(2);//FILA
        HSSFCell celda12 = fila12.createCell((short) 11);//COLUMNA
        celda12.setCellStyle(estiloCelda1);
        celda12.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt12 = "DESGLOSE COLEC ECONOM";
        HSSFRichTextString texto12 = new HSSFRichTextString(txt12);
        celda12.setCellValue(texto12);
        fila12.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 11);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_ParaprocesalNE();
        HSSFRow fila13 = hoja0.createRow(2);//FILA
        HSSFCell celda13 = fila13.createCell((short) 12);//COLUMNA
        celda13.setCellStyle(estiloCelda1);
        celda13.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt13 = "PARAPROCESAL";
        HSSFRichTextString texto13 = new HSSFRichTextString(txt13);
        celda13.setCellValue(texto13);
        fila13.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 12);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila14 = hoja0.createRow(2);//FILA
        HSSFCell celda14 = fila14.createCell((short) 13);//COLUMNA
        celda14.setCellStyle(estiloCelda1);
        celda14.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt14 = "DESGLOSE PARAPROCESAL";
        HSSFRichTextString texto14 = new HSSFRichTextString(txt14);
        celda14.setCellValue(texto14);
        fila14.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 13);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_TerceriasNE();
        HSSFRow fila15 = hoja0.createRow(2);//FILA
        HSSFCell celda15 = fila15.createCell((short) 14);//COLUMNA
        celda15.setCellStyle(estiloCelda1);
        celda15.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt15 = "TERCERIAS";
        HSSFRichTextString texto15 = new HSSFRichTextString(txt15);
        celda15.setCellValue(texto15);
        fila15.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 14);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila16 = hoja0.createRow(2);//FILA
        HSSFCell celda16 = fila16.createCell((short) 15);//COLUMNA
        celda16.setCellStyle(estiloCelda1);
        celda16.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt16 = "DESGLOSE TERCERIAS";
        HSSFRichTextString texto16 = new HSSFRichTextString(txt16);
        celda16.setCellValue(texto16);
        fila16.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 15);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_Pref_CreditoNE();
        HSSFRow fila17 = hoja0.createRow(2);//FILA
        HSSFCell celda17 = fila17.createCell((short) 16);//COLUMNA
        celda17.setCellStyle(estiloCelda1);
        celda17.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt17 = "PREF CREDITO";
        HSSFRichTextString texto17 = new HSSFRichTextString(txt17);
        celda17.setCellValue(texto17);
        fila17.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 16);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila18 = hoja0.createRow(2);//FILA
        HSSFCell celda18 = fila18.createCell((short) 17);//COLUMNA
        celda18.setCellStyle(estiloCelda1);
        celda18.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt18 = "DESGLOSE PREF CREDITO";
        HSSFRichTextString texto18 = new HSSFRichTextString(txt18);
        celda18.setCellValue(texto18);
        fila18.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 17);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }

        ArrayResult = Desgloses.Desglose_EjecucionNE();
        HSSFRow fila19 = hoja0.createRow(2);//FILA
        HSSFCell celda19 = fila19.createCell((short) 18);//COLUMNA
        celda19.setCellStyle(estiloCelda1);
        celda19.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt19 = "EJECUCION";
        HSSFRichTextString texto19 = new HSSFRichTextString(txt19);
        celda19.setCellValue(texto19);
        fila19.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 18);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        HSSFRow fila20 = hoja0.createRow(2);//FILA
        HSSFCell celda20 = fila20.createCell((short) 19);//COLUMNA
        celda20.setCellStyle(estiloCelda1);
        celda20.setCellType(HSSFCell.CELL_TYPE_STRING);
        String txt20 = "DESGLOSE EJECUCION";
        HSSFRichTextString texto20 = new HSSFRichTextString(txt20);
        celda20.setCellValue(texto20);
        fila20.setHeight((short) 500);

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow(3 + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 19);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
            fila++;
        }
        
     
        HSSFRow row00 = hoja0.createRow((short) fila);
        HSSFCell celda00 = row00.createCell((short) 1);
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo00 = "DESGLOSE POR PROCEDIMIENTO Periodo="+periodoAnt;
        HSSFRichTextString texto00 = new HSSFRichTextString((titulo00));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
            hoja0.addMergedRegion(new Region(fila, (short) 1, fila, (short) 19));

        ArrayResult = Desgloses.Desglose_OrdinarioNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila21 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda21 = fila21.createCell((short) 1);//COLUMNA
            celda21.setCellStyle(estiloCeldabordes0);
            celda21.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt21 = Arrays.toString(ArrayResult.get(i));
            txt21 = txt21.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt21.split(",");
            parts0 = parts[0].trim();
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto21 = new HSSFRichTextString(parts0);
            celda21.setCellValue(texto21);
            fila21.setHeight((short) 300);
        }

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 2);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
         
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 3);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_IndividualNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 4);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 5);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_ColectivoNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 6);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 7);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
 ArrayResult = Desgloses.Desglose_HuelgaNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 8);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 9);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_Colec_EconomNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 10);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 11);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_ParaprocesalNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 12);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila + 1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 13);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_TerceriasNEAnt();        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 14);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 15);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_Pref_CreditoNEAnt();
        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 16);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }
        
      for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 17);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
ArrayResult = Desgloses.Desglose_EjecucionNEAnt();
       for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila23 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda23 = fila23.createCell((short) 18);//COLUMNA
            celda23.setCellStyle(estiloCeldabordes0);
            celda23.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt23 = Arrays.toString(ArrayResult.get(i));
            txt23 = txt23.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt23.split(",");
            parts0 = parts[1].trim();
            parts1 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda23.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto23 = new HSSFRichTextString(parts0);
            celda23.setCellValue(texto23);
            fila23.setHeight((short) 300);
        }

        for (int i = 0; i < ArrayResult.size(); i++) {
            HSSFRow fila22 = hoja0.createRow((fila +1) + i);//FILA
            HSSFCell celda22 = fila22.createCell((short) 19);//COLUMNA
            celda22.setCellStyle(estiloCeldabordes0);
            celda22.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt22 = Arrays.toString(ArrayResult.get(i));
            txt22 = txt22.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
            parts = txt22.split(",");
            parts1 = parts[1].trim();
            parts0 = parts[2].trim();
            if (!parts0.equals(parts1)) {
                celda22.setCellStyle(PAmarillo);
            }
            //System.out.println(Arrays.toString(ArrayResult.get(i)));
            HSSFRichTextString texto22 = new HSSFRichTextString(parts0);
            celda22.setCellValue(texto22);
            fila22.setHeight((short) 300);
        }
        
         progressBar.setValue(5);
        
    }

    public void Despliega_Control_Expediente(HSSFWorkbook libro, HSSFSheet hojaControl_expe, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0,JProgressBar progressBar) {
        EDControl_expediente CE = new EDControl_expediente();
        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda

        HSSFRow row0 = hojaControl_expe.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO CONTROL EXPEDIENTE ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hojaControl_expe.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

    
        ArrayResult = CE.Horario();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "NOMBRE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "HORARIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "El Horario debe estar completo ejemplo: 08:30 a 16:30";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CE.SubJuecesHom();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "SUMATORIA JUECES INDIVIDUAL,COLECTIVO,MIXTO HOMBRES";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "JUECES SUBTOTAL HOMBRES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La sumatoria de jueces individuales Hombres(JUECES_LABORAL_INDIV_HOM),Colectivos Hombres (JUECES_LABORAL_COLEC_HOM),Mixtos Hombres (JUECES_LABORAL_MIX_HOM) no corresponde al Subtotal Hombres (JUECES_LABORAL_SUB_HOM)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CE.SubJuecesMuj();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "SUMATORIA JUECES INDIVIDUAL,COLECTIVO,MIXTO MUJERES";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "JUECES SUBTOTAL MUJERES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La sumatoria de jueces individuales Mujeres(JUECES_LABORAL_INDIV_MUJ),Colectivos Mujeres (JUECES_LABORAL_COLEC_MUJ),Mixtos Mujeres (JUECES_LABORAL_MIX_MUJ) no corresponde al Subtotal Mujeres (JUECES_LABORAL_SUB_MUJ)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CE.TotalJueces();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "SUMATORIA JUECES SUB HOMBRES,SUB MUJERES";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TOTAL DE JUECES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaControl_expe.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaControl_expe.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La sumatoria de jueces subtotal Hombres(JUECES_LABORAL_SUB_HOM),subtotal Mujeres(JUECES_LABORAL_SUB_MUJ) no corresponde al Total de jueces (JUECES_LABORAL_TOTAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

         progressBar.setValue(10);
    }

    public void Despliega_Audiencias(HSSFWorkbook libro, HSSFSheet hojaAudiencias, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0,JProgressBar progressBar) {
        // ED_Audiencias NNV3_Audiencias = new ED_Audiencias();
        EDQAudiencias Audiencias = new EDQAudiencias();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda

        HSSFRow row0 = hojaAudiencias.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO AUDIENCIAS ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hojaAudiencias.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        
        
        
        ArrayResult = Audiencias.FORMATO_INICIO();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "EXPEDIENTE CLAVE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaD2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaD2 = filaD2.createCell((short) 2);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "ID AUDIENCIA";
            HSSFRichTextString textoAD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoAD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 2);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaE2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaE2 = filaE2.createCell((short) 3);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "TIPO PROCEDIMIENTO";
            HSSFRichTextString textoAE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoAE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 3);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[3].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            
            HSSFRow filaF2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaF2 = filaF2.createCell((short) 4);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "INICIO";
            HSSFRichTextString textoAF2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoAF2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 4);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[4].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 5);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 5);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "EL FORMATO DE HORA DE INICIO DEBE SER 'hh:mm'(24HRS) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
         ArrayResult = Audiencias.FORMATO_CONCLU();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "EXPEDIENTE CLAVE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaD2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaD2 = filaD2.createCell((short) 2);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "ID AUDIENCIA";
            HSSFRichTextString textoAD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoAD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 2);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaE2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaE2 = filaE2.createCell((short) 3);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "TIPO PROCEDIMIENTO";
            HSSFRichTextString textoAE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoAE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 3);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[3].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            
            HSSFRow filaF2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaF2 = filaF2.createCell((short) 4);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "CONCLUSION";
            HSSFRichTextString textoAF2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoAF2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 4);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[4].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 5);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 5);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "EL FORMATO DE HORA DE CONCLUSION DEBE SER 'hh:mm'(24HRS) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Audiencias.SEGUNDOS_INICIO();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "EXPEDIENTE CLAVE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaD2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaD2 = filaD2.createCell((short) 2);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "ID AUDIENCIA";
            HSSFRichTextString textoAD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoAD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 2);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaE2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaE2 = filaE2.createCell((short) 3);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "TIPO PROCEDIMIENTO";
            HSSFRichTextString textoAE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoAE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 3);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[3].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            
            HSSFRow filaF2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaF2 = filaF2.createCell((short) 4);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "INICIO";
            HSSFRichTextString textoAF2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoAF2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 4);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[4].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 5);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 5);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "LOS SEGUNDOS EN HORA DE INICIO NO DEBEN SER MAYOR A 59";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
                ArrayResult = Audiencias.SEGUNDOS_CONCLU();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "EXPEDIENTE CLAVE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaD2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaD2 = filaD2.createCell((short) 2);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "ID AUDIENCIA";
            HSSFRichTextString textoAD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoAD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 2);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaE2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaE2 = filaE2.createCell((short) 3);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "TIPO PROCEDIMIENTO";
            HSSFRichTextString textoAE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoAE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 3);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[3].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            
            HSSFRow filaF2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaF2 = filaF2.createCell((short) 4);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "CONCLUSION";
            HSSFRichTextString textoAF2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoAF2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 4);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[4].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 5);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 5);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "LOS SEGUNDOS EN HORA DE CONCLUSION NO DEBEN SER MAYOR A 59";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
  
             ArrayResult = Audiencias.CONCLU_MENOR();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "EXPEDIENTE CLAVE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaD2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaD2 = filaD2.createCell((short) 2);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "ID AUDIENCIA";
            HSSFRichTextString textoAD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoAD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 2);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaE2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaE2 = filaE2.createCell((short) 3);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "TIPO PROCEDIMIENTO";
            HSSFRichTextString textoAE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoAE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 3);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[3].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            
            HSSFRow filaF2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaF2 = filaF2.createCell((short) 4);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "INICIO";
            HSSFRichTextString textoAF2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoAF2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 4);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[4].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
             HSSFRow filaG2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaG2 = filaG2.createCell((short) 5);//COLUMNA
            celdaG2.setCellStyle(estiloCelda1);
            celdaG2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG2 = "CONCLUSION";
            HSSFRichTextString textoAG2 = new HSSFRichTextString(txtG2);
            celdaG2.setCellValue(textoAG2);
            filaG2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 5);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[5].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 6);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 6);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "LA HORA DE CONCLUSION NO DEBE SER MENOR A LA HORA DE INICIO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        /*
        ArrayResult = NNV3_Audiencias.Aud_NE_ORDINARIO();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE PROCEDIMIENTO(ORDINARIO) ";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 2);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 2);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Expediente clave no se encuentra en procedimiento(TR_ORDINARIOJL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        ArrayResult = NNV3_Audiencias.Aud_NE_INDIVIDUAL();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE PROCEDIMIENTO(INDIVIDUAL) ";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 2);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 2);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Expediente clave no se encuentra en procedimiento(TR_INDIVIDUALJL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNV3_Audiencias.Aud_NE_COLECTIVO();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE PROCEDIMIENTO(COLECTIVO) ";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 2);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 2);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Expediente clave no se encuentra en su procedimiento (TR_COLECTIVOJL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3_Audiencias.Aud_NE_HUELGA();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE PROCEDIMIENTO(HUELGA) ";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 2);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 2);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Expediente clave no se encuentra en su procedimiento (TR_HUELGAJL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        ArrayResult = NNV3_Audiencias.Aud_NE_COLECT_ECONOM();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE PROCEDIMIENTO(COLECTIVO ECONOMICO) ";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }
            
            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 2);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 2);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Expediente clave no se encuentra en su procedimiento (TR_COLECT_ECONOM)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
      
        ArrayResult = Audiencias.FECHA_AUDIEN_CELEBRADA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA CELEBRADA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia celebrada (FECHA_AUDIEN_CELEBRADA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3_Audiencias.Aud_Ordinario();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE PROCEDIMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de procedimiento(TIPO_PROCED) =Ordinario no debe de capturar Especial individual,Especial colectivo,Huelga,Colectivo de naturaleza económica";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3_Audiencias.Aud_Individual();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE PROCEDIMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de procedimiento(TIPO_PROCED) =Individual no debe de capturar Ordinario,Especial colectivo,Huelga,Colectivo de naturaleza económica";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3_Audiencias.Aud_Colectivo();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE PROCEDIMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de procedimiento(TIPO_PROCED) =Colectivo no debe de capturar Ordinario,Especial Individual,Huelga,Colectivo de naturaleza económica";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3_Audiencias.Aud_Huelga();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE PROCEDIMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de procedimiento(TIPO_PROCED) =Huelga no debe de capturar Ordinario,Especial Individual,Colectivo,Colectivo de naturaleza económica";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3_Audiencias.Aud_Colect_econom();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE PROCEDIMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hojaAudiencias.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hojaAudiencias.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de procedimiento(TIPO_PROCED) =Colectivo Econom no debe de capturar Ordinario,Especial Individual,Colectivo,Huelga";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        */
     progressBar.setValue(15);
    }

    public void Despliega_OrdinarioNE(HSSFWorkbook libro, HSSFSheet hoja1, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {

        EDQOrdinario Ordinario = new EDQOrdinario();
        EDOrdinario NNOrdinario = new EDOrdinario();
        EDQNuevosOrdinario QN=new EDQNuevosOrdinario();
        
        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda

        HSSFRow row0 = hoja1.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO ORDINARIO ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja1.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        ArrayResult = QN.OrdinarioEstatusDemanda(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Si en los campos ¿Hubo celebración de audiencia preliminar? (PREG_AUD_PRELIM_CELEBR) y ¿Hubo celebración de audiencia de juicio? (PREG_CELEBRA_AUD_JUICIO) se selecciona la opcion Sí, en el campo Estatus de la demanda (ID_ESTATUS_DEMANDA) debe contener la opción Admitida.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
      
        ArrayResult = QN.OrdinarioEstatusFE(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCIONFE) en etapa Fase Escrita.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
                ArrayResult = QN.OrdinarioEstatusAP(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCIONAP) en etapa Audiencia Preliminar.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
                        ArrayResult = QN.OrdinarioEstatusAJ(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCIONAJ) en etapa Audiencia de Juicio";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        
        ArrayResult = Ordinario.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_PRES_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA PRESENTACION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion de la demanda (FECHA_PRES_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_ADMI_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ADMISION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de admision de la demanda (FECHA_ADMI_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_AUDIENCIA_PRELIM_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia preliminar (FECHA_AUDIENCIA_PRELIM) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_AUDIENCIA_JUICIO_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA JUICIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia de juicio (FECHA_AUDIENCIA_JUICIO) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_ACTO_PROCESAL_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha del ultimo acto procesal (FECHA_ACTO_PROCESAL) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_DICTO_RESOLUCIONFE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION FORMA ESCRITO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por Forma Escrita (FECHA_DICTO_RESOLUCIONFE)  no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*
        ArrayResult = Ordinario.FECHA_DICTO_RESOLUCIONAP_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por Audiencia preliminar (FECHA_DICTO_RESOLUCIONAP) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ordinario.FECHA_RESOLUCIONAJ_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION AUDIENCIA DE JUICIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por Audiencia de juicio (FECHA_RESOLUCIONAJ) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
*/
       
        /* if (PValidacion.NMunicipio.equals("Campeche")) {
            JOptionPane.showMessageDialog(null, "Validando BD conforme al Articulo 112 de la Judicaturita Local de Campeche");

            ArrayResult = Ordinario.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(2);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja1.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja1.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja1.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja1.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja1.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja1.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja1.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja1.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja1.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja1.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja1.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja1.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }/*

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Ordinario.Año_DIF_Campeche();
        } else {
            ArrayResult = Ordinario.Año_Expe_OrdinarioNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(2);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja1.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja1.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja1.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja1.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja1.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja1.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja1.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja1.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja1.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja1.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja1.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja1.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/

        ArrayResult = Ordinario.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_Acto_ProcesalNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA ACTO PROCESAL";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha del último acto procesal(FECHA_ACTO_PROCESAL) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_Aud_Apertura();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA (T.1.1_ordinario)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Apertura del Expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_Aud_Presentacion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION (T.1.1_ordinario)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Presentacion(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_Aud_Admision();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE ADMISION (T.1.1_ordinario)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Admision de la demanda(FECHA_ADMI_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_PresentacionAdmiNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(2);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE ADMISION";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja1.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja1.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Admision (FECHA_ADMI_DEMANDA) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ordinario.Fecha_Admi_demandaNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaA00 = hojaresumenval.createRow(2);//filaA
            HSSFCell celdaA00 = filaA00.createCell((short) 1);//COLUMNA    
            celdaA00.setCellStyle(PAmarillo);

            HSSFRow filaA1 = hoja1.createRow(conEnc);//filaA
            HSSFCell celdaA1 = filaA1.createCell((short) 0);//COLUMNA
            celdaA1.setCellStyle(estiloCelda1);
            celdaA1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtA1);
            celdaA1.setCellValue(textoA1);
            filaA1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA6 = hoja1.createRow(conDat + i);//filaA
                HSSFCell celdaA6 = filaA6.createCell((short) 0);//COLUMNA
                celdaA6.setCellStyle(estiloCeldabordes0);
                celdaA6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA6 = Arrays.toString(ArrayResult.get(i));
                txtA6 = txtA6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaA6.setCellValue(textoA6);
                filaA6.setHeight((short) 300);
            }

            HSSFRow filaA2 = hoja1.createRow(conEnc);//filaA
            HSSFCell celdaA2 = filaA2.createCell((short) 1);//COLUMNA
            celdaA2.setCellStyle(estiloCelda1);
            celdaA2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtA2);
            celdaA2.setCellValue(textoA2);
            filaA2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA7 = hoja1.createRow(conDat + i);//filaA
                HSSFCell celdaA7 = filaA7.createCell((short) 1);//COLUMNA
                celdaA7.setCellStyle(estiloCeldabordes0);
                celdaA7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA7 = Arrays.toString(ArrayResult.get(i));
                txtA7 = txtA7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaA7.setCellValue(textoA7);
                filaA7.setHeight((short) 300);
            }

            HSSFRow filaA3 = hoja1.createRow(conEnc);//filaA
            HSSFCell celdaA3 = filaA3.createCell((short) 2);//COLUMNA
            celdaA3.setCellStyle(estiloCelda1);
            celdaA3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtA3);
            celdaA3.setCellValue(textoA3);
            filaA3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA8 = hoja1.createRow(conDat + i);//filaA
                HSSFCell celdaA8 = filaA8.createCell((short) 2);//COLUMNA
                celdaA8.setCellStyle(estiloCeldabordes0);
                celdaA8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA8 = Arrays.toString(ArrayResult.get(i));
                txtA8 = txtA8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaA8.setCellValue(textoA8);
                filaA8.setHeight((short) 300);
            }

            HSSFRow filaA4 = hoja1.createRow(conEnc);//filaA
            HSSFCell celdaA4 = filaA4.createCell((short) 3);//COLUMNA
            celdaA4.setCellStyle(estiloCelda1);
            celdaA4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA4 = "FECHA ADMISION DE LA DEMANDA";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtA4);
            celdaA4.setCellValue(textoA4);
            filaA4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA9 = hoja1.createRow(conDat + i);//filaA
                HSSFCell celdaA9 = filaA9.createCell((short) 3);//COLUMNA
                celdaA9.setCellStyle(estiloCeldabordes0);
                celdaA9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA9 = Arrays.toString(ArrayResult.get(i));
                txtA9 = txtA9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(parts0);
                celdaA9.setCellValue(textoA9);
                filaA9.setHeight((short) 300);
            }

            HSSFRow filaA5 = hoja1.createRow(conEnc);//filaA
            HSSFCell celdaA5 = filaA5.createCell((short) 4);//COLUMNA
            celdaA5.setCellStyle(estiloCelda1);
            celdaA5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtA5);
            celdaA5.setCellValue(textoA5);
            filaA5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA9 = hoja1.createRow(conDat + i);//filaA
                HSSFCell celdaA9 = filaA9.createCell((short) 4);//COLUMNA
                celdaA9.setCellStyle(estiloCeldabordes0);
                celdaA9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA9 = "La Fecha de admisión de la demanda(FECHA_ADMI_DEMANDA) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtA9);
                celdaA9.setCellValue(textoA9);
                filaA9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Ordinario.Fecha_Audiencia_JuicioNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(2);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja1.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoA1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja1.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoA6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja1.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoA2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja1.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoA7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja1.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoA3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja1.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoA8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja1.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA DE AUDIENCIA JUICIO";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoA4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja1.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoA9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja1.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoA5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja1.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha de audiencia de juicio (FECHA_AUDIENCIA_JUICIO) no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoA9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Ordinario.Fecha_Audiencia_PrelimNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoA4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 3);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = Arrays.toString(ArrayResult.get(i));
                txtC9 = txtC9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(parts0);
                celdaC9.setCellValue(textoA9);
                filaC9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoA5);
            filaC5.setHeight((short) 750);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 4);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = "La Fecha de audiencia preliminar (FECHA_AUDIENCIA_PRELIM) no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtC9);
                celdaC9.setCellValue(textoA9);
                filaC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }
/*
        ArrayResult = Ordinario.Fecha_Dicto_ResolucionAP();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA DICTO RESOLUCION AP";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoA4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaD9 = filaD9.createCell((short) 3);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = Arrays.toString(ArrayResult.get(i));
                txtD9 = txtD9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(parts0);
                celdaD9.setCellValue(textoD9);
                filaD9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoA5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaD9 = filaD9.createCell((short) 4);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = "La Fecha en la que se dictó la resolución(FECHA_DICTO_RESOLUCIONAP) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtD9);
                celdaD9.setCellValue(textoD9);
                filaD9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Ordinario.Fecha_ResolucionAJ();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA RESOLUCION AJ";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoA4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = Arrays.toString(ArrayResult.get(i));
                txtE9 = txtE9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(parts0);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 4);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCIONAJ) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }
*/
        ArrayResult = Ordinario.Fecha_Dicto_ResolucionFE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA RESOLUCION FE";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoA4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = Arrays.toString(ArrayResult.get(i));
                txtE9 = txtE9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(parts0);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 4);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha en la que se dictó la resolución(FECHA_DICTO_RESOLUCIONFE) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = NNOrdinario.Tipo_asuntoNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE ASUNTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Tipo de asunto(TIPO_ASUNTO) no debe de ser =9 No_identificado";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Tipo_asunto_ColectNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE ASUNTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de asunto(TIPO_ASUNTO) = Colectivo no debe de capturar ¿El trabajador contó con contrato escrito?(CONTRATO_ESCRITO) ni Tipo de contrato(TIPO_CONTRATO)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Contrato_escritoNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "CONTRATO ESCRITO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿El trabajador contó con contrato escrito?(CONTRATO_ESCRITO) = No o No identificado, no debe de capturar tipo de contrato(TIPO_CONTRATO)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Ta_Colectivo();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Tipo de Asunto";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo de asunto(TIPO_ASUNTO)=Colectivo no debe capturarse desde ¿El conflicto laboral se encuentra vinculado al esquema de subcontratación (outsourcing)?(SUBCONTRATACION) hasta  Especifique (otro tipo de prestaciones)(OTRO_TIPO_PREST)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
         ArrayResult = NNOrdinario.SinMotivo_Conflicto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Fecha de apertura";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de seleccionar Si en al menos un Motivo de conflicto (campo DESPIDO hasta Otro motivo del conflicto (especifique)(OTRO_MOTIV_CONFLICTO) ya que no puede haber ningun motivo de conflicto)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        

        ArrayResult = NNOrdinario.Mot_conflicto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "¿Aplican circunstancias vinculadas al motivo del conflicto?";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "cuando ¿Aplican circunstancias vinculadas al motivo del conflicto?(CIRCUNS_MOTIVO_CONFL) = No o No identificado no debe capturarse a partir Discriminación en el empleo y ocupación por embarazo (DETERM_EMPLEO_EMBARAZO) hasta Acoso sexual(ACOSO_SEXUAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Pago_prestaciones();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "PAGO DE PRESTACIONES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Pago de prestaciones(PAGO_PRESTACIONES)=No o NO identificado, No debe capturarse desde Aguinaldo(AGUINALDO) hasta   Especifique (otro tipo de prestaciones)(OTRO_TIPO_PREST).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Cons_expedida();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "CONSTANCIA EXPEDIDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Se anexó constancia de no conciliación expedida por el Centro Conciliación?(CONSTANCIA_CONS_EXPEDIDA)=NO o No identificado, no debe de capturar Clave/identificador de la constancia(CONSTANCIA_CLAVE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Preve_demanda();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "¿Se formuló prevención a la demanda?";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Se formuló prevención a la demanda?(PREVE_DEMANDA)=NO o No identificado, no debe de capturar ¿Se desahogó la prevención de la demanda?(DESAHOGO_PREV_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 PValidacion validacion = new PValidacion();       
 if  (!validacion.clave_entidad.equals("15"))
 {
        ArrayResult = NNOrdinario.Estatus_demaNi();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Estatus de la demanda(ESTATUS_DEMANDA) no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 }
        ArrayResult = NNOrdinario.Impiden_admision_demanda();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Estatus de la demanda(ESTATUS_DEMANDA) =Admitida o No identificado, no debe de capturarse Causas que impiden la admisión de la demanda(CAU_IMP_ADM_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.audiencia_preliminar();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo celebración de audiencia preliminar?(AUDIENCIA_PRELIM)=No O No Identificado, no debe de capturar Fecha de audiencia preliminar(FECHA_AUDIENCIA_PRELIM)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.audiencia_juicio();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "AUDIENCIA JUICIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo celebración de audiencia de juicio?(AUDIENCIA_JUICIO) =No o No identificado, no debe de capturar  Fecha de audiencia de juicio(FECHA_AUDIENCIA_JUICIO)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 if  (!validacion.clave_entidad.equals("15"))
 {
        ArrayResult = NNOrdinario.Estatus_ExpedienteNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Estatus del expediente(ESTATUS_EXPEDIENTE) no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 } 
        
        ArrayResult = NNOrdinario.Estatus_Expediente_Noidentificado();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de Verificar Estatus_expediente ya que contiene informacion a apartir de FECHA_ACTO_PROCESAL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Incompetencia(INCOMPETENCIA) no debe ser =No identificada Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNOrdinario.PivIncompetencia_Noidentificado();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de verificar Incompetencia ya que contiene dato apartir de Tipo de incompetencia (TIPO_INCOMPETENCIA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Tipo_IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "No debe de capturar Tipo_ Incompetencia(TIPO_INCOMPETENCIA) ya que Incompetencia(INCOMPETENCIA)=No";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.PivIncompetencia();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando incompetencia(INCOMPETENCIA)=Si no debe de capturar apartir de Fecha de presentacion de la demanda(FECHA_PRES_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Estatus_Demanda_Desechada();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "Desechada").replace("3", "Archivo").replace("4", "No se dio trámite al escrito de demanda");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Estatus de la demanda(ESTATUS_DEMANDA) =DESECHADA,ARCHIVO, NO SE DIO TRAMITE A LA DEMANDA no debe de capturarse a partir de fecha de la admision de la demanda(FECHA_ADMI_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNOrdinario.Estatus_Demanda_NoIdentificada();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "Desechada").replace("3", "Archivo").replace("4", "No se dio trámite al escrito de demanda");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de Verificar Estatus_demanda ya que contiene informacion a apartir de Fecha de Admision de la demanda (FECHA_ADMI_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Estatus_Expediente();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "En proceso de resolución");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando el estatus del expediente(ESTATUS_EXPEDIENTE)= en proceso de resolucion a partir de Fase en la que se solucionó el expediente no debe de capturarse(FASE_SOLI_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Fecha_acto_procesal();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Solucionado");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE) es Solucionado no debe de capturarse Fecha del ultimo Acto Procesal(FECHA_ACTO_PROCESAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

         ArrayResult = NNOrdinario.Fase_Sol_expNoExiste();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE SOLICITUD EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) no corresponde a Procedimiento (Ordinario)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNOrdinario.Fase_Sol_expNI();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE SOLICITUD EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) =No identificado, no debe capturar desde Forma de solución (FORMA_SOLUCIONFE) hasta Monto estipulado en la forma de solución (MONTO_SOLUCIONAJ). O en su caso agregar la fase del expediente si es que hay valor valido en la fecha de resolución.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Fase_Sol_exp_FE();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE SOLICITUD EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("9", "Fase escrita");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Fase de solicitud del expediente(FASE_SOLI_EXPEDIENTE) = Fase escrita No se debe de capturar Rubro(Audiencia de juicio) (Audiencia Preliminar)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNOrdinario.Fase_Sol_exp_AP();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE SOLICITUD EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Audiencia preliminar");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Fase de solicitud del expediente(FASE_SOLI_EXPEDIENTE) = Audiencia Preliminar No se debe de capturar Rubro(Fase escrita) (Audiencia de juicio)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

       /*
        ArrayResult = NNOrdinario.Fase_Sol_exp_AJ();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE SOLICITUD EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "Audiencia de juicio");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja1.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja1.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Fase de solicitud del expediente(FASE_SOLI_EXPEDIENTE) = Audiencia de juicio No se debe de capturar Rubro(Fase escrita) (Audiencia Preliminar)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        */
progressBar.setValue(20);
    }

    public void Despliega_Part_Act_Ordinario(HSSFWorkbook libro, HSSFSheet hoja2, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_act_ordinario Part_ordinarioNE = new EDQPart_act_ordinario();
        EDPart_Act_ordinario NNPart_Act_ordinario = new EDPart_Act_ordinario();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja2.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_ACT_ORDINARIO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja2.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);
PValidacion validacion = new PValidacion();  
     if  (!validacion.clave_entidad.equals("15"))
 {
        ArrayResult = NNPart_Act_ordinario.ActorNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ACTOR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Actor(ACTOR) no debe ser -1 =No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 }
     
        ArrayResult = NNPart_Act_ordinario.Actor_Trabajador();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ACTOR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "CUANDO Actor(ACTOR) = Trabajador  no debe capturar desde Nombre del sindicato(NOMBRE_SINDICATO) hasta No identificado(NO_IDENTIFICADO)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Act_ordinario.Actor_Sindicato();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ACTOR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "CUANDO Actor(ACTOR) = Sindicato no debe capturar desde sexo(SEXO) hasta jornada(JORNADA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Act_ordinario.Actor_Coalicion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ACTOR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja2.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja2.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "CUANDO Actor(ACTOR) = Coalicion_de_trabajadores no debe de capturar desde sexo(SEXO) hasta especifique (otra organizacion obrera)(OTRO_ESP_OBRERA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_ordinarioNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja2.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Actor no se encuentra desagregado en PART_ACT_ORDINARIO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja2.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_ordinarioNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja2.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI, Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja2.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_ordinarioNE.Estatus_demandaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja2.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el estatus de la demanda(ESTATUS_DEMANDA)=DESECHADA,ARCHIVO,NO SE DIO TRAMITE AL ESCRITO DE DEMANDA. Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja2.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_ordinarioNE.Dif_ActoresNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE ACTORES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE ACTOR";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja2.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja2.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de Actores en procedimiento Ordinario es diferente a el desglose de Actores en Part_act_ordinario";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        progressBar.setValue(25);
    }

    public void Despliega_Part_Dem_Ordinario(HSSFWorkbook libro, HSSFSheet hoja3, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_dem_ordinario Part_ordinarioNE = new EDQPart_dem_ordinario();
        EDPart_Dem_ordinario NNPart_Dem_ordinario = new EDPart_Dem_ordinario();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja3.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_DEM_ORDINARIO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja3.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);
        
PValidacion validacion = new PValidacion();          
 if  (!validacion.clave_entidad.equals("15"))
 {
        ArrayResult = NNPart_Dem_ordinario.DemandadoNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Demandado";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Demandado(DEMANDADO) no debe de ser -1=No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 }
        ArrayResult = NNPart_Dem_ordinario.Demandado_Otro();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Demandado";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Demandado(DEMANDADO)=otro no debe de capturar desde tipo(TIPO) hasta longitud(LONGITUD_EMPR)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Dem_ordinario.Tipo_pf();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Tipo";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja3.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja3.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo(TIPO)= persona_Fisica no debe de capturar desde  razón social de la empresa o establecimiento(RAZON_SOCIAL_EMPR) hasta longitud(LONGITUD_EMPR)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_ordinarioNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja3.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Demandado no se encuentra desagregado en PART_DEM_ORDINARIO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja3.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_ordinarioNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja3.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia(INCOMPETENCIA) = SI,Cantidad de demandados(CANTIDAD_DEMANDADOS) es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja3.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_ordinarioNE.Estatus_demandaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja3.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el estatus de la demanda(ESTATUS_DEMANDA)=DESECHADA,ARCHIVO,NO SE DIO TRAMITE AL ESCRITO DE DEMANDA.Cantidad de demandados(CANTIDAD_DEMANDADOS) es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja3.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_ordinarioNE.Dif_demandadosNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE DEMANDADOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE DEMANDADOS";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja3.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja3.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de demandados en procedimiento Ordinario es diferente a el desglose de Demandados en Part_dem_ordinario";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            
        }
    progressBar.setValue(30);
       
    }

    public void Despliega_IndividualNE(HSSFWorkbook libro, HSSFSheet hoja4, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {

        EDQIndividual Individual = new EDQIndividual();
        EDIndividual NNindividual = new EDIndividual();
        EDQNuevosIndividual Q=new EDQNuevosIndividual();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja4.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO INDIVIDUAL ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja4.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);
 
        ArrayResult = Q.IndividualEstatusDemanda(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Si en los campos ¿Hubo tramitación  por auto de depuración? (PREG_AUTO_DEPURACION_TRAM), ¿Hubo celebración de audiencia preliminar?(PREG_AUD_PRELIM_CELEBR) y ¿Hubo celebración de audiencia de juicio? (PREG_CELEBRA_AUD_JUICIO) se selecciona la opción Sí, en el campo Estatus de la demanda (ID_ESTATUS_DEMANDA) debe contener la opción Admitida.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
       ArrayResult = Q.IndividualEstatusAD(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCION_AD) en etapa tramitación por auto de depuración.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Q.IndividualEstatusTA(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLUCION_TA) en etapa tramitación sin audiencias.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Q.IndividualEstatusAP(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCION_AP) en etapa Audiencia Preliminar.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Q.IndividualEstatusAJ(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCION_AJ) en etapa Audiencia de Juicio.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Individual.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_PRES_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA PRESENTACION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion de la demanda (FECHA_PRES_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_ADMI_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ADMISION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de admision de la demanda (FECHA_ADMI_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_DEPURACION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DEPURACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de auto de depuracion (FECHA_DEPURACION) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_AUDIENCIA_PRELIM_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia preliminar (FECHA_AUDIENCIA_PRELIM) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_AUDIENCIA_JUICIO_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA JUICIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia de juicio (FECHA_AUDIENCIA_JUICIO) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_ACTO_PROCESAL_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha del ultimo acto procesal (FECHA_ACTO_PROCESAL) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_DEPURACION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DEPURACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de auto de depuracion (FECHA_DEPURACION) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_DICTO_RESOLUCION_AD_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por auto de depuracion (FECHA_DICTO_RESOLUCION_AD) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_RESOLUCION_TA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por tramitacion sin audiencias (FECHA_RESOLUCION_TA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_DICTO_RESOLUCION_AP_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION (AUDIENCIA PRELIMINAR)";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por audiencia preliminar (FECHA_DICTO_RESOLUCION_AP) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.FECHA_DICTO_RESOLUCION_AJ_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION (AUDIENCIA DE JUICIO)";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion por audiencia de juicio (FECHA_DICTO_RESOLUCION_AJ) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

      /*  if (PValidacion.NMunicipio.equals("Campeche")) {

            ArrayResult = Individual.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(3);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja4.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja4.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja4.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja4.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja4.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja4.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja4.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja4.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja4.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja4.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja4.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura(FECHA_APERTURA_EXPEDIENTE) no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja4.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Individual.Año_DIF_Campeche();
        } else {
            ArrayResult = Individual.Año_Expe_IndividualNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(3);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja4.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja4.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja4.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja4.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja4.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja4.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja4.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja4.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja4.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja4.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja4.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja4.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/

        ArrayResult = Individual.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Individual.Fecha_Aud_Presentacion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION (T.2.1_esp_indiv)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Individual.Fecha_Aud_Apertura();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA (T.2.1_esp_indiv)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Apertura del Expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Individual.Fecha_Aud_Admision();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE ADMISION (T.2.1_esp_indiv)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Admision de la demanda(FECHA_ADMISION_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Individual.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Individual.Fecha_PresentacionAdmiNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA ADMISION";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Admision no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Individual.Fecha_Admi_demandaNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado Fecha_Admi_demanda: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(3);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE ADMISIÓN DE LA DEMANDA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de admisión de la demanda no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila6 = hoja4.createRow(conEnc);//FILA
            HSSFCell celda6 = fila6.createCell((short) 5);//COLUMNA
            celda6.setCellStyle(estiloCelda1);
            celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt6 = "COMENTARIOS";
            HSSFRichTextString texto6 = new HSSFRichTextString(txt6);
            celda6.setCellValue(texto6);
            fila6.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja4.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador FECHA_ADMI_DEMANDA i: " + coni + " " + ArrayResult.size());
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Individual.Fecha_DepuracionNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaA00 = hojaresumenval.createRow(3);//filaA
            HSSFCell celdaA00 = filaA00.createCell((short) 1);//COLUMNA    
            celdaA00.setCellStyle(PAmarillo);

            HSSFRow filaA1 = hoja4.createRow(conEnc);//filaA
            HSSFCell celdaA1 = filaA1.createCell((short) 0);//COLUMNA
            celdaA1.setCellStyle(estiloCelda1);
            celdaA1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtA1);
            celdaA1.setCellValue(textoA1);
            filaA1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA6 = hoja4.createRow(conDat + i);//filaA
                HSSFCell celdaA6 = filaA6.createCell((short) 0);//COLUMNA
                celdaA6.setCellStyle(estiloCeldabordes0);
                celdaA6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA6 = Arrays.toString(ArrayResult.get(i));
                txtA6 = txtA6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaA6.setCellValue(textoA6);
                filaA6.setHeight((short) 300);
            }

            HSSFRow filaA2 = hoja4.createRow(conEnc);//filaA
            HSSFCell celdaA2 = filaA2.createCell((short) 1);//COLUMNA
            celdaA2.setCellStyle(estiloCelda1);
            celdaA2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtA2);
            celdaA2.setCellValue(textoA2);
            filaA2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA7 = hoja4.createRow(conDat + i);//filaA
                HSSFCell celdaA7 = filaA7.createCell((short) 1);//COLUMNA
                celdaA7.setCellStyle(estiloCeldabordes0);
                celdaA7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA7 = Arrays.toString(ArrayResult.get(i));
                txtA7 = txtA7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaA7.setCellValue(textoA7);
                filaA7.setHeight((short) 300);
            }

            HSSFRow filaA3 = hoja4.createRow(conEnc);//filaA
            HSSFCell celdaA3 = filaA3.createCell((short) 2);//COLUMNA
            celdaA3.setCellStyle(estiloCelda1);
            celdaA3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtA3);
            celdaA3.setCellValue(textoA3);
            filaA3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA8 = hoja4.createRow(conDat + i);//filaA
                HSSFCell celdaA8 = filaA8.createCell((short) 2);//COLUMNA
                celdaA8.setCellStyle(estiloCeldabordes0);
                celdaA8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA8 = Arrays.toString(ArrayResult.get(i));
                txtA8 = txtA8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaA8.setCellValue(textoA8);
                filaA8.setHeight((short) 300);
            }

            HSSFRow filaA4 = hoja4.createRow(conEnc);//filaA
            HSSFCell celdaA4 = filaA4.createCell((short) 3);//COLUMNA
            celdaA4.setCellStyle(estiloCelda1);
            celdaA4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA4 = "FECHA AUTO DEPURACION";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtA4);
            celdaA4.setCellValue(textoA4);
            filaA4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA9 = hoja4.createRow(conDat + i);//filaA
                HSSFCell celdaA9 = filaA9.createCell((short) 3);//COLUMNA
                celdaA9.setCellStyle(estiloCeldabordes0);
                celdaA9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA9 = Arrays.toString(ArrayResult.get(i));
                txtA9 = txtA9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(parts0);
                celdaA9.setCellValue(textoA9);
                filaA9.setHeight((short) 300);
            }

            HSSFRow filaA5 = hoja4.createRow(conEnc);//filaA
            HSSFCell celdaA5 = filaA5.createCell((short) 4);//COLUMNA
            celdaA5.setCellStyle(estiloCelda1);
            celdaA5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtA5);
            celdaA5.setCellValue(textoA5);
            filaA5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA9 = hoja4.createRow(conDat + i);//filaA
                HSSFCell celdaA9 = filaA9.createCell((short) 4);//COLUMNA
                celdaA9.setCellStyle(estiloCeldabordes0);
                celdaA9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA9 = "La Fecha de auto de depuración no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtA9);
                celdaA9.setCellValue(textoA9);
                filaA9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            System.out.println("contador FECHA_AUDIENCIA_JUICIO Encabezado: " + conEnc + "Contador Datos: " + conDat);
        }

        ArrayResult = Individual.Fecha_Audiencia_PrelimNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(3);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja4.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja4.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja4.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja4.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja4.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja4.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja4.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA DE AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja4.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja4.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja4.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha de audiencia preliminar no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            System.out.println("contador FECHA_AUDINECIA_PRELIMINAR Encabezado: " + conEnc + "Contador Datos: " + conDat);
        }

        ArrayResult = Individual.Fecha_Audiencia_JuicioNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoC1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoC1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoC6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoC2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoC2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoC7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoC3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoC3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoC8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA AUDIENCIA JUICIO";
            HSSFRichTextString textoC4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoC4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 3);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = Arrays.toString(ArrayResult.get(i));
                txtC9 = txtC9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(parts0);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoC5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoC5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 4);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = "La Fecha de audiencia de juicio no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(txtC9);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            System.out.println("contador feCHA_EMPLAZ_DEMANDA Encabezado: " + conEnc + "Contador Datos: " + conDat);
        }

        ArrayResult = Individual.Fecha_Acto_procesalNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaD00 = hojaresumenval.createRow(3);//filaD
            HSSFCell celdaD00 = filaD00.createCell((short) 1);//COLUMNA    
            celdaD00.setCellStyle(PAmarillo);

            HSSFRow filaD1 = hoja4.createRow(conEnc);//filaD
            HSSFCell celdaD1 = filaD1.createCell((short) 0);//COLUMNA
            celdaD1.setCellStyle(estiloCelda1);
            celdaD1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoD1 = new HSSFRichTextString(txtD1);
            celdaD1.setCellValue(textoD1);
            filaD1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD6 = hoja4.createRow(conDat + i);//filaD
                HSSFCell celdaD6 = filaD6.createCell((short) 0);//COLUMNA
                celdaD6.setCellStyle(estiloCeldabordes0);
                celdaD6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD6 = Arrays.toString(ArrayResult.get(i));
                txtD6 = txtD6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD6 = new HSSFRichTextString(parts0);
                celdaD6.setCellValue(textoD6);
                filaD6.setHeight((short) 300);
            }

            HSSFRow filaD2 = hoja4.createRow(conEnc);//filaD
            HSSFCell celdaD2 = filaD2.createCell((short) 1);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD7 = hoja4.createRow(conDat + i);//filaD
                HSSFCell celdaD7 = filaD7.createCell((short) 1);//COLUMNA
                celdaD7.setCellStyle(estiloCeldabordes0);
                celdaD7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD7 = Arrays.toString(ArrayResult.get(i));
                txtD7 = txtD7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD7 = new HSSFRichTextString(parts0);
                celdaD7.setCellValue(textoD7);
                filaD7.setHeight((short) 300);
            }

            HSSFRow filaD3 = hoja4.createRow(conEnc);//filaD
            HSSFCell celdaD3 = filaD3.createCell((short) 2);//COLUMNA
            celdaD3.setCellStyle(estiloCelda1);
            celdaD3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoD3 = new HSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);
            filaD3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD8 = hoja4.createRow(conDat + i);//filaD
                HSSFCell celdaD8 = filaD8.createCell((short) 2);//COLUMNA
                celdaD8.setCellStyle(estiloCeldabordes0);
                celdaD8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD8 = Arrays.toString(ArrayResult.get(i));
                txtD8 = txtD8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD8 = new HSSFRichTextString(parts0);
                celdaD8.setCellValue(textoD8);
                filaD8.setHeight((short) 300);
            }

            HSSFRow filaD4 = hoja4.createRow(conEnc);//filaD
            HSSFCell celdaD4 = filaD4.createCell((short) 3);//COLUMNA
            celdaD4.setCellStyle(estiloCelda1);
            celdaD4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD4 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoD4 = new HSSFRichTextString(txtD4);
            celdaD4.setCellValue(textoD4);
            filaD4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD9 = hoja4.createRow(conDat + i);//filaD
                HSSFCell celdaD9 = filaD9.createCell((short) 3);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = Arrays.toString(ArrayResult.get(i));
                txtD9 = txtD9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(parts0);
                celdaD9.setCellValue(textoD9);
                filaD9.setHeight((short) 300);
            }

            HSSFRow filaD5 = hoja4.createRow(conEnc);//filaD
            HSSFCell celdaD5 = filaD5.createCell((short) 4);//COLUMNA
            celdaD5.setCellStyle(estiloCelda1);
            celdaD5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtD5);
            celdaD5.setCellValue(textoD5);
            filaD5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD9 = hoja4.createRow(conDat + i);//filaD
                HSSFCell celdaD9 = filaD9.createCell((short) 4);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = "La Fecha del último acto procesal (FECHA_ACTO_PROCESAL) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtD9);
                celdaD9.setCellValue(textoD9);
                filaD9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Individual.Fecha_Dicto_Resolucion_AdNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaE00 = hojaresumenval.createRow(3);//filaE
            HSSFCell celdaE00 = filaE00.createCell((short) 1);//COLUMNA    
            celdaE00.setCellStyle(PAmarillo);

            HSSFRow filaE1 = hoja4.createRow(conEnc);//filaE
            HSSFCell celdaE1 = filaE1.createCell((short) 0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoE1 = new HSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);
            filaE1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE6 = hoja4.createRow(conDat + i);//filaE
                HSSFCell celdaE6 = filaE6.createCell((short) 0);//COLUMNA
                celdaE6.setCellStyle(estiloCeldabordes0);
                celdaE6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE6 = Arrays.toString(ArrayResult.get(i));
                txtE6 = txtE6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE6 = new HSSFRichTextString(parts0);
                celdaE6.setCellValue(textoE6);
                filaE6.setHeight((short) 300);
            }

            HSSFRow filaE2 = hoja4.createRow(conEnc);//filaE
            HSSFCell celdaE2 = filaE2.createCell((short) 1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE7 = hoja4.createRow(conDat + i);//filaE
                HSSFCell celdaE7 = filaE7.createCell((short) 1);//COLUMNA
                celdaE7.setCellStyle(estiloCeldabordes0);
                celdaE7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE7 = Arrays.toString(ArrayResult.get(i));
                txtE7 = txtE7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE7 = new HSSFRichTextString(parts0);
                celdaE7.setCellValue(textoE7);
                filaE7.setHeight((short) 300);
            }

            HSSFRow filaE3 = hoja4.createRow(conEnc);//filaE
            HSSFCell celdaE3 = filaE3.createCell((short) 2);//COLUMNA
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoE3 = new HSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);
            filaE3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE8 = hoja4.createRow(conDat + i);//filaE
                HSSFCell celdaE8 = filaE8.createCell((short) 2);//COLUMNA
                celdaE8.setCellStyle(estiloCeldabordes0);
                celdaE8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE8 = Arrays.toString(ArrayResult.get(i));
                txtE8 = txtE8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE8 = new HSSFRichTextString(parts0);
                celdaE8.setCellValue(textoE8);
                filaE8.setHeight((short) 300);
            }

            HSSFRow filaE4 = hoja4.createRow(conEnc);//filaE
            HSSFCell celdaE4 = filaE4.createCell((short) 3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE4 = "FECHA DICTO RESOLUCION (AUTO DEPURACION) ";
            HSSFRichTextString textoE4 = new HSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);
            filaE4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaE
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = Arrays.toString(ArrayResult.get(i));
                txtE9 = txtE9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(parts0);
                celdaE9.setCellValue(textoE9);
                filaE9.setHeight((short) 300);
            }

            HSSFRow filaE5 = hoja4.createRow(conEnc);//filaE
            HSSFCell celdaE5 = filaE5.createCell((short) 4);//COLUMNA
            celdaE5.setCellStyle(estiloCelda1);
            celdaE5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE5 = "OBSERVACIONES";
            HSSFRichTextString textoE5 = new HSSFRichTextString(txtE5);
            celdaE5.setCellValue(textoE5);
            filaE5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaE
                HSSFCell celdaE9 = filaE9.createCell((short) 4);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha en la que se dictó la resolución (Tramitación por auto depuración) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoE9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Individual.Fecha_Resolucion_TaNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaF00 = hojaresumenval.createRow(3);//filaF
            HSSFCell celdaF00 = filaF00.createCell((short) 1);//COLUMNA    
            celdaF00.setCellStyle(PAmarillo);

            HSSFRow filaF1 = hoja4.createRow(conEnc);//filaF
            HSSFCell celdaF1 = filaF1.createCell((short) 0);//COLUMNA
            celdaF1.setCellStyle(estiloCelda1);
            celdaF1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoF1 = new HSSFRichTextString(txtF1);
            celdaF1.setCellValue(textoF1);
            filaF1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF6 = hoja4.createRow(conDat + i);//filaF
                HSSFCell celdaF6 = filaF6.createCell((short) 0);//COLUMNA
                celdaF6.setCellStyle(estiloCeldabordes0);
                celdaF6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF6 = Arrays.toString(ArrayResult.get(i));
                txtF6 = txtF6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoF6 = new HSSFRichTextString(parts0);
                celdaF6.setCellValue(textoF6);
                filaF6.setHeight((short) 300);
            }

            HSSFRow filaF2 = hoja4.createRow(conEnc);//filaF
            HSSFCell celdaF2 = filaF2.createCell((short) 1);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoF2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoF2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF7 = hoja4.createRow(conDat + i);//filaF
                HSSFCell celdaF7 = filaF7.createCell((short) 1);//COLUMNA
                celdaF7.setCellStyle(estiloCeldabordes0);
                celdaF7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF7 = Arrays.toString(ArrayResult.get(i));
                txtF7 = txtF7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoF7 = new HSSFRichTextString(parts0);
                celdaF7.setCellValue(textoF7);
                filaF7.setHeight((short) 300);
            }

            HSSFRow filaF3 = hoja4.createRow(conEnc);//filaF
            HSSFCell celdaF3 = filaF3.createCell((short) 2);//COLUMNA
            celdaF3.setCellStyle(estiloCelda1);
            celdaF3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoF3 = new HSSFRichTextString(txtF3);
            celdaF3.setCellValue(textoF3);
            filaF3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF8 = hoja4.createRow(conDat + i);//filaF
                HSSFCell celdaF8 = filaF8.createCell((short) 2);//COLUMNA
                celdaF8.setCellStyle(estiloCeldabordes0);
                celdaF8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF8 = Arrays.toString(ArrayResult.get(i));
                txtF8 = txtF8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoF8 = new HSSFRichTextString(parts0);
                celdaF8.setCellValue(textoF8);
                filaF8.setHeight((short) 300);
            }

            HSSFRow filaF4 = hoja4.createRow(conEnc);//filaF
            HSSFCell celdaF4 = filaF4.createCell((short) 3);//COLUMNA
            celdaF4.setCellStyle(estiloCelda1);
            celdaF4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF4 = "FECHA DICTO RESOLUCION [TRAM.SIN AUDIENCIAS]";
            HSSFRichTextString textoF4 = new HSSFRichTextString(txtF4);
            celdaF4.setCellValue(textoF4);
            filaF4.setHeight((short) 750);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF9 = hoja4.createRow(conDat + i);//filaF
                HSSFCell celdaF9 = filaF9.createCell((short) 3);//COLUMNA
                celdaF9.setCellStyle(estiloCeldabordes0);
                celdaF9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF9 = Arrays.toString(ArrayResult.get(i));
                txtF9 = txtF9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoF9 = new HSSFRichTextString(parts0);
                celdaF9.setCellValue(textoF9);
                filaF9.setHeight((short) 300);
            }

            HSSFRow filaF5 = hoja4.createRow(conEnc);//filaF
            HSSFCell celdaF5 = filaF5.createCell((short) 4);//COLUMNA
            celdaF5.setCellStyle(estiloCelda1);
            celdaF5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF5 = "OBSERVACIONES";
            HSSFRichTextString textoF5 = new HSSFRichTextString(txtF5);
            celdaF5.setCellValue(textoF5);
            filaF5.setHeight((short) 750);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF9 = hoja4.createRow(conDat + i);//filaF
                HSSFCell celdaF9 = filaF9.createCell((short) 4);//COLUMNA
                celdaF9.setCellStyle(estiloCeldabordes0);
                celdaF9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF9 = "La Fecha en la que se dictó la resolución (Tramitación sin audiencias) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoF9 = new HSSFRichTextString(txtF9);
                celdaF9.setCellValue(textoF9);
                filaF9.setHeight((short) 350);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;

            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Individual.Fecha_Resolucion_ApNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaG00 = hojaresumenval.createRow(3);//filaG
            HSSFCell celdaG00 = filaG00.createCell((short) 1);//COLUMNA    
            celdaG00.setCellStyle(PAmarillo);

            HSSFRow filaG1 = hoja4.createRow(conEnc);//filaG
            HSSFCell celdaG1 = filaG1.createCell((short) 0);//COLUMNA
            celdaG1.setCellStyle(estiloCelda1);
            celdaG1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoG1 = new HSSFRichTextString(txtG1);
            celdaG1.setCellValue(textoG1);
            filaG1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG6 = hoja4.createRow(conDat + i);//filaG
                HSSFCell celdaG6 = filaG6.createCell((short) 0);//COLUMNA
                celdaG6.setCellStyle(estiloCeldabordes0);
                celdaG6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG6 = Arrays.toString(ArrayResult.get(i));
                txtG6 = txtG6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG6 = new HSSFRichTextString(parts0);
                celdaG6.setCellValue(textoG6);
                filaG6.setHeight((short) 300);
            }

            HSSFRow filaG2 = hoja4.createRow(conEnc);//filaG
            HSSFCell celdaG2 = filaG2.createCell((short) 1);//COLUMNA
            celdaG2.setCellStyle(estiloCelda1);
            celdaG2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoG2 = new HSSFRichTextString(txtG2);
            celdaG2.setCellValue(textoG2);
            filaG2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG7 = hoja4.createRow(conDat + i);//filaG
                HSSFCell celdaG7 = filaG7.createCell((short) 1);//COLUMNA
                celdaG7.setCellStyle(estiloCeldabordes0);
                celdaG7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG7 = Arrays.toString(ArrayResult.get(i));
                txtG7 = txtG7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG7 = new HSSFRichTextString(parts0);
                celdaG7.setCellValue(textoG7);
                filaG7.setHeight((short) 300);
            }

            HSSFRow filaG3 = hoja4.createRow(conEnc);//filaG
            HSSFCell celdaG3 = filaG3.createCell((short) 2);//COLUMNA
            celdaG3.setCellStyle(estiloCelda1);
            celdaG3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoG3 = new HSSFRichTextString(txtG3);
            celdaG3.setCellValue(textoG3);
            filaG3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG8 = hoja4.createRow(conDat + i);//filaG
                HSSFCell celdaG8 = filaG8.createCell((short) 2);//COLUMNA
                celdaG8.setCellStyle(estiloCeldabordes0);
                celdaG8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG8 = Arrays.toString(ArrayResult.get(i));
                txtG8 = txtG8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG8 = new HSSFRichTextString(parts0);
                celdaG8.setCellValue(textoG8);
                filaG8.setHeight((short) 300);
            }

            HSSFRow filaG4 = hoja4.createRow(conEnc);//filaG
            HSSFCell celdaG4 = filaG4.createCell((short) 3);//COLUMNA
            celdaG4.setCellStyle(estiloCelda1);
            celdaG4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG4 = "FECHA DICTO RESOLUCION [AUDIENCIA PRELIMINAR]";
            HSSFRichTextString textoG4 = new HSSFRichTextString(txtG4);
            celdaG4.setCellValue(textoG4);
            filaG4.setHeight((short) 750);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG9 = hoja4.createRow(conDat + i);//filaG
                HSSFCell celdaG9 = filaG9.createCell((short) 3);//COLUMNA
                celdaG9.setCellStyle(estiloCeldabordes0);
                celdaG9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG9 = Arrays.toString(ArrayResult.get(i));
                txtG9 = txtG9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG9 = new HSSFRichTextString(parts0);
                celdaG9.setCellValue(textoG9);
                filaG9.setHeight((short) 300);
            }

            HSSFRow filaG5 = hoja4.createRow(conEnc);//filaG
            HSSFCell celdaG5 = filaG5.createCell((short) 4);//COLUMNA
            celdaG5.setCellStyle(estiloCelda1);
            celdaG5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG5 = "OBSERVACIONES";
            HSSFRichTextString textoG5 = new HSSFRichTextString(txtG5);
            celdaG5.setCellValue(textoG5);
            filaG5.setHeight((short) 750);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG9 = hoja4.createRow(conDat + i);//filaG
                HSSFCell celdaG9 = filaG9.createCell((short) 4);//COLUMNA
                celdaG9.setCellStyle(estiloCeldabordes0);
                celdaG9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG9 = "La Fecha en la que se dictó la resolución (Audiencia preliminar) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG9 = new HSSFRichTextString(txtG9);
                celdaG9.setCellValue(textoG9);
                filaG9.setHeight((short) 350);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Individual.Fecha_Resolucion_AjNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaH00 = hojaresumenval.createRow(3);//filaH
            HSSFCell celdaH00 = filaH00.createCell((short) 1);//COLUMNA    
            celdaH00.setCellStyle(PAmarillo);

            HSSFRow filaH1 = hoja4.createRow(conEnc);//filaH
            HSSFCell celdaH1 = filaH1.createCell((short) 0);//COLUMNA
            celdaH1.setCellStyle(estiloCelda1);
            celdaH1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtH1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoH1 = new HSSFRichTextString(txtH1);
            celdaH1.setCellValue(textoH1);
            filaH1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaH6 = hoja4.createRow(conDat + i);//filaH
                HSSFCell celdaH6 = filaH6.createCell((short) 0);//COLUMNA
                celdaH6.setCellStyle(estiloCeldabordes0);
                celdaH6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtH6 = Arrays.toString(ArrayResult.get(i));
                txtH6 = txtH6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtH6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoH6 = new HSSFRichTextString(parts0);
                celdaH6.setCellValue(textoH6);
                filaH6.setHeight((short) 300);
            }

            HSSFRow filaH2 = hoja4.createRow(conEnc);//filaH
            HSSFCell celdaH2 = filaH2.createCell((short) 1);//COLUMNA
            celdaH2.setCellStyle(estiloCelda1);
            celdaH2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtH2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoH2 = new HSSFRichTextString(txtH2);
            celdaH2.setCellValue(textoH2);
            filaH2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaH7 = hoja4.createRow(conDat + i);//filaH
                HSSFCell celdaH7 = filaH7.createCell((short) 1);//COLUMNA
                celdaH7.setCellStyle(estiloCeldabordes0);
                celdaH7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtH7 = Arrays.toString(ArrayResult.get(i));
                txtH7 = txtH7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtH7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoH7 = new HSSFRichTextString(parts0);
                celdaH7.setCellValue(textoH7);
                filaH7.setHeight((short) 300);
            }

            HSSFRow filaH3 = hoja4.createRow(conEnc);//filaH
            HSSFCell celdaH3 = filaH3.createCell((short) 2);//COLUMNA
            celdaH3.setCellStyle(estiloCelda1);
            celdaH3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtH3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoH3 = new HSSFRichTextString(txtH3);
            celdaH3.setCellValue(textoH3);
            filaH3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaH8 = hoja4.createRow(conDat + i);//filaH
                HSSFCell celdaH8 = filaH8.createCell((short) 2);//COLUMNA
                celdaH8.setCellStyle(estiloCeldabordes0);
                celdaH8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtH8 = Arrays.toString(ArrayResult.get(i));
                txtH8 = txtH8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtH8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoH8 = new HSSFRichTextString(parts0);
                celdaH8.setCellValue(textoH8);
                filaH8.setHeight((short) 300);
            }

            HSSFRow filaH4 = hoja4.createRow(conEnc);//filaH
            HSSFCell celdaH4 = filaH4.createCell((short) 3);//COLUMNA
            celdaH4.setCellStyle(estiloCelda1);
            celdaH4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtH4 = "FECHA DICTO RESOLUCION [AUDIENCIA JUICIO]";
            HSSFRichTextString textoH4 = new HSSFRichTextString(txtH4);
            celdaH4.setCellValue(textoH4);
            filaH4.setHeight((short) 750);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaH9 = hoja4.createRow(conDat + i);//filaH
                HSSFCell celdaH9 = filaH9.createCell((short) 3);//COLUMNA
                celdaH9.setCellStyle(estiloCeldabordes0);
                celdaH9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtH9 = Arrays.toString(ArrayResult.get(i));
                txtH9 = txtH9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtH9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoH9 = new HSSFRichTextString(parts0);
                celdaH9.setCellValue(textoH9);
                filaH9.setHeight((short) 300);
            }

            HSSFRow filaH5 = hoja4.createRow(conEnc);//filaH
            HSSFCell celdaH5 = filaH5.createCell((short) 4);//COLUMNA
            celdaH5.setCellStyle(estiloCelda1);
            celdaH5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtH5 = "OBSERVACIONES";
            HSSFRichTextString textoH5 = new HSSFRichTextString(txtH5);
            celdaH5.setCellValue(textoH5);
            filaH5.setHeight((short) 750);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaH9 = hoja4.createRow(conDat + i);//filaH
                HSSFCell celdaH9 = filaH9.createCell((short) 4);//COLUMNA
                celdaH9.setCellStyle(estiloCeldabordes0);
                celdaH9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtH9 = "La Fecha en la que se dictó la resolución (Audiencia de juicio) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoH9 = new HSSFRichTextString(txtH9);
                celdaH9.setCellValue(textoH9);
                filaH9.setHeight((short) 350);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        
        
                 ArrayResult = NNindividual.SinMotivo_Conflicto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Fecha de apertura";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de seleccionar Si en al menos un Motivo de conflicto (campo Jornada inhumana por lo notoriamente excesiva, dada la índole del trabajo(INDOLE_TRABAJO) hasta Otro motivo del conflicto (especifique)(OTRO_CONF) ya que no puede haber ningun motivo de conflicto)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNindividual.Tipo_Asunto();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO DE ASUNTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Tipo de asunto no debe de ser =9 No_identificado";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Contrato_Escrito();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "CONTRATO ESCRITO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿El trabajador contó con contrato escrito? = No o No identificado, no debe de capturar tipo de contrato";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Centro_conciliacion();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "CONSTANCIA EXPEDIDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Se anexó constancia de no conciliación expedida por el Centro Conciliación?=NO o No identificado, no debe de capturar Clave/identificador de la constancia";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Preve_demanda();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "PREVE DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Se formuló prevención a la demanda? (PREVE_DEMANDA)=NO o No identificado, no debe de capturar ¿Se desahogó la prevención de la demanda? ((DESAHOGO_PREV_DEMANDA))";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 
        ArrayResult = NNindividual.Estatus_Demanda();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Estatus de la demanda no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Estatus_Demanda_admitida();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Estatus de la demanda (ESTATUS_DEMANDA)=Admitida no debe de capturarse Causas que impiden la admisión de la demanda (CAU_IMPI_ADMI_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Tram_depuracion();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TRAM DEPURACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo tramitación por auto de depuración? (TRAMITACION_DEPURACION) =No o No identificado, no debe de capturarse Fecha de auto de depuración.(FECHA_DEPURACION)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Audiencia_preliminar();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "AUDIENCIA PRELIMINAR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo celebración de audiencia preliminar?(AUDIENCIA_PRELIM) =No o No identificado, no debe de capturarse Fecha de audiencia preliminar (FECHA_AUDIENCIA_PRELIM).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Audiencia_juicio();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "AUDIENCIA JUICIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo celebración de audiencia de juicio?(AUDIENCIA_JUICIO)=NO o No identificado, no debe de capturar Fecha de audiencia de juicio (FECHA_AUDIENCIA_JUICIO)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Estatus_ExpedienteNI();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Estatus del expediente(ESTATUS_EXPEDIENTE) no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNindividual.Estatus_Expediente_Noidentificado();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de Verificar Estatus_expediente ya que contiene informacion a apartir de Fecha del ultimo acto procesal (FECHA_ACTO_PROCESAL).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "COMENTARIOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Incompetencia(INCOMPETENCIA) no debe ser =No identificada Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Tipo_IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "No debe de capturar Tipo de Incompetencia(TIPO_INCOMPETENCIA) ya que Incompetencia(INCOMPETENCIA)=No";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.PivIncompetencia();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando incompetencia(INCOMPETENCIA)=Si no debe de capturar apartir de Fecha de presentacion de la demanda(FECHA_PRES_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNindividual.PivIncompetencia_Noindentificado();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de verificar Incompetencia ya que contiene dato apartir de Tipo de incompetencia (TIPO_INCOMPETENCIA) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Estatus_Demanda_Desechada();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "Desechada").replace("3", "Archivo").replace("4", "No se dio trámite al escrito de demanda");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Estatus de la demanda =DESECHADA,ARCHIVO, NO SE DIO TRAMITE A LA DEMANDA no debe de capturarse a partir de fecha de la admision de la demanda";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
          ArrayResult = NNindividual.Estatus_Demanda_Noidentificada();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "Desechada").replace("3", "Archivo").replace("4", "No se dio trámite al escrito de demanda");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de Verificar Estatus_demanda ya que contiene informacion a apartir de Fecha de Admision de la demanda (FECHA_ADMI_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Estatus_Expediente();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("2", "En proceso de resolución");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando el estatus del expediente= en proceso de resolucion a partir de Fase de solicitude del expediente (FASE_SOLI_EXPEDIENTE) no debe de capturarse.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Fecha_acto_procesal();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Solucionado");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE) es Solucionado no debe de capturarse Fecha del ultimo Acto Procesal(FECHA_ACTO_PROCESAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
         ArrayResult = NNindividual.Fase_Sol_expNoExiste();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) no corresponde a Procedimiento (Individual)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Fase_Sol_expNI();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) =No identificado, no debe capturar desde Forma de solución (FORMA_SOLUCION_AD) hasta Monto estipulado en la forma de solución (MONTO_SOLUCION_AJ). O en su caso agregar la fase del expediente si es que hay valor valido en la fecha de resolución.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Fase_Sol_exp_TD();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("3", "Tramitación por auto de depuración");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando la fase del expediente = (tramitación por auto de depuración) no debe de capturarse (Tramitacion sin audiencias),(audiencia preliminar),(audiencia de juicio) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Fase_Sol_exp_TA();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("4", "Tramitación sin audiencias");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando la fase del expediente = (Tramitacion sin audiencias) no debe de capturarse (Tramitacion por auto depuracion),(audiencia preliminar),(audiencia de juicio) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNindividual.Fase_Sol_exp_AP();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Audiencia preliminar");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando la fase del expediente = (Audiencia Preliminar) no debe de capturarse (Tramitacion por auto depuracion),(Tramitacion sin audiencias),(audiencia de juicio) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
/* NO APLICA 
        
        
        ArrayResult = NNindividual.Fase_Sol_exp_AJ();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("1", "Audiencia Juicio");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja4.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja4.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando la fase del expediente = (audiencia de juicio) no debe de capturarse (Tramitacion por auto depuracion),(Tramitacion sin audiencias),(Audiencia Preliminar) ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
       */
    progressBar.setValue(35);
    }

    public void Despliega_Part_Act_Individual(HSSFWorkbook libro, HSSFSheet hoja5, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_act_individual Part_individualNE = new EDQPart_act_individual();
        EDPart_Act_Individual NNV3Part_Act_individual = new EDPart_Act_Individual();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja5.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_ACT_INDIVIDUAL";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja5.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = NNV3Part_Act_individual.ActorNI();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "Actor";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja5.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Actor No debe ser -1=No identificado. Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja5.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Act_individual.Actor_otro();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "Actor";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja5.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "CUANDO ACTOR = Beneficiario u Otro  no debe capturar desde Sexo hasta jornada";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja5.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_individualNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja5.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Actor no se encuentra desagregado en PART_ACT_INDIVIDUAL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja5.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_individualNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja5.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI, Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja5.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_individualNE.Estatus_demandaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja5.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el estatus de la demanda(ESTATUS_DEMANDA)=DESECHADA,ARCHIVO,NO SE DIO TRAMITE AL ESCRITO DE DEMANDA. Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja5.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_individualNE.Dif_ActoresNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE ACTORES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE ACTOR";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja5.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja5.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de Actores en procedimiento Individual es diferente a el desglose de Actores en Part_Act_individual";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        progressBar.setValue(40);
    }

    public void Despliega_Part_Dem_Individual(HSSFWorkbook libro, HSSFSheet hoja6, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_dem_individual Part_individualNE = new EDQPart_dem_individual();
        EDPart_Dem_individual NNPart_Dem_individual = new EDPart_Dem_individual();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja6.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_DEM_INDIVIDUAL";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja6.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = NNPart_Dem_individual.DemandadoNI();
        if (ArrayResult.size() > 0) {

            HSSFRow filaC1 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "DEMANDADO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Demandado no debe de ser -1=No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Dem_individual.Demandado_otro();
        if (ArrayResult.size() > 0) {

            HSSFRow filaC1 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "DEMANDADO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "CUANDO DEMANDADO = Otro  no debe capturar desde Tipo  hasta Longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Dem_individual.Tipo_persona();
        if (ArrayResult.size() > 0) {

            HSSFRow filaC1 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TIPO PERSONA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja6.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja6.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando Tipo= persona_Fisica no debe de capturar desde  razón social de la empresa o establecimiento  hasta longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_individualNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja6.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Demandado no se encuentra desagregado en PART_DEM_INDIVIDUAL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja6.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_individualNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja6.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI,Cantidad de demandados es No aplica por ende no se debe desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja6.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_individualNE.Estatus_demandaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja6.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el estatus de la demanda(ESTATUS_DEMANDA)=DESECHADA,ARCHIVO,NO SE DIO TRAMITE AL ESCRITO DE DEMANDA.Cantidad de demandados es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja6.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_individualNE.Dif_demandadosNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE DEMANDADOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE DEMANDADOS";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja6.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja6.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de demandados en procedimiento Individual es diferente a el desglose de Demandados en Part_dem_individual";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
      progressBar.setValue(45);
    }

    public void Despliega_ColectivoNE(HSSFWorkbook libro, HSSFSheet hoja7, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {

        EDV3QColectivo Colectivo = new EDV3QColectivo();
        EDV3Colectivo NNColectivo = new EDV3Colectivo();
         EDQNuevosColectivo Q= new EDQNuevosColectivo();
        
        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja7.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO COLECTIVO ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja7.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        ArrayResult = Q.ColectivoEstatusDemanda(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Si en los campos ¿Hubo tramitación  por auto de depuración? (PREG_AUTO_DEPURACION_TRAM)) y ¿Hubo celebración de audiencia de juicio? (PREG_AUD_PRELIM_CELEBR) se selecciona la opcion Sí, en el campo Estatus de la demanda (ID_ESTATUS_DEMANDA) debe contener la opción Admitida.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
      ArrayResult = Q.ColectivoEstatusAD(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "--Favor de capturar Fecha en la que se dictó la resolución (FECHA_DICTO_RESOLUCION_AD) en etapa tramitación por auto de depuración.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Q.ColectivoEstatusAJ(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLUCION_AJ) en etapa Audiencia de Juicio.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
            
        
        ArrayResult = Colectivo.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colectivo.FECHA_PRES_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE PRESENTACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion de la demanda (FECHA_PRES_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colectivo.FECHA_ADMI_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ADMISION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de admision de la demanda (FECHA_ADMI_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colectivo.FECHA_DEPURACION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DEPURACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de auto de depuracion (FECHA_DEPURACION) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colectivo.FECHA_DEPURACION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION AD";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha dicto resolucion por auto de depuracion (FECHA_RESOLUCION_AD) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colectivo.FECHA_RESOLUCION_AJ_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION AJ";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha dicto resolucion por audiencia de juicio (FECHA_RESOLUCION_AJ) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {

            ArrayResult = Colectivo.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(4);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja7.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja7.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja7.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja7.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja7.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja7.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja7.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja7.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja7.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja7.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja7.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja7.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Colectivo.Año_DIF_Campeche();
        } else {
            ArrayResult = Colectivo.Año_Expe_ColectivoNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(4);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja7.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja7.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja7.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja7.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja7.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja7.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja7.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja7.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja7.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja7.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja7.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja7.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/
/*
        ArrayResult = Colectivo.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }
*/
        ArrayResult = Colectivo.Fecha_Aud_Presentacion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION (T.3.1_esp_colec) ";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Colectivo.Fecha_Aud_Apertura();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA (T.3.1_esp_colec)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Apertura del Expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Colectivo.Fecha_Aud_Admision();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE ADMISION (T.3.1_esp_colec)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Admision de la demanda(FECHA_ADMISION_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Colectivo.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Colectivo.Fecha_PresentacionAdmiNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE ADMISION";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Admision no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Colectivo.Fecha_Admi_DemandaNE();
        if (ArrayResult.size() > 0) {
            // System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE ADMISIÓN DE LA DEMANDA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de admisión de la demanda no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colectivo.Fecha_Audiencia_JuicioNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaA00 = hojaresumenval.createRow(4);//filaA
            HSSFCell celdaA00 = filaA00.createCell((short) 1);//COLUMNA    
            celdaA00.setCellStyle(PAmarillo);

            HSSFRow filaA1 = hoja7.createRow(conEnc);//filaA
            HSSFCell celdaA1 = filaA1.createCell((short) 0);//COLUMNA
            celdaA1.setCellStyle(estiloCelda1);
            celdaA1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtA1);
            celdaA1.setCellValue(textoA1);
            filaA1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA6 = hoja7.createRow(conDat + i);//filaA
                HSSFCell celdaA6 = filaA6.createCell((short) 0);//COLUMNA
                celdaA6.setCellStyle(estiloCeldabordes0);
                celdaA6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA6 = Arrays.toString(ArrayResult.get(i));
                txtA6 = txtA6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaA6.setCellValue(textoA6);
                filaA6.setHeight((short) 300);
            }

            HSSFRow filaA2 = hoja7.createRow(conEnc);//filaA
            HSSFCell celdaA2 = filaA2.createCell((short) 1);//COLUMNA
            celdaA2.setCellStyle(estiloCelda1);
            celdaA2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtA2);
            celdaA2.setCellValue(textoA2);
            filaA2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA7 = hoja7.createRow(conDat + i);//filaA
                HSSFCell celdaA7 = filaA7.createCell((short) 1);//COLUMNA
                celdaA7.setCellStyle(estiloCeldabordes0);
                celdaA7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA7 = Arrays.toString(ArrayResult.get(i));
                txtA7 = txtA7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaA7.setCellValue(textoA7);
                filaA7.setHeight((short) 300);
            }

            HSSFRow filaA3 = hoja7.createRow(conEnc);//filaA
            HSSFCell celdaA3 = filaA3.createCell((short) 2);//COLUMNA
            celdaA3.setCellStyle(estiloCelda1);
            celdaA3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtA3);
            celdaA3.setCellValue(textoA3);
            filaA3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA8 = hoja7.createRow(conDat + i);//filaA
                HSSFCell celdaA8 = filaA8.createCell((short) 2);//COLUMNA
                celdaA8.setCellStyle(estiloCeldabordes0);
                celdaA8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA8 = Arrays.toString(ArrayResult.get(i));
                txtA8 = txtA8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA8.split(",");
                parts0 = parts[3].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaA8.setCellValue(textoA8);
                filaA8.setHeight((short) 300);
            }

            HSSFRow filaA4 = hoja7.createRow(conEnc);//filaA
            HSSFCell celdaA4 = filaA4.createCell((short) 3);//COLUMNA
            celdaA4.setCellStyle(estiloCelda1);
            celdaA4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA4 = "FECHA DE AUDIENCIA DE JUICIO";
            HSSFRichTextString textoA4 = new HSSFRichTextString(txtA4);
            celdaA4.setCellValue(textoA4);
            filaA4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA9 = hoja7.createRow(conDat + i);//filaA
                HSSFCell celdaA9 = filaA9.createCell((short) 3);//COLUMNA
                celdaA9.setCellStyle(estiloCeldabordes0);
                celdaA9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA9 = Arrays.toString(ArrayResult.get(i));
                txtA9 = txtA9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtA9.split(",");
                parts0 = parts[4].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(parts0);
                celdaA9.setCellValue(textoA9);
                filaA9.setHeight((short) 300);
            }

            HSSFRow filaA5 = hoja7.createRow(conEnc);//filaA
            HSSFCell celdaA5 = filaA5.createCell((short) 4);//COLUMNA
            celdaA5.setCellStyle(estiloCelda1);
            celdaA5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtA5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtA5);
            celdaA5.setCellValue(textoA5);
            filaA5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaA9 = hoja7.createRow(conDat + i);//filaA
                HSSFCell celdaA9 = filaA9.createCell((short) 4);//COLUMNA
                celdaA9.setCellStyle(estiloCeldabordes0);
                celdaA9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtA9 = "La Fecha de audiencia de juicio no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtA9);
                celdaA9.setCellValue(textoA9);
                filaA9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Colectivo.Fecha_DepuracionNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(4);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja7.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja7.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja7.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja7.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja7.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja7.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja7.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA DE AUTO DE DEPURACION";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja7.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja7.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja7.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha de auto de depuración no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Colectivo.Fecha_Acto_ProcesalNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(4);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoC1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoC1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoC6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoC2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoC2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoC7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoC3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoC3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoC8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoC4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoC4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 3);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = Arrays.toString(ArrayResult.get(i));
                txtC9 = txtC9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC9.split(",");
                parts0 = parts[4].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(parts0);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoC5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoC5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 4);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = "La Fecha del último acto procesal (FECHA_ACTO_PROCESAL) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(txtC9);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Colectivo.Fecha_Resolucion_AjNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaD00 = hojaresumenval.createRow(4);//filaD
            HSSFCell celdaD00 = filaD00.createCell((short) 1);//COLUMNA    
            celdaD00.setCellStyle(PAmarillo);

            HSSFRow filaD1 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaD1 = filaD1.createCell((short) 0);//COLUMNA
            celdaD1.setCellStyle(estiloCelda1);
            celdaD1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoD1 = new HSSFRichTextString(txtD1);
            celdaD1.setCellValue(textoD1);
            filaD1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD6 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaD6 = filaD6.createCell((short) 0);//COLUMNA
                celdaD6.setCellStyle(estiloCeldabordes0);
                celdaD6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD6 = Arrays.toString(ArrayResult.get(i));
                txtD6 = txtD6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD6 = new HSSFRichTextString(parts0);
                celdaD6.setCellValue(textoD6);
                filaD6.setHeight((short) 300);
            }

            HSSFRow filaD2 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaD2 = filaD2.createCell((short) 1);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoD2);
            filaD2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD7 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaD7 = filaD7.createCell((short) 1);//COLUMNA
                celdaD7.setCellStyle(estiloCeldabordes0);
                celdaD7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD7 = Arrays.toString(ArrayResult.get(i));
                txtD7 = txtD7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD7 = new HSSFRichTextString(parts0);
                celdaD7.setCellValue(textoD7);
                filaD7.setHeight((short) 300);
            }

            HSSFRow filaD3 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaD3 = filaD3.createCell((short) 2);//COLUMNA
            celdaD3.setCellStyle(estiloCelda1);
            celdaD3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoD3 = new HSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);
            filaD3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD8 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaD8 = filaD8.createCell((short) 2);//COLUMNA
                celdaD8.setCellStyle(estiloCeldabordes0);
                celdaD8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD8 = Arrays.toString(ArrayResult.get(i));
                txtD8 = txtD8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD8.split(",");
                parts0 = parts[3].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD8 = new HSSFRichTextString(parts0);
                celdaD8.setCellValue(textoD8);
                filaD8.setHeight((short) 300);
            }

            HSSFRow filaD4 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaD4 = filaD4.createCell((short) 3);//COLUMNA
            celdaD4.setCellStyle(estiloCelda1);
            celdaD4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD4 = "FECHA RESOLUCION (AUDIENCIA JUICIO)";
            HSSFRichTextString textoD4 = new HSSFRichTextString(txtD4);
            celdaD4.setCellValue(textoD4);
            filaD4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD9 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaD9 = filaD9.createCell((short) 3);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = Arrays.toString(ArrayResult.get(i));
                txtD9 = txtD9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD9.split(",");
                parts0 = parts[4].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(parts0);
                celdaD9.setCellValue(textoD9);
                filaD9.setHeight((short) 300);
            }

            HSSFRow filaD5 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaD5 = filaD5.createCell((short) 4);//COLUMNA
            celdaD5.setCellStyle(estiloCelda1);
            celdaD5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtD5);
            celdaD5.setCellValue(textoD5);
            filaD5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaD9 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaD9 = filaD9.createCell((short) 4);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = "La Fecha en la que se dictó la resolución (Audiencia de juicio) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtD9);
                celdaD9.setCellValue(textoD9);
                filaD9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Colectivo.Fecha_Dicto_Resolucion_ADNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaE00 = hojaresumenval.createRow(4);//filaD
            HSSFCell celdaE00 = filaE00.createCell((short) 1);//COLUMNA    
            celdaE00.setCellStyle(PAmarillo);

            HSSFRow filaE1 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaE1 = filaE1.createCell((short) 0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoE1 = new HSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);
            filaE1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE6 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaE6 = filaE6.createCell((short) 0);//COLUMNA
                celdaE6.setCellStyle(estiloCeldabordes0);
                celdaE6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE6 = Arrays.toString(ArrayResult.get(i));
                txtE6 = txtE6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE6 = new HSSFRichTextString(parts0);
                celdaE6.setCellValue(textoE6);
                filaE6.setHeight((short) 300);
            }

            HSSFRow filaE2 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaE2 = filaE2.createCell((short) 1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE7 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaE7 = filaE7.createCell((short) 1);//COLUMNA
                celdaE7.setCellStyle(estiloCeldabordes0);
                celdaE7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE7 = Arrays.toString(ArrayResult.get(i));
                txtE7 = txtE7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE7 = new HSSFRichTextString(parts0);
                celdaE7.setCellValue(textoE7);
                filaE7.setHeight((short) 300);
            }

            HSSFRow filaE3 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaE3 = filaE3.createCell((short) 2);//COLUMNA
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoE3 = new HSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);
            filaE3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE8 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaE8 = filaE8.createCell((short) 2);//COLUMNA
                celdaE8.setCellStyle(estiloCeldabordes0);
                celdaE8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE8 = Arrays.toString(ArrayResult.get(i));
                txtE8 = txtE8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE8.split(",");
                parts0 = parts[3].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE8 = new HSSFRichTextString(parts0);
                celdaE8.setCellValue(textoE8);
                filaE8.setHeight((short) 300);
            }

            HSSFRow filaE4 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaE4 = filaE4.createCell((short) 3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE4 = "FECHA RESOLUCION (AUTO DEPURACION)";
            HSSFRichTextString textoE4 = new HSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);
            filaE4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = Arrays.toString(ArrayResult.get(i));
                txtE9 = txtE9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE9.split(",");
                parts0 = parts[4].trim();
                // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(parts0);
                celdaE9.setCellValue(textoE9);
                filaE9.setHeight((short) 300);
            }

            HSSFRow filaE5 = hoja7.createRow(conEnc);//filaD
            HSSFCell celdaE5 = filaE5.createCell((short) 4);//COLUMNA
            celdaE5.setCellStyle(estiloCelda1);
            celdaE5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE5 = "OBSERVACIONES";
            HSSFRichTextString textoE5 = new HSSFRichTextString(txtE5);
            celdaE5.setCellValue(textoE5);
            filaE5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaD
                HSSFCell celdaE9 = filaE9.createCell((short) 4);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha en la que se dictó la resolución (Tramitación por auto de depuración) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoE9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        
        
        
                         ArrayResult = NNColectivo.SinMotivo_Conflicto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Fecha de apertura";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de seleccionar Si en al menos un Motivo de conflicto (campo Declaración de la pérdida de la mayoría de los trabajadores(DECLARACION_PERDIDA_MAY) hasta Otro motivo del conflicto (especifique)(OTRO_CONFLICTO) ya que no puede haber ningun motivo de conflicto)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        

        ArrayResult = NNColectivo.Tipo_Asunto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TIPO ASUNTO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Tipo de asunto no debe de ser =9 No_identificado";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Cons_Expedida();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "CONS_EXPEDIDA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando ¿Se anexó constancia de no conciliación expedida por el Centro Conciliación?=NO o No identificado, no debe de capturar Clave/identificador de la constancia";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Suspencion_temporal();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "SUSPENCION_TEMP";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Suspensión temporal de las relaciones de trabajo (SUSPENSION_TMP)=No o No identificado, no debe capturar desde Por causas de fuerza mayor o caso fortuito no imputable al patrón (NO_IMPUTABLE_ST) hasta Por falta de ministración por parte del Estado.(FALTA_MINISTRACION_ST)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Terminacion_Colectiva();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TERMINACION_TRAB";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "cuando Terminacion colectiva de las relaciones de trabajo(TERMINACION_TRAB)=No o No identificado, no debe capturarse desde Por causas de fuerza mayor  o caso fortuito no imputable al patrón (FUERZA_MAYOR_TC) hasta Por agotamiento de la materia objeto de una industria extractiva (AGOTAMIENTO_MATERIA_TC)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Viola_Derechos();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "VIOLA_DERECHOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "cuando Violaciones a derechos fundamentales en materia colectiva=No  o No identificado, no debe capturarse desde Libertad de asociación hasta  Especifique (otro tipo de violaciones a derechos fundamentales en materia colectiva).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Preve_demanda();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "¿Se formuló prevención a la demanda?";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Se formuló prevención a la demanda? ((PREVE_DEMANDA ))=NO o No identificado, no debe de capturar ¿Se desahogó la prevención de la demanda? (DESAHOGO_PREV_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Estatus_ExpedienteNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus del expediente no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Estatus_Demanda();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus de la demanda no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Tram_depuracion();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "TRAM DEPURACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo tramitación por auto de depuración? =No o No identificado, no debe de capturarse Fecha de auto de depuración";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Audiencia_juicio();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "AUDIENCIA JUICIO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo celebración de audiencia de juicio? =No o No identificado, no debe de capturarse Fecha de audiencia de juicio";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Incompetencia no debe ser =No identificada";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Tipo_IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja7.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja7.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "No debe de capturar Tipo_ Incompetencia ya que Incompetencia=No";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.PivIncompetencia();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "INCOMPETENCIA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando incompetencia(INCOMPETENCIA)=Si no debe de capturar apartir de Fecha de presentacion de la demanda(FECHA_PRES_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Estatus_Demanda_Desechada();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "Desechada").replace("3", "Archivo").replace("4", "No se dio trámite al escrito de demanda");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus de la demanda =DESECHADA,ARCHIVO, NO SE DIO TRAMITE A LA DEMANDA no debe de capturarse a partir de fecha de la admision de la demanda";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Estatus_Expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "En proceso de resolución");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando el estatus del expediente= en proceso de resolucion a partir de fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) no debe de capturarse. ";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Fecha_acto_procesal();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Solucionado");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE) es Solucionado no debe de capturarse Fecha del ultimo Acto Procesal(FECHA_ACTO_PROCESAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

         ArrayResult = NNColectivo.Fase_Sol_expNoExiste();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) no corresponde a Procedimiento (Colectivo)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
          
        ArrayResult = NNColectivo.Fase_Sol_expNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "//Cuando Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) =No identificado, no debe capturar desde Forma de solución (FORMA_SOLUCION_AD) hasta Monto estipulado en la forma de solución (MONTO_SOLUCION_AJ). O en su caso agregar la fase del expediente si es que hay valor valido en la fecha de resolución.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
/*
        ArrayResult = NNColectivo.Fase_Sol_exp_TAP();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("3", "Tramitación por auto de depuración");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Fase de solicitud del expediente = Tramitacion por auto depuracion No se debe de capturar Rubro (Audiencia de juicio)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNColectivo.Fase_Sol_exp_AJ();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(4);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("3", "Audiencia de Juicio");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja7.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja7.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Fase de solicitud del expediente = Audiencia de juicio No se debe de capturar Rubro(Tramitacion por auto depuracion)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 */
      progressBar.setValue(50);
    }

    public void Despliega_Part_Act_Colectivo(HSSFWorkbook libro, HSSFSheet hoja8, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDV3QPart_act_colectivo Part_colectivoNE = new EDV3QPart_act_colectivo();
        EDV3Part_Act_colectivo NNPart_Act_colectivo = new EDV3Part_Act_colectivo();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja8.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_ACT_COLECTIVO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja8.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = NNPart_Act_colectivo.ActorNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja8.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja8.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja8.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja8.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja8.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ACTOR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja8.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja8.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja8.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Actor no debe ser -1=No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Act_colectivo.Actor_Sindicato();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ACTOR";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "CUANDO ACTOR = Sindicato  no debe capturar desde Tipo hasta Longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Act_colectivo.Actor_Patron();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ACTOR";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "CUANDO ACTOR = Patron no debe de capturar desde Nombre del sindicato hasta No_identificado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNPart_Act_colectivo.Persona_Fisica();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TIPO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2];
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja8.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja8.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "CUANDO Tipo= persona_Fisica  no debe de capturar desde Razon social hasta Longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_colectivoNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja8.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Actor no se encuentra desagregado en PART_ACT_COLECTIVO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja8.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_colectivoNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja8.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI, Cantidad de Actores  es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja8.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_colectivoNE.Estatus_demandaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja8.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el estatus de la demanda(ESTATUS_DEMANDA)=DESECHADA,ARCHIVO,NO SE DIO TRAMITE AL ESCRITO DE DEMANDA. Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja8.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_colectivoNE.Dif_ActoresNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE ACTORES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE ACTOR";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja8.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja8.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de Actores en procedimiento Colectivo es diferente a el desglose de Actores en Part_Act_colectivo";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        progressBar.setValue(55);
    }

    public void Despliega_Part_Dem_Colectivo(HSSFWorkbook libro, HSSFSheet hoja9, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDV3QPart_dem_colectivo Part_colectivoNE = new EDV3QPart_dem_colectivo();
        EDV3Part_Dem_colectivo NNV3Part_Dem_colectivo = new EDV3Part_Dem_colectivo();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja9.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_DEM_COLECTIVO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja9.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = NNV3Part_Dem_colectivo.DemandadoNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja9.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja9.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja9.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja9.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja9.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Demandado";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja9.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja9.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja9.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Demandado no debe de ser -1=No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Dem_colectivo.Demandado_Otro();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "DEMANDADO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Demandado=otro no debe de capturar desde Nombre del sindicato hasta longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Dem_colectivo.Demandado_Sindicato();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "DEMANDADO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Demandado=Sindicato no debe de capturar desde tipo hasta longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Dem_colectivo.Demandado_Coalicion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "DEMANDADO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Demandado=Coalicion_de_trabajadores solo debe  capturar Cantidad de trabajadores involucrados,Hombres,Mujeres,No_identificado";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Dem_colectivo.Demandado_Patron();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "DEMANDADO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Demandado=Patron no debe de capturar desde Nombre del sindicato hasta No_identificado";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Dem_colectivo.persona_fisica();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TIPO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja9.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja9.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Demandado=Patron y tipo=persona_Fisica no debe de capturar desde Razon social hasta Longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_colectivoNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja9.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Demandado no se encuentra desagregado en PART_DEM_COLECTIVO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja9.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_colectivoNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja9.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI,Cantidad de demandados es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja9.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_colectivoNE.Estatus_demandaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja9.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el estatus de la demanda(ESTATUS_DEMANDA)=DESECHADA,ARCHIVO,NO SE DIO TRAMITE AL ESCRITO DE DEMANDA.Cantidad de demandados es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja9.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_colectivoNE.Dif_demandadosNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE DEMANDADOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE DEMANDADOS";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja9.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja9.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de demandados(CANTIDAD_DEMANDADOS) en procedimiento Colectivo es diferente a el desglose de Demandados en Part_dem_colectivo";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        
        progressBar.setValue(60);
    }

    public void Despliega_HuelgaNE(HSSFWorkbook libro, HSSFSheet hoja10, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {
        EDQHuelga Huelga = new EDQHuelga();
        EDHuelga NNHuelga = new EDHuelga();
        EDQNuevosHuelga Q=new EDQNuevosHuelga();
        
        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja10.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO HUELGA ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja10.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        ArrayResult = Q.HuelgaEstatusEH(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLU_EMPLAZ) en etapa Emplazamiento a huelga.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
         ArrayResult = Q.HuelgaEstatusPH(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLU_EMPLAZ) en etapa Prehuelga.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
         ArrayResult = Q.HuelgaEstatusH(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLU_HUELGA) en etapa Huelga.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        
        ArrayResult = Huelga.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_EMPLAZAMIENTO_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA EMPLAZAMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de emplazamiento (FECHA_EMPLAZAMIENTO) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_PRESENTA_PETIC_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA PRESENTACION PETICION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion de la peticion (FECHA_PRESENTA_PETIC) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_AUDIENCIA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia (FECHA_AUDIENCIA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_ACTO_PROCESAL_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha del ultimo acto procesal (FECHA_ACTO_PROCESAL) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_RESOLU_EMPLAZ_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION EMPLAZAMIENTO";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion del emplazamiento (FECHA_RESOLU_EMPLAZ) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_RESOLU_HUELGA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION HUELGA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion huelga (FECHA_RESOLU_HUELGA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_ESTALLAM_HUELGA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ESTALLAMIENTO HUELGA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de estallamiento a huelga (FECHA_ESTALLAM_HUELGA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.FECHA_LEVANT_HUELGA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA LEVANTAMIENTO HUELGA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de levantamieno a huelga (FECHA_LEVANT_HUELGA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {

            ArrayResult = Huelga.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(5);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja10.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja10.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja10.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja10.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja10.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja10.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja10.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja10.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja10.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja10.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja10.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja10.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Huelga.Año_DIF_Campeche();
        } else {
            ArrayResult = Huelga.Año_Expe_HuelgaNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(5);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja10.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja10.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja10.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja10.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja10.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja10.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja10.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja10.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja10.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja10.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja10.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja10.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/

        ArrayResult = Huelga.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Huelga.Fecha_Aud_Presentacion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION (T.4.1_huelga) ";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Presentacion.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Huelga.Fecha_Aud_Apertura();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA (T.4.1_huelga)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Apertura del Expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Huelga.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la peticion(FECHA_PRESENTA_PETIC).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Huelga.Fecha_AudienciaNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(5);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja10.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja10.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja10.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja10.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja10.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja10.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja10.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA AUDIENCIA";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja10.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja10.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja10.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha de audiencia de conciliación no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Huelga.Fecha_EmplazamientoNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(5);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoC1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoC1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoC6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoC2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoC2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoC7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoC3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoC3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoC8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA EMPLAZAMIENTO";
            HSSFRichTextString textoC4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoC4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 3);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = Arrays.toString(ArrayResult.get(i));
                txtC9 = txtC9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(parts0);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoC5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoC5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 4);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = "La Fecha de emplazamiento a huelga no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(txtC9);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Huelga.Fecha_Acto_ProcesalNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(5);//filaC
            HSSFCell celdaD00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaD00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaD1 = filaC1.createCell((short) 0);//COLUMNA
            celdaD1.setCellStyle(estiloCelda1);
            celdaD1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoD1 = new HSSFRichTextString(txtD1);
            celdaD1.setCellValue(textoD1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaD6 = filaC6.createCell((short) 0);//COLUMNA
                celdaD6.setCellStyle(estiloCeldabordes0);
                celdaD6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD6 = Arrays.toString(ArrayResult.get(i));
                txtD6 = txtD6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD6 = new HSSFRichTextString(parts0);
                celdaD6.setCellValue(textoD6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaD2 = filaC2.createCell((short) 1);//COLUMNA
            celdaD2.setCellStyle(estiloCelda1);
            celdaD2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoD2 = new HSSFRichTextString(txtD2);
            celdaD2.setCellValue(textoD2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaD7 = filaC7.createCell((short) 1);//COLUMNA
                celdaD7.setCellStyle(estiloCeldabordes0);
                celdaD7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD7 = Arrays.toString(ArrayResult.get(i));
                txtD7 = txtD7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD7 = new HSSFRichTextString(parts0);
                celdaD7.setCellValue(textoD7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaD3 = filaC3.createCell((short) 2);//COLUMNA
            celdaD3.setCellStyle(estiloCelda1);
            celdaD3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoD3 = new HSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaD8 = filaC8.createCell((short) 2);//COLUMNA
                celdaD8.setCellStyle(estiloCeldabordes0);
                celdaD8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD8 = Arrays.toString(ArrayResult.get(i));
                txtD8 = txtD8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD8 = new HSSFRichTextString(parts0);
                celdaD8.setCellValue(textoD8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaD4 = filaC4.createCell((short) 3);//COLUMNA
            celdaD4.setCellStyle(estiloCelda1);
            celdaD4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD4 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoD4 = new HSSFRichTextString(txtD4);
            celdaD4.setCellValue(textoD4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaD9 = filaC9.createCell((short) 3);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = Arrays.toString(ArrayResult.get(i));
                txtD9 = txtD9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtD9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(parts0);
                celdaD9.setCellValue(textoD9);
                filaC9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaD5 = filaC5.createCell((short) 4);//COLUMNA
            celdaD5.setCellStyle(estiloCelda1);
            celdaD5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtD5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtD5);
            celdaD5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaD9 = filaC9.createCell((short) 4);//COLUMNA
                celdaD9.setCellStyle(estiloCeldabordes0);
                celdaD9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtD9 = "La Fecha del último acto procesal (FECHA_ACTO_PROCESAL) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtD9);
                celdaD9.setCellValue(textoD9);
                filaC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Huelga.Fecha_Resolu_EmplazNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaE00 = hojaresumenval.createRow(5);//filaE
            HSSFCell celdaE00 = filaE00.createCell((short) 1);//COLUMNA    
            celdaE00.setCellStyle(PAmarillo);

            HSSFRow filaE1 = hoja10.createRow(conEnc);//filaE
            HSSFCell celdaE1 = filaE1.createCell((short) 0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoE1 = new HSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);
            filaE1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE6 = hoja10.createRow(conDat + i);//filaE
                HSSFCell celdaE6 = filaE6.createCell((short) 0);//COLUMNA
                celdaE6.setCellStyle(estiloCeldabordes0);
                celdaE6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE6 = Arrays.toString(ArrayResult.get(i));
                txtE6 = txtE6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE6 = new HSSFRichTextString(parts0);
                celdaE6.setCellValue(textoE6);
                filaE6.setHeight((short) 300);
            }

            HSSFRow filaE2 = hoja10.createRow(conEnc);//filaE
            HSSFCell celdaE2 = filaE2.createCell((short) 1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoE2 = new HSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            filaE2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE7 = hoja10.createRow(conDat + i);//filaE
                HSSFCell celdaE7 = filaE7.createCell((short) 1);//COLUMNA
                celdaE7.setCellStyle(estiloCeldabordes0);
                celdaE7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE7 = Arrays.toString(ArrayResult.get(i));
                txtE7 = txtE7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE7 = new HSSFRichTextString(parts0);
                celdaE7.setCellValue(textoE7);
                filaE7.setHeight((short) 300);
            }

            HSSFRow filaE3 = hoja10.createRow(conEnc);//filaE
            HSSFCell celdaE3 = filaE3.createCell((short) 2);//COLUMNA
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoE3 = new HSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);
            filaE3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE8 = hoja10.createRow(conDat + i);//filaE
                HSSFCell celdaE8 = filaE8.createCell((short) 2);//COLUMNA
                celdaE8.setCellStyle(estiloCeldabordes0);
                celdaE8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE8 = Arrays.toString(ArrayResult.get(i));
                txtE8 = txtE8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE8 = new HSSFRichTextString(parts0);
                celdaE8.setCellValue(textoE8);
                filaE8.setHeight((short) 300);
            }

            HSSFRow filaE4 = hoja10.createRow(conEnc);//filaE
            HSSFCell celdaE4 = filaE4.createCell((short) 3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE4 = "FECHA RESOLUCION EMPLAZAMIENTO";
            HSSFRichTextString textoE4 = new HSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);
            filaE4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaE
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = Arrays.toString(ArrayResult.get(i));
                txtE9 = txtE9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtE9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(parts0);
                celdaE9.setCellValue(textoE9);
                filaE9.setHeight((short) 300);
            }

            HSSFRow filaE5 = hoja10.createRow(conEnc);//filaE
            HSSFCell celdaE5 = filaE5.createCell((short) 4);//COLUMNA
            celdaE5.setCellStyle(estiloCelda1);
            celdaE5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtE5 = "OBSERVACIONES";
            HSSFRichTextString textoE5 = new HSSFRichTextString(txtE5);
            celdaE5.setCellValue(textoE5);
            filaE5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaE
                HSSFCell celdaE9 = filaE9.createCell((short) 4);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La fecha en la que se dictó la resolución no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoE9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Huelga.Fecha_Resolu_HuelgaNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaF00 = hojaresumenval.createRow(5);//filaF
            HSSFCell celdaF00 = filaF00.createCell((short) 1);//COLUMNA    
            celdaF00.setCellStyle(PAmarillo);

            HSSFRow filaF1 = hoja10.createRow(conEnc);//filaF
            HSSFCell celdaF1 = filaF1.createCell((short) 0);//COLUMNA
            celdaF1.setCellStyle(estiloCelda1);
            celdaF1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoE1 = new HSSFRichTextString(txtF1);
            celdaF1.setCellValue(textoE1);
            filaF1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF6 = hoja10.createRow(conDat + i);//filaF
                HSSFCell celdaF6 = filaF6.createCell((short) 0);//COLUMNA
                celdaF6.setCellStyle(estiloCeldabordes0);
                celdaF6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF6 = Arrays.toString(ArrayResult.get(i));
                txtF6 = txtF6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE6 = new HSSFRichTextString(parts0);
                celdaF6.setCellValue(textoE6);
                filaF6.setHeight((short) 300);
            }

            HSSFRow filaF2 = hoja10.createRow(conEnc);//filaF
            HSSFCell celdaF2 = filaF2.createCell((short) 1);//COLUMNA
            celdaF2.setCellStyle(estiloCelda1);
            celdaF2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoE2 = new HSSFRichTextString(txtF2);
            celdaF2.setCellValue(textoE2);
            filaF2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF7 = hoja10.createRow(conDat + i);//filaF
                HSSFCell celdaF7 = filaF7.createCell((short) 1);//COLUMNA
                celdaF7.setCellStyle(estiloCeldabordes0);
                celdaF7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF7 = Arrays.toString(ArrayResult.get(i));
                txtF7 = txtF7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE7 = new HSSFRichTextString(parts0);
                celdaF7.setCellValue(textoE7);
                filaF7.setHeight((short) 300);
            }

            HSSFRow filaF3 = hoja10.createRow(conEnc);//filaF
            HSSFCell celdaF3 = filaF3.createCell((short) 2);//COLUMNA
            celdaF3.setCellStyle(estiloCelda1);
            celdaF3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoE3 = new HSSFRichTextString(txtF3);
            celdaF3.setCellValue(textoE3);
            filaF3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF8 = hoja10.createRow(conDat + i);//filaF
                HSSFCell celdaF8 = filaF8.createCell((short) 2);//COLUMNA
                celdaF8.setCellStyle(estiloCeldabordes0);
                celdaF8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF8 = Arrays.toString(ArrayResult.get(i));
                txtF8 = txtF8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE8 = new HSSFRichTextString(parts0);
                celdaF8.setCellValue(textoE8);
                filaF8.setHeight((short) 300);
            }

            HSSFRow filaF4 = hoja10.createRow(conEnc);//filaF
            HSSFCell celdaF4 = filaF4.createCell((short) 3);//COLUMNA
            celdaF4.setCellStyle(estiloCelda1);
            celdaF4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF4 = "FECHA RESOLUCION HUELGA";
            HSSFRichTextString textoE4 = new HSSFRichTextString(txtF4);
            celdaF4.setCellValue(textoE4);
            filaF4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF9 = hoja10.createRow(conDat + i);//filaF
                HSSFCell celdaF9 = filaF9.createCell((short) 3);//COLUMNA
                celdaF9.setCellStyle(estiloCeldabordes0);
                celdaF9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF9 = Arrays.toString(ArrayResult.get(i));
                txtF9 = txtF9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtF9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(parts0);
                celdaF9.setCellValue(textoE9);
                filaF9.setHeight((short) 300);
            }

            HSSFRow filaF5 = hoja10.createRow(conEnc);//filaF
            HSSFCell celdaF5 = filaF5.createCell((short) 4);//COLUMNA
            celdaF5.setCellStyle(estiloCelda1);
            celdaF5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtF5 = "OBSERVACIONES";
            HSSFRichTextString textoE5 = new HSSFRichTextString(txtF5);
            celdaF5.setCellValue(textoE5);
            filaF5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaF9 = hoja10.createRow(conDat + i);//filaF
                HSSFCell celdaF9 = filaF9.createCell((short) 4);//COLUMNA
                celdaF9.setCellStyle(estiloCeldabordes0);
                celdaF9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtF9 = "La Fecha en la que se dictó la resolución (Huelga) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoE9 = new HSSFRichTextString(txtF9);
                celdaF9.setCellValue(textoE9);
                filaF9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Huelga.Fecha_Estallam_HuelgaNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaG00 = hojaresumenval.createRow(5);//filaG
            HSSFCell celdaG00 = filaG00.createCell((short) 1);//COLUMNA    
            celdaG00.setCellStyle(PAmarillo);

            HSSFRow filaG1 = hoja10.createRow(conEnc);//filaG
            HSSFCell celdaG1 = filaG1.createCell((short) 0);//COLUMNA
            celdaG1.setCellStyle(estiloCelda1);
            celdaG1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoG1 = new HSSFRichTextString(txtG1);
            celdaG1.setCellValue(textoG1);
            filaG1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG6 = hoja10.createRow(conDat + i);//filaG
                HSSFCell celdaG6 = filaG6.createCell((short) 0);//COLUMNA
                celdaG6.setCellStyle(estiloCeldabordes0);
                celdaG6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG6 = Arrays.toString(ArrayResult.get(i));
                txtG6 = txtG6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG6 = new HSSFRichTextString(parts0);
                celdaG6.setCellValue(textoG6);
                filaG6.setHeight((short) 300);
            }

            HSSFRow filaG2 = hoja10.createRow(conEnc);//filaG
            HSSFCell celdaG2 = filaG2.createCell((short) 1);//COLUMNA
            celdaG2.setCellStyle(estiloCelda1);
            celdaG2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoG2 = new HSSFRichTextString(txtG2);
            celdaG2.setCellValue(textoG2);
            filaG2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG7 = hoja10.createRow(conDat + i);//filaG
                HSSFCell celdaG7 = filaG7.createCell((short) 1);//COLUMNA
                celdaG7.setCellStyle(estiloCeldabordes0);
                celdaG7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG7 = Arrays.toString(ArrayResult.get(i));
                txtG7 = txtG7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG7 = new HSSFRichTextString(parts0);
                celdaG7.setCellValue(textoG7);
                filaG7.setHeight((short) 300);
            }

            HSSFRow filaG3 = hoja10.createRow(conEnc);//filaG
            HSSFCell celdaG3 = filaG3.createCell((short) 2);//COLUMNA
            celdaG3.setCellStyle(estiloCelda1);
            celdaG3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoG3 = new HSSFRichTextString(txtG3);
            celdaG3.setCellValue(textoG3);
            filaG3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG8 = hoja10.createRow(conDat + i);//filaG
                HSSFCell celdaG8 = filaG8.createCell((short) 2);//COLUMNA
                celdaG8.setCellStyle(estiloCeldabordes0);
                celdaG8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG8 = Arrays.toString(ArrayResult.get(i));
                txtG8 = txtG8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG8 = new HSSFRichTextString(parts0);
                celdaG8.setCellValue(textoG8);
                filaG8.setHeight((short) 300);
            }

            HSSFRow filaG4 = hoja10.createRow(conEnc);//filaG
            HSSFCell celdaG4 = filaG4.createCell((short) 3);//COLUMNA
            celdaG4.setCellStyle(estiloCelda1);
            celdaG4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG4 = "FECHA ESTALLAMIENTO HUELGA";
            HSSFRichTextString textoG4 = new HSSFRichTextString(txtG4);
            celdaG4.setCellValue(textoG4);
            filaG4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG9 = hoja10.createRow(conDat + i);//filaG
                HSSFCell celdaG9 = filaG9.createCell((short) 3);//COLUMNA
                celdaG9.setCellStyle(estiloCeldabordes0);
                celdaG9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG9 = Arrays.toString(ArrayResult.get(i));
                txtG9 = txtG9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtG9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG9 = new HSSFRichTextString(parts0);
                celdaG9.setCellValue(textoG9);
                filaG9.setHeight((short) 300);
            }

            HSSFRow filaG5 = hoja10.createRow(conEnc);//filaG
            HSSFCell celdaG5 = filaG5.createCell((short) 4);//COLUMNA
            celdaG5.setCellStyle(estiloCelda1);
            celdaG5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtG5 = "OBSERVACIONES";
            HSSFRichTextString textoG5 = new HSSFRichTextString(txtG5);
            celdaG5.setCellValue(textoG5);
            filaG5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaG9 = hoja10.createRow(conDat + i);//filaG
                HSSFCell celdaG9 = filaG9.createCell((short) 4);//COLUMNA
                celdaG9.setCellStyle(estiloCeldabordes0);
                celdaG9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtG9 = "La Fecha de estallamiento de la huelga(FECHA_ESTALLAM_HUELGA) no debe ser menor o igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoG9 = new HSSFRichTextString(txtG9);
                celdaG9.setCellValue(textoG9);
                filaG9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Huelga.Huelga();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS_EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila3A = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3A = fila3A.createCell((short) 3);//COLUMNA
            celda3A.setCellStyle(estiloCelda1);
            celda3A.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3A = "FASE EXPEDIENTE";
            HSSFRichTextString texto3A = new HSSFRichTextString(txt3A);
            celda3A.setCellValue(texto3A);
            fila3A.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8A = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8A = fila8A.createCell((short) 3);//COLUMNA
                celda8A.setCellStyle(estiloCeldabordes0);
                celda8A.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8A = Arrays.toString(ArrayResult.get(i));
                txt8A = txt8A.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8A.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8A = new HSSFRichTextString(parts0);
                celda8A.setCellValue(texto8A);
                fila8A.setHeight((short) 300);
            }

            HSSFRow fila3B = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3B = fila3B.createCell((short) 4);//COLUMNA
            celda3B.setCellStyle(estiloCelda1);
            celda3B.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3B = "Hubo Emplazamiento";
            HSSFRichTextString texto3B = new HSSFRichTextString(txt3B);
            celda3B.setCellValue(texto3B);
            fila3B.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8B = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8B = fila8B.createCell((short) 4);//COLUMNA
                celda8B.setCellStyle(estiloCeldabordes0);
                celda8B.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8B = Arrays.toString(ArrayResult.get(i));
                txt8B = txt8B.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8B.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8B = new HSSFRichTextString(parts0);
                celda8B.setCellValue(texto8B);
                fila8B.setHeight((short) 300);
            }

            HSSFRow fila3C = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3C = fila3C.createCell((short) 5);//COLUMNA
            celda3C.setCellStyle(estiloCelda1);
            celda3C.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3C = "Hubo Prehuelga";
            HSSFRichTextString texto3C = new HSSFRichTextString(txt3C);
            celda3C.setCellValue(texto3C);
            fila3C.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8C = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8C = fila8C.createCell((short) 5);//COLUMNA
                celda8C.setCellStyle(estiloCeldabordes0);
                celda8C.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8C = Arrays.toString(ArrayResult.get(i));
                txt8C = txt8C.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8C.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8C = new HSSFRichTextString(parts0);
                celda8C.setCellValue(texto8C);
                fila8C.setHeight((short) 300);
            }

            HSSFRow fila3D = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3D = fila3D.createCell((short) 6);//COLUMNA
            celda3D.setCellStyle(estiloCelda1);
            celda3D.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3D = "Hubo Estallamiento";
            HSSFRichTextString texto3D = new HSSFRichTextString(txt3D);
            celda3D.setCellValue(texto3D);
            fila3D.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8D = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8D = fila8D.createCell((short) 6);//COLUMNA
                celda8D.setCellStyle(estiloCeldabordes0);
                celda8D.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8D = Arrays.toString(ArrayResult.get(i));
                txt8D = txt8D.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8D.split(",");
                parts0 = parts[6].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8D = new HSSFRichTextString(parts0);
                celda8D.setCellValue(texto8D);
                fila8D.setHeight((short) 300);
            }

            HSSFRow fila3E = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3E = fila3E.createCell((short) 7);//COLUMNA
            celda3E.setCellStyle(estiloCelda1);
            celda3E.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3E = "FECHA DE ESTALLAMIENTO A HUELGA";
            HSSFRichTextString texto3E = new HSSFRichTextString(txt3E);
            celda3E.setCellValue(texto3E);
            fila3E.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8E = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8E = fila8E.createCell((short) 7);//COLUMNA
                celda8E.setCellStyle(estiloCeldabordes0);
                celda8E.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8E = Arrays.toString(ArrayResult.get(i));
                txt8E = txt8E.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8E.split(",");
                parts0 = parts[7].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8E = new HSSFRichTextString(parts0);
                celda8E.setCellValue(texto8E);
                fila8E.setHeight((short) 300);
            }

            HSSFRow fila3F = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3F = fila3F.createCell((short) 8);//COLUMNA
            celda3F.setCellStyle(estiloCelda1);
            celda3F.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3F = "FECHA DE EMPLAZAMIENTO A HUELGA";
            HSSFRichTextString texto3F = new HSSFRichTextString(txt3F);
            celda3F.setCellValue(texto3F);
            fila3F.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8F = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8F = fila8F.createCell((short) 8);//COLUMNA
                celda8F.setCellStyle(estiloCeldabordes0);
                celda8F.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8F = Arrays.toString(ArrayResult.get(i));
                txt8F = txt8F.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8F.split(",");
                parts0 = parts[8].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8F = new HSSFRichTextString(parts0);
                celda8F.setCellValue(texto8F);
                fila8F.setHeight((short) 300);
            }

            HSSFRow fila3G = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3G = fila3G.createCell((short) 9);//COLUMNA
            celda3G.setCellStyle(estiloCelda1);
            celda3G.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3G = "FECHA DE RESOLUCION A HUELGA";
            HSSFRichTextString texto3G = new HSSFRichTextString(txt3G);
            celda3G.setCellValue(texto3G);
            fila3G.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8G = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8G = fila8G.createCell((short) 9);//COLUMNA
                celda8G.setCellStyle(estiloCeldabordes0);
                celda8G.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8G = Arrays.toString(ArrayResult.get(i));
                txt8G = txt8G.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8G.split(",");
                parts0 = parts[9].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8G = new HSSFRichTextString(parts0);
                celda8G.setCellValue(texto8G);
                fila8G.setHeight((short) 300);
            }

            HSSFRow fila3H = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3H = fila3H.createCell((short) 10);//COLUMNA
            celda3H.setCellStyle(estiloCelda1);
            celda3H.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3H = "FECHA DE LEVANTAMIENTO A HUELGA";
            HSSFRichTextString texto3H = new HSSFRichTextString(txt3H);
            celda3H.setCellValue(texto3H);
            fila3H.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8H = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8H = fila8H.createCell((short) 10);//COLUMNA
                celda8H.setCellStyle(estiloCeldabordes0);
                celda8H.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8H = Arrays.toString(ArrayResult.get(i));
                txt8H = txt8H.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8H.split(",");
                parts0 = parts[10].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8H = new HSSFRichTextString(parts0);
                celda8H.setCellValue(texto8H);
                fila8H.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 11);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 11);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE)=HUELGA, ¿Hubo estallamiento de la huelga? (ESTALLAMIENTO_HUELGA) debe ser 1 “SI”, ¿Hubo prehuelga? (PREHUELGA)  debe ser 1 “SI”,¿Hubo emplazamiento a huelga? EMPLAZAMIENTO_HUELGA debe ser 1 “SI” .Con sus fechas respectivas.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.EMPLAZAMIENTO_HUELGA();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS_EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila3A = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3A = fila3A.createCell((short) 3);//COLUMNA
            celda3A.setCellStyle(estiloCelda1);
            celda3A.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3A = "FASE EXPEDIENTE";
            HSSFRichTextString texto3A = new HSSFRichTextString(txt3A);
            celda3A.setCellValue(texto3A);
            fila3A.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8A = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8A = fila8A.createCell((short) 3);//COLUMNA
                celda8A.setCellStyle(estiloCeldabordes0);
                celda8A.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8A = Arrays.toString(ArrayResult.get(i));
                txt8A = txt8A.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8A.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8A = new HSSFRichTextString(parts0);
                celda8A.setCellValue(texto8A);
                fila8A.setHeight((short) 300);
            }

            HSSFRow fila3B = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3B = fila3B.createCell((short) 4);//COLUMNA
            celda3B.setCellStyle(estiloCelda1);
            celda3B.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3B = "Hubo Emplazamiento";
            HSSFRichTextString texto3B = new HSSFRichTextString(txt3B);
            celda3B.setCellValue(texto3B);
            fila3B.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8B = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8B = fila8B.createCell((short) 4);//COLUMNA
                celda8B.setCellStyle(estiloCeldabordes0);
                celda8B.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8B = Arrays.toString(ArrayResult.get(i));
                txt8B = txt8B.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8B.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8B = new HSSFRichTextString(parts0);
                celda8B.setCellValue(texto8B);
                fila8B.setHeight((short) 300);
            }

            HSSFRow fila3C = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3C = fila3C.createCell((short) 5);//COLUMNA
            celda3C.setCellStyle(estiloCelda1);
            celda3C.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3C = "Hubo Prehuelga";
            HSSFRichTextString texto3C = new HSSFRichTextString(txt3C);
            celda3C.setCellValue(texto3C);
            fila3C.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8C = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8C = fila8C.createCell((short) 5);//COLUMNA
                celda8C.setCellStyle(estiloCeldabordes0);
                celda8C.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8C = Arrays.toString(ArrayResult.get(i));
                txt8C = txt8C.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8C.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8C = new HSSFRichTextString(parts0);
                celda8C.setCellValue(texto8C);
                fila8C.setHeight((short) 300);
            }

            HSSFRow fila3D = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3D = fila3D.createCell((short) 6);//COLUMNA
            celda3D.setCellStyle(estiloCelda1);
            celda3D.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3D = "Hubo Estallamiento";
            HSSFRichTextString texto3D = new HSSFRichTextString(txt3D);
            celda3D.setCellValue(texto3D);
            fila3D.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8D = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8D = fila8D.createCell((short) 6);//COLUMNA
                celda8D.setCellStyle(estiloCeldabordes0);
                celda8D.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8D = Arrays.toString(ArrayResult.get(i));
                txt8D = txt8D.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8D.split(",");
                parts0 = parts[6].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8D = new HSSFRichTextString(parts0);
                celda8D.setCellValue(texto8D);
                fila8D.setHeight((short) 300);
            }

            HSSFRow fila3E = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3E = fila3E.createCell((short) 7);//COLUMNA
            celda3E.setCellStyle(estiloCelda1);
            celda3E.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3E = "FECHA_EMPLAZAMIENTO";
            HSSFRichTextString texto3E = new HSSFRichTextString(txt3E);
            celda3E.setCellValue(texto3E);
            fila3E.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8E = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8E = fila8E.createCell((short) 7);//COLUMNA
                celda8E.setCellStyle(estiloCeldabordes0);
                celda8E.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8E = Arrays.toString(ArrayResult.get(i));
                txt8E = txt8E.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8E.split(",");
                parts0 = parts[7].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8E = new HSSFRichTextString(parts0);
                celda8E.setCellValue(texto8E);
                fila8E.setHeight((short) 300);
            }

            HSSFRow fila3F = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3F = fila3F.createCell((short) 8);//COLUMNA
            celda3F.setCellStyle(estiloCelda1);
            celda3F.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3F = "FECHA RESOLUCION ";
            HSSFRichTextString texto3F = new HSSFRichTextString(txt3F);
            celda3F.setCellValue(texto3F);
            fila3F.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8F = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8F = fila8F.createCell((short) 8);//COLUMNA
                celda8F.setCellStyle(estiloCeldabordes0);
                celda8F.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8F = Arrays.toString(ArrayResult.get(i));
                txt8F = txt8F.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8F.split(",");
                parts0 = parts[8].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8F = new HSSFRichTextString(parts0);
                celda8F.setCellValue(texto8F);
                fila8F.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 9);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 9);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE)=EMPLAZAMIENTO A HUELGA, ¿Hubo estallamiento de la huelga? (ESTALLAMIENTO_HUELGA) debe ser 2 “NO”, ¿Hubo prehuelga? (PREHUELGA)  debe ser 2 “NO”,¿Hubo emplazamiento a huelga? EMPLAZAMIENTO_HUELGA debe ser 1 O 2 “SI“ O “NO“ .Con sus fechas respectivas.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Huelga.PREHUELGA();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS_EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila3A = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3A = fila3A.createCell((short) 3);//COLUMNA
            celda3A.setCellStyle(estiloCelda1);
            celda3A.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3A = "FASE EXPEDIENTE";
            HSSFRichTextString texto3A = new HSSFRichTextString(txt3A);
            celda3A.setCellValue(texto3A);
            fila3A.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8A = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8A = fila8A.createCell((short) 3);//COLUMNA
                celda8A.setCellStyle(estiloCeldabordes0);
                celda8A.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8A = Arrays.toString(ArrayResult.get(i));
                txt8A = txt8A.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8A.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8A = new HSSFRichTextString(parts0);
                celda8A.setCellValue(texto8A);
                fila8A.setHeight((short) 300);
            }

            HSSFRow fila3B = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3B = fila3B.createCell((short) 4);//COLUMNA
            celda3B.setCellStyle(estiloCelda1);
            celda3B.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3B = "Hubo Emplazamiento";
            HSSFRichTextString texto3B = new HSSFRichTextString(txt3B);
            celda3B.setCellValue(texto3B);
            fila3B.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8B = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8B = fila8B.createCell((short) 4);//COLUMNA
                celda8B.setCellStyle(estiloCeldabordes0);
                celda8B.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8B = Arrays.toString(ArrayResult.get(i));
                txt8B = txt8B.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8B.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8B = new HSSFRichTextString(parts0);
                celda8B.setCellValue(texto8B);
                fila8B.setHeight((short) 300);
            }

            HSSFRow fila3C = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3C = fila3C.createCell((short) 5);//COLUMNA
            celda3C.setCellStyle(estiloCelda1);
            celda3C.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3C = "Hubo Prehuelga";
            HSSFRichTextString texto3C = new HSSFRichTextString(txt3C);
            celda3C.setCellValue(texto3C);
            fila3C.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8C = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8C = fila8C.createCell((short) 5);//COLUMNA
                celda8C.setCellStyle(estiloCeldabordes0);
                celda8C.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8C = Arrays.toString(ArrayResult.get(i));
                txt8C = txt8C.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8C.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8C = new HSSFRichTextString(parts0);
                celda8C.setCellValue(texto8C);
                fila8C.setHeight((short) 300);
            }

            HSSFRow fila3D = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3D = fila3D.createCell((short) 6);//COLUMNA
            celda3D.setCellStyle(estiloCelda1);
            celda3D.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3D = "Hubo Estallamiento";
            HSSFRichTextString texto3D = new HSSFRichTextString(txt3D);
            celda3D.setCellValue(texto3D);
            fila3D.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8D = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8D = fila8D.createCell((short) 6);//COLUMNA
                celda8D.setCellStyle(estiloCeldabordes0);
                celda8D.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8D = Arrays.toString(ArrayResult.get(i));
                txt8D = txt8D.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8D.split(",");
                parts0 = parts[6].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8D = new HSSFRichTextString(parts0);
                celda8D.setCellValue(texto8D);
                fila8D.setHeight((short) 300);
            }

            HSSFRow fila3E = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3E = fila3E.createCell((short) 7);//COLUMNA
            celda3E.setCellStyle(estiloCelda1);
            celda3E.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3E = "FECHA_EMPLAZAMIENTO";
            HSSFRichTextString texto3E = new HSSFRichTextString(txt3E);
            celda3E.setCellValue(texto3E);
            fila3E.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8E = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8E = fila8E.createCell((short) 7);//COLUMNA
                celda8E.setCellStyle(estiloCeldabordes0);
                celda8E.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8E = Arrays.toString(ArrayResult.get(i));
                txt8E = txt8E.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8E.split(",");
                parts0 = parts[7].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8E = new HSSFRichTextString(parts0);
                celda8E.setCellValue(texto8E);
                fila8E.setHeight((short) 300);
            }

            HSSFRow fila3F = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3F = fila3F.createCell((short) 8);//COLUMNA
            celda3F.setCellStyle(estiloCelda1);
            celda3F.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3F = "FECHA RESOLUCION ";
            HSSFRichTextString texto3F = new HSSFRichTextString(txt3F);
            celda3F.setCellValue(texto3F);
            fila3F.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8F = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8F = fila8F.createCell((short) 8);//COLUMNA
                celda8F.setCellStyle(estiloCeldabordes0);
                celda8F.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8F = Arrays.toString(ArrayResult.get(i));
                txt8F = txt8F.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8F.split(",");
                parts0 = parts[8].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8F = new HSSFRichTextString(parts0);
                celda8F.setCellValue(texto8F);
                fila8F.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 9);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 9);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE)=PREHUELGA, ¿Hubo estallamiento de la huelga? (ESTALLAMIENTO_HUELGA) debe ser 2 “NO”, ¿Hubo prehuelga? (PREHUELGA)  debe ser 1 “SI”,¿Hubo emplazamiento a huelga? EMPLAZAMIENTO_HUELGA debe ser 1 “SI“.Con sus fechas respectivas.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = NNHuelga.SinMotivo_Conflicto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Fecha de apertura";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de seleccionar Si en al menos un Motivo de conflicto (campo Firma de contrato(FIRMA_CONTRATO) hasta Otro motivo del conflicto (especifique)(OTRO_CONFLICTO) ya que no puede haber ningun motivo de conflicto)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Tipo_Asunto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TIPO ASUNTO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Tipo de asunto no debe de ser =9 No_identificado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Emplaz_huelga();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "EMPLAZ HUELGA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo emplazamiento a huelga? =No o No identificado, no debe de capturarse Fecha del emplazamiento a huelga.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Preghuelga();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = " PREHUELGA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo prehuelga? (PREHUELGA)=No o No identificado, no debe de capturarse ¿Hubo audiencia de conciliación? (AUDIENCIA_CONCILIACION) ni Fecha de audiencia de conciliación. (FECHA_AUDIENCIA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Aud_conciliacion();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "AUDIENCIA CONCILIACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo audiencia de conciliación? =No o No identificado, no debe de capturarse Fecha de audiencia de conciliación.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Estallamiento_huelga();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(3);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);

            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);

            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ESTALLAMIENTO HUELGA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);

            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Cuando ¿Hubo estallamiento de la huelga? (ESTALLAMIENTO_HUELGA)=No o No identificado, no debe de capturarse Declaración de licitud de la huelga (DECLARA_LICITUD_HUELGA),Declaración de existencia de la huelga.(DECLARA_EXISTEN_HUELGA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);

                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Estatus_ExpedienteNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus del expediente no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Incompetencia no debe ser =No identificada";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Tipo_IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja10.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja10.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "No debe de capturar Tipo_ Incompetencia ya que Incompetencia=No";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.PivIncompetencia();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "INCOMPETENCIA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando incompetencia(INCOMPETENCIA)=Si no debe de capturar apartir de Fecha de presentacion";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Estatus_Expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "En proceso de resolución");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando el estatus del expediente= en proceso de resolucion a partir de Fase de solicitude del expediente (FASE_SOLI_EXPEDIENTE) no debe de capturarse.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Fecha_acto_procesal();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Solucionado");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE) es Solucionado no debe de capturarse Fecha del ultimo Acto Procesal(FECHA_ACTO_PROCESAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
          ArrayResult = NNHuelga.Fase_Sol_expNoExiste();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) no corresponde a Procedimiento (Huelga)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Fase_Sol_expNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) =No identificado, no debe capturar desde Forma de solución (FORMA_SOLUCION_EMPLAZ) hasta Porcentaje por salarios caídos (SALARIOS_CAIDOS). O en su caso agregar la fase del expediente si es que hay valor valido en la fecha de resolución.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Fase_Sol_exp_EMPH();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("5", "Emplazamiento a huelga").replace("6", "Prehuelga");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Fase de solicitud del expediente = Emplazamiento a huelga No se debe de capturar Rubro Solución (Huelga)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Fase_Sol_exp_Huelga();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("7", "Huelga");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Fase de solicitud del expediente = Huelga No se debe de capturar Rubro Solución (Emplazamiento/Prehuelga)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNHuelga.Fase_Sol_Desechamiento();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(5);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FASE DE EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("7", "Huelga");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila30 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda30 = fila30.createCell((short) 3);//COLUMNA
            celda30.setCellStyle(estiloCelda1);
            celda30.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt30 = "Comentarios";
            HSSFRichTextString texto30 = new HSSFRichTextString(txt30);
            celda30.setCellValue(texto30);
            fila30.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 3);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[5].trim().replace("7", "Huelga");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja10.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja10.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando el expediente No se admitio a tramite. La fase de solicitud debe ser emplazamiento a huelga o prehuelga";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
      progressBar.setValue(65);
    }

    public void Despliega_Part_Act_Huelga(HSSFWorkbook libro, HSSFSheet hoja11, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_act_huelga Part_huelgaNE = new EDQPart_act_huelga();
        EDPart_Act_huelga NNV3Part_Act_huelga = new EDPart_Act_huelga();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja11.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_ACT_HUELGA";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja11.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = NNV3Part_Act_huelga.ActorNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja11.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja11.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja11.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja11.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja11.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "ACTOR";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja11.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja11.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja11.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Actor no debe ser -1=No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Act_huelga.Actor_Otro();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ACTOR";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "CUANDO ACTOR = Otro  no debe capturar desde Nombre del sindicato hasta No_identificado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Act_huelga.Actor_Mayoria();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ACTOR";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja11.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja11.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "CUANDO ACTOR = Mayoria_de_Trabajadores  no debe capturar desde Nombre del sindicato hasta Especifique (otra organización obrera)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_huelgaNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja11.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Actor no se encuentra desagregado en PART_ACT_HUELGA";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja11.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_huelgaNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja11.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI, Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja11.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_huelgaNE.Dif_ActoresNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE ACTORES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE ACTOR";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja11.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja11.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de Actores en procedimiento Huelga es diferente a el desglose de Actores en Part_act_huelga";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        
        progressBar.setValue(65);
    }

    public void Despliega_Part_dem_Huelga(HSSFWorkbook libro, HSSFSheet hoja12, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_dem_huelga Part_huelgaNE = new EDQPart_dem_huelga();
        EDPart_Dem_huelga NNV3Part_Dem_huelga = new EDPart_Dem_huelga();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja12.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_DEM_HUELGA";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja12.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = NNV3Part_Dem_huelga.DemandadoNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja12.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja12.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja12.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja12.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja12.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Demandado";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja12.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja12.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja12.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Demandado no debe de ser -1=No identificado Ni NULL";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNV3Part_Dem_huelga.Persona_fisica();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);

            HSSFRow fila1 = hoja12.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja12.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja12.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja12.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja12.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TIPO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja12.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja12.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja12.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Tipo=Persona fisica no debe de capturar desde Razon social hasta longitud";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Part_huelgaNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja12.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Demandado no se encuentra desagregado en PART_DEM_HUELGA";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja12.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_huelgaNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja12.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI,Cantidad de demandados es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja12.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_huelgaNE.Dif_demandadosNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE DEMANDADOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE DEMANDADOS";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja12.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja12.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de demandados en procedimiento Huelga es diferente a el desglose de Demandados en Part_dem_huelga";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
     progressBar.setValue(70);
    }

    public void Despliega_Colect_EconomNE(HSSFWorkbook libro, HSSFSheet hoja13, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {

        EDQColec_Econom Economico = new EDQColec_Econom();
        EDColect_Econom Colect = new EDColect_Econom();
        EDQNuevosColectivoEconomico Q=new EDQNuevosColectivoEconomico();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja13.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO COLECTIVO ECONOMICO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja13.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        
        ArrayResult = Q.Colect_EconomEstatusDemanda(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Si en los campos ¿Hubo celebración de audiencia dentro del procedimiento colectivo de naturaleza económica? (PREG_AUDIENCIA_COL_NAT_ECO) se selecciona la opcion Sí, en el campo Estatus de la demanda (ID_ESTATUS_DEMANDA) debe contener la opción Admitida.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        ArrayResult = Q.Colect_EconomEstatusCE(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLUCION).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        
        ArrayResult = Economico.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Economico.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Economico.FECHA_PRES_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA PRESENTACION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion de la demanda (FECHA_PRES_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Economico.FECHA_ADMISION_DEMANDA_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ADMISION DEMANDA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de admision de la demanda (FECHA_ADMISION_DEMANDA) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Economico.FECHA_AUDIENCIA_ECONOM_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA AUDIENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de audiencia (FECHA_AUDIENCIA_ECONOM) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Economico.FECHA_ACTO_PROCESAL_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha del ultimo acto procesal (FECHA_ACTO_PROCESAL) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Economico.FECHA_RESOLUCION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA RESOLUCION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de resolucion (FECHA_RESOLUCION) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

      /*  if (PValidacion.NMunicipio.equals("Campeche")) {

            ArrayResult = Economico.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(8);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja13.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja13.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja13.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja13.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja13.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja13.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja13.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja13.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja13.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja13.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja13.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja13.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Economico.Año_DIF_Campeche();
        } else {
            ArrayResult = Economico.Año_Expe_ColecEconomNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(8);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja13.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja13.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja13.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja13.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja13.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja13.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja13.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja13.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja13.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja13.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja13.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja13.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/

        ArrayResult = Economico.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Economico.Fecha_Aud_Presentacion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION (T.5.1_colec_nat_eco)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Economico.Fecha_Aud_Apertura();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA (T.5.1_colec_nat_eco)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Apertura del Expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Economico.Fecha_Aud_Admision();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE CELEBRACION (T.1.0_audiencias)";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE ADMISION (T.5.1_colec_nat_eco)";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila44 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda44 = fila44.createCell((short) 4);//COLUMNA
            celda44.setCellStyle(estiloCelda1);
            celda44.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt44 = "ID_AUDIENCIA";
            HSSFRichTextString texto44 = new HSSFRichTextString(txt44);
            celda44.setCellValue(texto44);
            fila44.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[5].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 5);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 5);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Audiencia Celebrada no debe ser menor a la Fecha de Admision de la demanda(FECHA_ADMISION_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Economico.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Economico.Fecha_PresentacionAdmiNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE ADMISION";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Admision no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Economico.Fecha_Admision_DemandaNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(8);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA ADMISION DEMANDA";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha de admision de la demanda(FECHA_ADMISION_DEMANDA) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Economico.Fecha_acto_procesalNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(8);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA ACTO PROCESAL";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha del último acto procesal (FECHA_ACTO_PROCESAL) no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Economico.Fecha_resolucionNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(8);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA RESOLUCION";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja13.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja13.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha en la que se dictó la resolución no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        
        
        ArrayResult = Economico.SinMotivo_Conflicto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Fecha de apertura";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de seleccionar Si en al menos un Motivo de conflicto (campo Modificación de condiciones de trabajo (MODIF_CONDICIONES) hasta Otro motivo del conflicto colectivo de naturaleza económica (especifique)(OTRO_MOTIVO_ECONOM) ya que no puede haber ningun motivo de conflicto)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Tipo_Asunto();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "TIPO ASUNTO";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Tipo de asunto no debe de ser =9 No_identificado o Null.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Suspencion_Temporal();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "Suspencion temporal";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "cuando Suspensión temporal de las relaciones colectivas de trabajo=No no debe capturarse a partir de Exceso de producción con relación a sus condiciones económica hasta Falta de fondos y la imposibilidad de obtenerlos para la prosecución normal de los trabajos.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Estatus_demandaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus de la demanda no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Estatus_expedienteNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus del expediente no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Incompetencia no debe ser =No identificada";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Tipo_IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim().replace("9", "No identificada");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "No debe de capturar Tipo_ Incompetencia ya que Incompetencia=No";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.PivIncompetencia();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "INCOMPETENCIA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando incompetencia(INCOMPETENCIA)=Si no debe de capturar apartir de Fecha de presentacion de la demanda(FECHA_PRES_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Estatus_Demanda_Desechada();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS DE LA DEMANDA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "Desechada").replace("3", "Archivo").replace("4", "No se dio trámite al escrito de demanda");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus de la demanda =DESECHADA,ARCHIVO, NO SE DIO TRAMITE A LA DEMANDA no debe de capturarse a partir de fecha de la admision de la demanda";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Estatus_Expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "En proceso de resolución");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando el estatus del expediente= en proceso de resolucion a partir de Fase de solicitude del expediente (FASE_SOLI_EXPEDIENTE) no debe de capturarse.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
         ArrayResult = Colect.Fase_Sol_expNoExiste();
        if (ArrayResult.size() > 0) {
            System.out.println(ArrayResult.toString());
            HSSFRow filaC00 = hojaresumenval.createRow(2);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);
            System.out.println("1");
            HSSFRow filaC1 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
                System.out.println("1");
            }
            System.out.println("2");
            HSSFRow filaC2 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
                System.out.println("2");
            }

            System.out.println("3");
            HSSFRow filaC3 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FASE SOLICITUD EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
                System.out.println("3");
            }
            System.out.println("4");
            HSSFRow filaC5 = hoja13.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja13.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Fase de solicitud del expediente (FASE_SOLI_EXPEDIENTE) no corresponde a Procedimiento (Colect_economico).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                System.out.println("4");
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Fecha_acto_procesal();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim().replace("1", "Solucionado");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE) es Solucionado no debe de capturarse Fecha del ultimo Acto Procesal(FECHA_ACTO_PROCESAL)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Colect.Forma_Solucion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FORMA SOLUCION";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "Convenio conciliatorio").replace("3", "Desistimiento").replace("4", "Caducidad").replace("5", "Otra forma de solución (especifique)");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja13.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja13.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando forma de solucion =Convenio conciliatorio,Desistimiento,Caducidad,Otra forma de solución  (especifique) no debe de capturar a partir de Tipo de sentencia";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
         progressBar.setValue(75);
    }

    public void Despliega_Part_Act_Nat_econo(HSSFWorkbook libro, HSSFSheet hoja14, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_act_nat_eco Part_nat_ecoNE = new EDQPart_act_nat_eco();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja14.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = "PROCEDIMIENTO PART ACT NAT ECONOMICO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja14.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = Part_nat_ecoNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja14.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Actor no se encuentra desagregado en PART_ACT_NAT_ECONOMICO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja14.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_nat_ecoNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja14.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI, Cantidad de Actores es No aplica por ende no se debe de desglosar actor.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja14.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_nat_ecoNE.Dif_ActoresNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE ACTORES";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE ACTOR";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja14.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja14.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de Actores en procedimiento Colect_nat_eco es diferente a el desglose de Actores en Part_Act_Colect_nat_eco";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
     progressBar.setValue(80);
    }

    public void Despliega_Part_Dem_Nat_econo(HSSFWorkbook libro, HSSFSheet hoja15, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle estiloCelda2,JProgressBar progressBar) {
        EDQPart_dem_nat_eco Part_nat_ecoNE = new EDQPart_dem_nat_eco();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja15.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PART_DEM_NAT_ECONOMICO";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja15.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        ArrayResult = Part_nat_ecoNE.ExpeNDesglose();
        if (ArrayResult.size() > 0) {
            HSSFRow filaBC1 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja15.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Demandado no se encuentra desagregado en PART_DEM_NAT_ECONOMICO";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja15.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
        }

        ArrayResult = Part_nat_ecoNE.IncompetenciaNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                System.out.println(txtBC7);
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                System.out.println(parts0);
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "INCOMPETENCIA";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja15.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCelda2);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "Cuando el expediente es incompetencia = SI,Cantidad de demandados es No aplica por ende no se debe de desglosar demandado.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja15.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Part_nat_ecoNE.Dif_demandadosNE();
        if (ArrayResult.size() > 0) {

            HSSFRow filaBC1 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "CANTIDAD DE DEMANDADOS";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBBC3 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBBC3 = filaBBC3.createCell((short) 3);//COLUMNA
            celdaBBC3.setCellStyle(estiloCelda1);
            celdaBBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBBC3 = "DESGLOSE DEMANDADOS";
            HSSFRichTextString textoAB3 = new HSSFRichTextString(txtBBC3);
            celdaBBC3.setCellValue(textoAB3);
            filaBBC3.setHeight((short) 600);

            //INCOMPETENCIA=SI
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 3);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja15.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

            //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja15.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCelda2);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "La cantidad de demandados en procedimiento colect nat econom es diferente a el desglose de Demandados en Part_Dem_colect_nat_econom";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }

            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }
        progressBar.setValue(85);
    }

    public void Despliega_ParaprocesalNE(HSSFWorkbook libro, HSSFSheet hoja16, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {

        EDQParaprocesal Paraprocesal = new EDQParaprocesal();
        EDParaprocesal NNParaprocesal = new EDParaprocesal();
        EDQNuevosParaprocesal Q=new EDQNuevosParaprocesal(); 
         
        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja16.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO PARAPROCESAL ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja16.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        ArrayResult = Q.ParaprocesalEstatus(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLUCION).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
 
        ArrayResult = Paraprocesal.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Paraprocesal.FECHA_PRESENTA_SOLI_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA PRESENTACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion de la solicitud (FECHA_PRESENTA_SOLI) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Paraprocesal.FECHA_ADMISION_SOLI_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA ADMISION DE LA SOLICITUD";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de admision de la solicitud (FECHA_PRESENTA_SOLI) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Paraprocesal.FECHA_CONCLUSION_EXPE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA CONCLUSION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de conclusion del expediente (FECHA_CONCLUSION_EXPE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {

            ArrayResult = Paraprocesal.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(6);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja16.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja16.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja16.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja16.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja16.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja16.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja16.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja16.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja16.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja16.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja16.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja16.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Paraprocesal.Año_DIF_Campeche();
        } else {
            ArrayResult = Paraprocesal.Año_Expe_ParaprocesalNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(6);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja16.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja16.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja16.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja16.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja16.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja16.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja16.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja16.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja16.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja16.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja16.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja16.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/

        ArrayResult = Paraprocesal.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Paraprocesal.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Paraprocesal.Fecha_PresentacionAdmiNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE ADMISION";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de Admision no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
         
        }

        ArrayResult = Paraprocesal.Fecha_Admision_SoliNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(6);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja16.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja16.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja16.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja16.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja16.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja16.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja16.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA ADMISION DE LA SOLICITUD";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja16.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja16.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja16.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha de admisión de la solicitud o promoción no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = Paraprocesal.Fecha_Conclusion_ExpeNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaC00 = hojaresumenval.createRow(6);//filaC
            HSSFCell celdaC00 = filaC00.createCell((short) 1);//COLUMNA    
            celdaC00.setCellStyle(PAmarillo);

            HSSFRow filaC1 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoC1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoC1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoC6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoC2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoC2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoC7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoC3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoC3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoC8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC4 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC4 = filaC4.createCell((short) 3);//COLUMNA
            celdaC4.setCellStyle(estiloCelda1);
            celdaC4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC4 = "FECHA CONCLUSION";
            HSSFRichTextString textoC4 = new HSSFRichTextString(txtC4);
            celdaC4.setCellValue(textoC4);
            filaC4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 3);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC9 = Arrays.toString(ArrayResult.get(i));
                txtC9 = txtC9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(parts0);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 4);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoC5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoC5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 4);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                String txtC9 = "";
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
                parts1 = parts[4].trim();
                if (parts0.equals(parts1)) {
                    txtC9 = "La Fecha en la que se concluyó el expediente es igual a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE). Favor de Justificar fecha en columna comentarios o cambiar fecha";
                } else {
                    txtC9 = "La Fecha en la que se concluyó el expediente no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                }
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoC9 = new HSSFRichTextString(txtC9);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
              
            }

            HSSFRow filaCc5 = hoja16.createRow(conEnc);//filaC
            HSSFCell celdaCc5 = filaC5.createCell((short) 5);//COLUMNA
            celdaCc5.setCellStyle(estiloCelda1);
            celdaCc5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtCc5 = "COMENTARIOS";
            HSSFRichTextString textoCc5 = new HSSFRichTextString(txtCc5);
            celdaCc5.setCellValue(textoCc5);
            filaCc5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC9 = hoja16.createRow(conDat + i);//filaC
                HSSFCell celdaC9 = filaC9.createCell((short) 5);//COLUMNA
                celdaC9.setCellStyle(estiloCeldabordes0);
                celdaC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                String txtC9 = "";
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
                parts1 = parts[4].trim();
                parts2 = parts[5].trim();
                txtC9 = parts2;
                HSSFRichTextString textoC9 = new HSSFRichTextString(txtC9);
                celdaC9.setCellValue(textoC9);
                filaC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = NNParaprocesal.Estatus_expedienteNi();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus del expediente no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNParaprocesal.IncompetenciaNI();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Incompetencia no debe ser =No identificada";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNParaprocesal.PivIncompetencia();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "INCOMPETENCIA";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando incompetencia(INCOMPETENCIA)=Si no debe de capturar apartir de Fecha de presentacion de la demanda(FECHA_PRES_DEMANDA)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNParaprocesal.Estatus_Expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(6);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTAUS DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("1", "Sí");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja16.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja16.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE)=EN PROCESO DE RESOLUCION no debe de capturar  Fecha de conclusion(FECHA_CONCLUSION_EXPE)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        progressBar.setValue(90);
    }

    public void Despliega_Ejecucion(HSSFWorkbook libro, HSSFSheet hoja17, HSSFSheet hojaresumenval, HSSFCellStyle estiloCelda0, HSSFCellStyle estiloCelda1, HSSFCellStyle estiloCeldabordes0, HSSFCellStyle PAmarillo,JProgressBar progressBar) {
        EDQEjecucion Ejecucion = new EDQEjecucion();
        EDEjecucion NNEjecucion = new EDEjecucion();
        EDQNuevosEjecucion Q=new EDQNuevosEjecucion();

        int conEnc = 1, conDat = 2, coni = 1;
        //fecha de admision de la demanda
        HSSFRow row0 = hoja17.createRow((short) 0);//Fila
        HSSFCell celda0 = row0.createCell((short) 0);//Coumna
        celda0.setCellStyle(estiloCelda0);
        celda0.setCellType(HSSFCell.CELL_TYPE_STRING);
        String titulo0 = " PROCEDIMIENTO EJECUCION ";
        HSSFRichTextString texto0 = new HSSFRichTextString((titulo0));
        hoja17.addMergedRegion(new Region(0, (short) 0, 0, (short) 4));
        celda0.setCellValue(texto0);
        row0.setHeight((short) 600);

        
        ArrayResult = Q.EjecucionEstatus(PValidacion.clave_organo, PValidacion.clave_entidad, PValidacion.periodo);
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "Comentarios";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "Favor de capturar Fecha en la que se dictó la resolución (FECHA_RESOLUCION).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        
        ArrayResult = Ejecucion.FECHA_APERTURA_EXPEDIENTE_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA APERTURA EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de apertura del expediente (FECHA_APERTURA_EXPEDIENTE) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ejecucion.FECHA_PRESENTACION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA PRESENTACION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de presentacion (FECHA_PRESENTACION) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = Ejecucion.FECHA_CONCLUSION_FUT();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
        //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    

            HSSFRow filaC1 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC1 = filaC1.createCell((short) 0);//COLUMNA
            celdaC1.setCellStyle(estiloCelda1);
            celdaC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtC1);
            celdaC1.setCellValue(textoA1);
            filaC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC6 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC6 = filaC6.createCell((short) 0);//COLUMNA
                celdaC6.setCellStyle(estiloCeldabordes0);
                celdaC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC6 = Arrays.toString(ArrayResult.get(i));
                txtC6 = txtC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaC6.setCellValue(textoA6);
                filaC6.setHeight((short) 300);
            }

            HSSFRow filaC2 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC2 = filaC2.createCell((short) 1);//COLUMNA
            celdaC2.setCellStyle(estiloCelda1);
            celdaC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtC2);
            celdaC2.setCellValue(textoA2);
            filaC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC7 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC7 = filaC7.createCell((short) 1);//COLUMNA
                celdaC7.setCellStyle(estiloCeldabordes0);
                celdaC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC7 = Arrays.toString(ArrayResult.get(i));
                txtC7 = txtC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaC7.setCellValue(textoA7);
                filaC7.setHeight((short) 300);
            }

            HSSFRow filaC3 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC3 = filaC3.createCell((short) 2);//COLUMNA
            celdaC3.setCellStyle(estiloCelda1);
            celdaC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC3 = "FECHA CONCLUSION";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtC3);
            celdaC3.setCellValue(textoA3);
            filaC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaC8 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaC8 = filaC8.createCell((short) 2);//COLUMNA
                celdaC8.setCellStyle(estiloCeldabordes0);
                celdaC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtC8 = Arrays.toString(ArrayResult.get(i));
                txtC8 = txtC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtC8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaC8.setCellValue(textoA8);
                filaC8.setHeight((short) 300);
            }

            HSSFRow filaC5 = hoja17.createRow(conEnc);//filaC
            HSSFCell celdaC5 = filaC5.createCell((short) 3);//COLUMNA
            celdaC5.setCellStyle(estiloCelda1);
            celdaC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtC5 = "OBSERVACIONES";
            HSSFRichTextString textoD5 = new HSSFRichTextString(txtC5);
            celdaC5.setCellValue(textoD5);
            filaC5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaE9 = hoja17.createRow(conDat + i);//filaC
                HSSFCell celdaE9 = filaE9.createCell((short) 3);//COLUMNA
                celdaE9.setCellStyle(estiloCeldabordes0);
                celdaE9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtE9 = "La Fecha de conclusion (FECHA_CONCLUSION) no debe ser mayor a la Fecha actual.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoD9 = new HSSFRichTextString(txtE9);
                celdaE9.setCellValue(textoD9);
                filaE9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
       /* if (PValidacion.NMunicipio.equals("Campeche")) {

            ArrayResult = Ejecucion.Año_JudicialCampeche();
            if (ArrayResult.size() > 0) {
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
                HSSFRow filaBC00 = hojaresumenval.createRow(8);//filaBC
                HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
                celdaBC00.setCellStyle(PAmarillo);

                HSSFRow filaBC1 = hoja17.createRow(conEnc);//filaBC
                HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
                celdaBC1.setCellStyle(estiloCelda1);
                celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC1 = "CLAVE DEL ORGANO";
                HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
                celdaBC1.setCellValue(textoA1);
                filaBC1.setHeight((short) 600);

                //clave_organo
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC6 = hoja17.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                    celdaBC6.setCellStyle(estiloCeldabordes0);
                    celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC6 = Arrays.toString(ArrayResult.get(i));
                    txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC6.split(",");
                    parts0 = parts[0].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                    celdaBC6.setCellValue(textoA6);
                    filaBC6.setHeight((short) 300);
                }

                HSSFRow filaBC2 = hoja17.createRow(conEnc);//filaBC
                HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
                celdaBC2.setCellStyle(estiloCelda1);
                celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC2 = "CLAVE DEL EXPEDIENTE";
                HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
                celdaBC2.setCellValue(textoA2);
                filaBC2.setHeight((short) 600);

                //clave del expediente
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC7 = hoja17.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                    celdaBC7.setCellStyle(estiloCeldabordes0);
                    celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC7 = Arrays.toString(ArrayResult.get(i));
                    txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC7.split(",");
                    parts0 = parts[1].trim();
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                    celdaBC7.setCellValue(textoA7);
                    filaBC7.setHeight((short) 300);
                }

                HSSFRow filaBC3 = hoja17.createRow(conEnc);//filaBC
                HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
                celdaBC3.setCellStyle(estiloCelda1);
                celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
                HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
                celdaBC3.setCellValue(textoA3);
                filaBC3.setHeight((short) 600);

                //FECHA DE APERTURA DEL EXPEDIENTE
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC8 = hoja17.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                    celdaBC8.setCellStyle(estiloCeldabordes0);
                    celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC8 = Arrays.toString(ArrayResult.get(i));
                    txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    parts = txtBC8.split(",");
                    parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                    celdaBC8.setCellValue(textoA8);
                    filaBC8.setHeight((short) 300);
                }

                HSSFRow filaBC5 = hoja17.createRow(conEnc);//filaBC
                HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC5 = hoja17.createRow(conEnc);//filaBC
                HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
                celdaBC5.setCellStyle(estiloCelda1);
                celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC5.setCellStyle(estiloCelda1);
                celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC5 = "OBSERVACIONES";
                HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
                hoja17.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
                celdaBC5.setCellValue(textoA5);
                filaBC5.setHeight((short) 600);

        //OBCservaciones
                for (int i = 0; i < ArrayResult.size(); i++) {
                    HSSFRow filaBC9 = hoja17.createRow(conDat + i);//filaBC
                    HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                    HSSFRow filaBBC9 = hoja17.createRow(conDat + i);//filaBC
                    HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                    celdaBC9.setCellStyle(estiloCeldabordes0);
                    celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    celdaBBC9.setCellStyle(estiloCeldabordes0);
                    celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                    String txtBC9 = "La Fecha de Apertura no comprende al periodo del año Judicial";
                    //System.out.println(Arrays.toString(ArrayResult.get(i)));
                    HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                    hoja17.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                    celdaBC9.setCellValue(textoA9);
                    filaBC9.setHeight((short) 300);
                    coni++;
                }
                conDat = conDat + coni;
                conEnc = conEnc + coni;
                coni = 1;
                //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
            }
        }

       /* if (PValidacion.NMunicipio.equals("Campeche")) {
            ArrayResult = Ejecucion.Año_DIF_Campeche();
        } else {
            ArrayResult = Ejecucion.Año_Expe_EjecucionNE();
        }
        if (ArrayResult.size() > 0) {
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaBC00 = hojaresumenval.createRow(8);//filaBC
            HSSFCell celdaBC00 = filaBC00.createCell((short) 1);//COLUMNA    
            celdaBC00.setCellStyle(PAmarillo);

            HSSFRow filaBC1 = hoja17.createRow(conEnc);//filaBC
            HSSFCell celdaBC1 = filaBC1.createCell((short) 0);//COLUMNA
            celdaBC1.setCellStyle(estiloCelda1);
            celdaBC1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoA1 = new HSSFRichTextString(txtBC1);
            celdaBC1.setCellValue(textoA1);
            filaBC1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC6 = hoja17.createRow(conDat + i);//filaBC
                HSSFCell celdaBC6 = filaBC6.createCell((short) 0);//COLUMNA
                celdaBC6.setCellStyle(estiloCeldabordes0);
                celdaBC6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC6 = Arrays.toString(ArrayResult.get(i));
                txtBC6 = txtBC6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA6 = new HSSFRichTextString(parts0);
                celdaBC6.setCellValue(textoA6);
                filaBC6.setHeight((short) 300);
            }

            HSSFRow filaBC2 = hoja17.createRow(conEnc);//filaBC
            HSSFCell celdaBC2 = filaBC2.createCell((short) 1);//COLUMNA
            celdaBC2.setCellStyle(estiloCelda1);
            celdaBC2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoA2 = new HSSFRichTextString(txtBC2);
            celdaBC2.setCellValue(textoA2);
            filaBC2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC7 = hoja17.createRow(conDat + i);//filaBC
                HSSFCell celdaBC7 = filaBC7.createCell((short) 1);//COLUMNA
                celdaBC7.setCellStyle(estiloCeldabordes0);
                celdaBC7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC7 = Arrays.toString(ArrayResult.get(i));
                txtBC7 = txtBC7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA7 = new HSSFRichTextString(parts0);
                celdaBC7.setCellValue(textoA7);
                filaBC7.setHeight((short) 300);
            }

            HSSFRow filaBC3 = hoja17.createRow(conEnc);//filaBC
            HSSFCell celdaBC3 = filaBC3.createCell((short) 2);//COLUMNA
            celdaBC3.setCellStyle(estiloCelda1);
            celdaBC3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoA3 = new HSSFRichTextString(txtBC3);
            celdaBC3.setCellValue(textoA3);
            filaBC3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC8 = hoja17.createRow(conDat + i);//filaBC
                HSSFCell celdaBC8 = filaBC8.createCell((short) 2);//COLUMNA
                celdaBC8.setCellStyle(estiloCeldabordes0);
                celdaBC8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC8 = Arrays.toString(ArrayResult.get(i));
                txtBC8 = txtBC8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtBC8.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoA8 = new HSSFRichTextString(parts0);
                celdaBC8.setCellValue(textoA8);
                filaBC8.setHeight((short) 300);
            }

            HSSFRow filaBC5 = hoja17.createRow(conEnc);//filaBC
            HSSFCell celdaBC5 = filaBC5.createCell((short) 3);//COLUMNA
            HSSFRow filaBBC5 = hoja17.createRow(conEnc);//filaBC
            HSSFCell celdaBBC5 = filaBBC5.createCell((short) 4);//COLUMNA
            celdaBC5.setCellStyle(estiloCelda1);
            celdaBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            celdaBBC5.setCellStyle(estiloCelda1);
            celdaBBC5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtBC5 = "OBSERVACIONES";
            HSSFRichTextString textoA5 = new HSSFRichTextString(txtBC5);
            hoja17.addMergedRegion(new Region(conEnc, (short) 3, conEnc, (short) 4));
            celdaBC5.setCellValue(textoA5);
            filaBC5.setHeight((short) 600);

        //OBCservaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaBC9 = hoja17.createRow(conDat + i);//filaBC
                HSSFCell celdaBC9 = filaBC9.createCell((short) 3);//COLUMNA
                HSSFRow filaBBC9 = hoja17.createRow(conDat + i);//filaBC
                HSSFCell celdaBBC9 = filaBBC9.createCell((short) 4);//COLUMNA
                celdaBC9.setCellStyle(estiloCeldabordes0);
                celdaBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                celdaBBC9.setCellStyle(estiloCeldabordes0);
                celdaBBC9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtBC9 = "";
                if (PValidacion.NMunicipio.equals("Campeche")) {
                    txtBC9 = "El año de la clave del expediente no coincide";
                } else {
                    txtBC9 = "Favor de verificar el año de la clave del expediente con respecto al año de ingreso del mismo.";
                }
                HSSFRichTextString textoA9 = new HSSFRichTextString(txtBC9);
                hoja17.addMergedRegion(new Region(conDat + i, (short) 3, conDat + i, (short) 4));
                celdaBC9.setCellValue(textoA9);
                filaBC9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador EncaBCezado: "+conEnc + "Contador Datos: "+ conDat );
        }*/

        ArrayResult = Ejecucion.Duplicidad_expediente();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(7);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 2);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE APERTURA";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 2);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[2].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Clave del expediente duplicada Favor de verificar Expediente.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ejecucion.Fecha_PresentacionNE();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(7);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila4 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda4 = fila4.createCell((short) 3);//COLUMNA
            celda4.setCellStyle(estiloCelda1);
            celda4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt4 = "FECHA DE PRESENTACION";
            HSSFRichTextString texto4 = new HSSFRichTextString(txt4);
            celda4.setCellValue(texto4);
            fila4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = Arrays.toString(ArrayResult.get(i));
                txt9 = txt9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(parts0);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 4);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 4);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "La Fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE) no debe ser menor a la fecha de presentacion de la demanda(FECHA_PRES_DEMANDA).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            System.out.println("contador i: " + coni);
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
            System.out.println("contador i: " + conEnc + " " + conDat + " " + ArrayResult.size());
        }

        ArrayResult = Ejecucion.Fecha_ConclusionNE();
        if (ArrayResult.size() > 0) {
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );    
            HSSFRow filaB00 = hojaresumenval.createRow(8);//filaB
            HSSFCell celdaB00 = filaB00.createCell((short) 1);//COLUMNA    
            celdaB00.setCellStyle(PAmarillo);

            HSSFRow filaB1 = hoja17.createRow(conEnc);//filaB
            HSSFCell celdaB1 = filaB1.createCell((short) 0);//COLUMNA
            celdaB1.setCellStyle(estiloCelda1);
            celdaB1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB1 = "CLAVE DEL ORGANO";
            HSSFRichTextString textoB1 = new HSSFRichTextString(txtB1);
            celdaB1.setCellValue(textoB1);
            filaB1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB6 = hoja17.createRow(conDat + i);//filaB
                HSSFCell celdaB6 = filaB6.createCell((short) 0);//COLUMNA
                celdaB6.setCellStyle(estiloCeldabordes0);
                celdaB6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB6 = Arrays.toString(ArrayResult.get(i));
                txtB6 = txtB6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB6.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB6 = new HSSFRichTextString(parts0);
                celdaB6.setCellValue(textoB6);
                filaB6.setHeight((short) 300);
            }

            HSSFRow filaB2 = hoja17.createRow(conEnc);//filaB
            HSSFCell celdaB2 = filaB2.createCell((short) 1);//COLUMNA
            celdaB2.setCellStyle(estiloCelda1);
            celdaB2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString textoB2 = new HSSFRichTextString(txtB2);
            celdaB2.setCellValue(textoB2);
            filaB2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB7 = hoja17.createRow(conDat + i);//filaB
                HSSFCell celdaB7 = filaB7.createCell((short) 1);//COLUMNA
                celdaB7.setCellStyle(estiloCeldabordes0);
                celdaB7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB7 = Arrays.toString(ArrayResult.get(i));
                txtB7 = txtB7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB7.split(",");
                parts0 = parts[2].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB7 = new HSSFRichTextString(parts0);
                celdaB7.setCellValue(textoB7);
                filaB7.setHeight((short) 300);
            }

            HSSFRow filaB3 = hoja17.createRow(conEnc);//filaB
            HSSFCell celdaB3 = filaB3.createCell((short) 2);//COLUMNA
            celdaB3.setCellStyle(estiloCelda1);
            celdaB3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB3 = "FECHA DE APERTURA DEL EXPEDIENTE";
            HSSFRichTextString textoB3 = new HSSFRichTextString(txtB3);
            celdaB3.setCellValue(textoB3);
            filaB3.setHeight((short) 600);

            //FECHA DE APERTURA DEL EXPEDIENTE
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB8 = hoja17.createRow(conDat + i);//filaB
                HSSFCell celdaB8 = filaB8.createCell((short) 2);//COLUMNA
                celdaB8.setCellStyle(estiloCeldabordes0);
                celdaB8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB8 = Arrays.toString(ArrayResult.get(i));
                txtB8 = txtB8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB8 = new HSSFRichTextString(parts0);
                celdaB8.setCellValue(textoB8);
                filaB8.setHeight((short) 300);
            }

            HSSFRow filaB4 = hoja17.createRow(conEnc);//filaB
            HSSFCell celdaB4 = filaB4.createCell((short) 3);//COLUMNA
            celdaB4.setCellStyle(estiloCelda1);
            celdaB4.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB4 = "FECHA CONCLUCION";
            HSSFRichTextString textoB4 = new HSSFRichTextString(txtB4);
            celdaB4.setCellValue(textoB4);
            filaB4.setHeight((short) 600);

            //FECHA DE admision de la demanda
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja17.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 3);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = Arrays.toString(ArrayResult.get(i));
                txtB9 = txtB9.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txtB9.split(",");
                parts0 = parts[4].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(parts0);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
            }

            HSSFRow filaB5 = hoja17.createRow(conEnc);//filaB
            HSSFCell celdaB5 = filaB5.createCell((short) 4);//COLUMNA
            celdaB5.setCellStyle(estiloCelda1);
            celdaB5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txtB5 = "OBSERVACIONES";
            HSSFRichTextString textoB5 = new HSSFRichTextString(txtB5);
            celdaB5.setCellValue(textoB5);
            filaB5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow filaB9 = hoja17.createRow(conDat + i);//filaB
                HSSFCell celdaB9 = filaB9.createCell((short) 4);//COLUMNA
                celdaB9.setCellStyle(estiloCeldabordes0);
                celdaB9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txtB9 = "La Fecha en la que se concluyó el procedimiento de ejecución no debe ser menor a la fecha de apertura del expediente(FECHA_APERTURA_EXPEDIENTE).";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString textoB9 = new HSSFRichTextString(txtB9);
                celdaB9.setCellValue(textoB9);
                filaB9.setHeight((short) 300);
                coni++;
            }
            conDat = conDat + coni;
            conEnc = conEnc + coni;
            coni = 1;
            //System.out.println("contador Encabezado: "+conEnc + "Contador Datos: "+ conDat );
        }

        ArrayResult = NNEjecucion.Estatus_expedienteNi();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "COMENTARIOS";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[3].trim();
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Estatus del expediente no debe de ser -1=No_identificado Ni NULL.";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NNEjecucion.FaseConclucion();
        if (ArrayResult.size() > 0) {
            System.out.println("contador Encabezado: " + conEnc + "Contador Datos: " + conDat);
            HSSFRow fila00 = hojaresumenval.createRow(8);//FILA
            HSSFCell celda00 = fila00.createCell((short) 1);//COLUMNA    
            celda00.setCellStyle(PAmarillo);

            HSSFRow fila1 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda1 = fila1.createCell((short) 0);//COLUMNA
            celda1.setCellStyle(estiloCelda1);
            celda1.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt1 = "CLAVE DEL ORGANO";
            HSSFRichTextString texto1 = new HSSFRichTextString(txt1);
            celda1.setCellValue(texto1);
            fila1.setHeight((short) 600);

            //clave_organo
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila6 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda6 = fila6.createCell((short) 0);//COLUMNA
                celda6.setCellStyle(estiloCeldabordes0);
                celda6.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt6 = Arrays.toString(ArrayResult.get(i));
                txt6 = txt6.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt6.split(",");
                parts0 = parts[0].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto6 = new HSSFRichTextString(parts0);
                celda6.setCellValue(texto6);
                fila6.setHeight((short) 300);
            }

            HSSFRow fila2 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda2 = fila2.createCell((short) 1);//COLUMNA
            celda2.setCellStyle(estiloCelda1);
            celda2.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt2 = "CLAVE DEL EXPEDIENTE";
            HSSFRichTextString texto2 = new HSSFRichTextString(txt2);
            celda2.setCellValue(texto2);
            fila2.setHeight((short) 600);

            //clave del expediente
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila7 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda7 = fila7.createCell((short) 1);//COLUMNA
                celda7.setCellStyle(estiloCeldabordes0);
                celda7.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt7 = Arrays.toString(ArrayResult.get(i));
                txt7 = txt7.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt7.split(",");
                parts0 = parts[1].trim();
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto7 = new HSSFRichTextString(parts0);
                celda7.setCellValue(texto7);
                fila7.setHeight((short) 300);
            }

            HSSFRow fila3 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda3 = fila3.createCell((short) 2);//COLUMNA
            celda3.setCellStyle(estiloCelda1);
            celda3.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt3 = "ESTATUS EXPEDIENTE";
            HSSFRichTextString texto3 = new HSSFRichTextString(txt3);
            celda3.setCellValue(texto3);
            fila3.setHeight((short) 600);

            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila8 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda8 = fila8.createCell((short) 2);//COLUMNA
                celda8.setCellStyle(estiloCeldabordes0);
                celda8.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt8 = Arrays.toString(ArrayResult.get(i));
                txt8 = txt8.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                parts = txt8.split(",");
                parts0 = parts[2].trim().replace("2", "En proceso de resolución");
       // partsfechas=dateformat.format(parts0);
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto8 = new HSSFRichTextString(parts0);
                celda8.setCellValue(texto8);
                fila8.setHeight((short) 300);
            }

            HSSFRow fila5 = hoja17.createRow(conEnc);//FILA
            HSSFCell celda5 = fila5.createCell((short) 3);//COLUMNA
            celda5.setCellStyle(estiloCelda1);
            celda5.setCellType(HSSFCell.CELL_TYPE_STRING);
            String txt5 = "OBSERVACIONES";
            HSSFRichTextString texto5 = new HSSFRichTextString(txt5);
            celda5.setCellValue(texto5);
            fila5.setHeight((short) 600);

            //Observaciones
            for (int i = 0; i < ArrayResult.size(); i++) {
                HSSFRow fila9 = hoja17.createRow(conDat + i);//FILA
                HSSFCell celda9 = fila9.createCell((short) 3);//COLUMNA
                celda9.setCellStyle(estiloCeldabordes0);
                celda9.setCellType(HSSFCell.CELL_TYPE_STRING);
                String txt9 = "Cuando Estatus del expediente(ESTATUS_EXPEDIENTE)= En proceso de resolucion no debe de capturar (Fecha en la que se concluyó el procedimiento de ejecución),(Fase en la que se concluyó el procedimiento de ejecución)";
                //System.out.println(Arrays.toString(ArrayResult.get(i)));
                HSSFRichTextString texto9 = new HSSFRichTextString(txt9);
                celda9.setCellValue(texto9);
                fila9.setHeight((short) 300);
                coni++;
            }
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
    progressBar.setValue(100);
    }

    public static void SaveFileTo(HSSFWorkbook libro,JProgressBar progressBar,JFrame frame) throws FileNotFoundException, IOException {
        PValidacion validacion = new PValidacion();
        String NombreEntidad=validacion.NENTIDAD;
        String Periodo=validacion.periodo.replace("/", "-");
        DataOutputStream h = null;
        FileDialog d = new FileDialog(new JFrame(), "Save", FileDialog.SAVE);
        d.setFile(NombreEntidad+" "+Periodo+" R"+".xls");
        d.setVisible(true);
        String dir;
        dir = d.getDirectory();
        String nomarchi = dir + d.getFile();
        int Pos = nomarchi.length();
        String Ext = nomarchi.substring(Pos - 4, Pos);
        File oneFile = new File(dir + d.getFile()+".xls");
        System.out.println(Ext);
        if (!dir.equals(null)) {
            //if (Ext.equals(".xls")) {
                FileOutputStream f = new FileOutputStream(oneFile);
                libro.write(f);
                f.close();
                JOptionPane.showMessageDialog(null, "Archivo Guardado Correctamente", "", JOptionPane.INFORMATION_MESSAGE);
                frame.setVisible(false); 
        } else {
                JOptionPane.showMessageDialog(null, "Archivo sin extencion .xls", "", JOptionPane.WARNING_MESSAGE);
            }
        }
  

}
     
